{
  "api/FatturaElettronica.Common.Allegati.html": {
    "href": "api/FatturaElettronica.Common.Allegati.html",
    "title": "Class Allegati | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class Allegati Namespace FatturaElettronica.Common Assembly FatturaElettronica.dll Dati relativi ad eventuale allegato. public class Allegati : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable Allegati Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors Allegati() public Allegati() Allegati(XmlReader) public Allegati(XmlReader r) Parameters r XmlReader Properties AlgoritmoCompressione Algoritmo usato per comprimere l'attachment (ad es. ZIP, RAR, ...) [DataProperty(22)] public string AlgoritmoCompressione { get; set; } Property Value string Attachment Contiene il documento allegato alla fattura; il contenuto è demandato agli accordi tra PA e fornitore. [DataProperty(40)] public byte[] Attachment { get; set; } Property Value byte[] DescrizioneAttachment Descrizione del documento. [DataProperty(34)] public string DescrizioneAttachment { get; set; } Property Value string FormatoAttachment Formato dell'attachment (ad es: TXT, XML, DOC, PDF, ...) [DataProperty(28)] public string FormatoAttachment { get; set; } Property Value string NomeAttachment Nome dell'allegato. [DataProperty(16)] public string NomeAttachment { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Common.Anagrafica.html": {
    "href": "api/FatturaElettronica.Common.Anagrafica.html",
    "title": "Class Anagrafica | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class Anagrafica Namespace FatturaElettronica.Common Assembly FatturaElettronica.dll Represents a Anagrafica object public class Anagrafica : DenominazioneNomeCognome, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DenominazioneNomeCognome Anagrafica Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members DenominazioneNomeCognome.Denominazione DenominazioneNomeCognome.Nome DenominazioneNomeCognome.Cognome DenominazioneNomeCognome.CognomeNome BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors Anagrafica() public Anagrafica() Anagrafica(XmlReader) public Anagrafica(XmlReader r) Parameters r XmlReader Properties CodEORI Gets or sets the CodEORI. [DataProperty(4)] public string CodEORI { get; set; } Property Value string Titolo Gets or sets the Titolo. [DataProperty(3)] public string Titolo { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Common.DatiAnagrafici.html": {
    "href": "api/FatturaElettronica.Common.DatiAnagrafici.html",
    "title": "Class DatiAnagrafici | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiAnagrafici Namespace FatturaElettronica.Common Assembly FatturaElettronica.dll Represents a DatiAnagrafici object public class DatiAnagrafici : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiAnagrafici Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Derived DatiAnagraficiVettore DatiAnagraficiCedentePrestatore DatiAnagraficiCessionarioCommittente Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiAnagrafici() Dati anagrafici, professionali e fiscali public DatiAnagrafici() DatiAnagrafici(XmlReader) public DatiAnagrafici(XmlReader r) Parameters r XmlReader Properties Anagrafica Dati anagrafici identificativi del soggetto. [DataProperty(2)] public Anagrafica Anagrafica { get; set; } Property Value Anagrafica CodiceFiscale Numero di Codice Fiscale. [DataProperty(1)] public string CodiceFiscale { get; set; } Property Value string IdFiscaleIVA Numero di identificazione fiscale ai fini IVA; i primi due caratteri rappresentano il paese ed i restanti il codice vero e proprio che, per i residenti in Italia, corrisponde al numero di partita IVA. [DataProperty(0)] public IdFiscaleIVA IdFiscaleIVA { get; set; } Property Value IdFiscaleIVA"
  },
  "api/FatturaElettronica.Common.DatiDocumento.html": {
    "href": "api/FatturaElettronica.Common.DatiDocumento.html",
    "title": "Class DatiDocumento | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiDocumento Namespace FatturaElettronica.Common Assembly FatturaElettronica.dll Informazioni relative ad un documento a cui si fa riferimento. public abstract class DatiDocumento : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiDocumento Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Derived DatiContratto DatiConvenzione DatiFattureCollegate DatiOrdineAcquisto DatiRicezione Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiDocumento() protected DatiDocumento() DatiDocumento(XmlReader) protected DatiDocumento(XmlReader r) Parameters r XmlReader Properties CodiceCIG Codice Identificativo della Gara. [DataProperty(65)] public string CodiceCIG { get; set; } Property Value string CodiceCUP Codice gestito dal CIPE che caratterizza ogni progetto di investimento pubblico (Codice Unitario Progetto). [DataProperty(58)] public string CodiceCUP { get; set; } Property Value string CodiceCommessaConvenzione Codice della commessa o della convenzione. [DataProperty(52)] public string CodiceCommessaConvenzione { get; set; } Property Value string Data Data del documento a cui si fa riferimento. [DataProperty(38)] public DateTime? Data { get; set; } Property Value DateTime? IdDocumento Numero del documento a cui si fa riferimento. [DataProperty(32)] public string IdDocumento { get; set; } Property Value string NumItem Identificativo della singola voce all'interno del documento (ad esempio, nel caso di ordine di acquisto, è il numero della linea dell'ordine di acquisto, oppure, nel caso di contratto, è il numero della linea del contratto, etc.) [DataProperty(46)] public string NumItem { get; set; } Property Value string RiferimentoNumeroLinea Linee di dettaglio della fattura a cui si fa riferimento. [DataProperty(26)] public List<int> RiferimentoNumeroLinea { get; set; } Property Value List<int> Remarks Se il riferimento è all'intera fattura non viene valorizzato."
  },
  "api/FatturaElettronica.Common.DenominazioneNomeCognome.html": {
    "href": "api/FatturaElettronica.Common.DenominazioneNomeCognome.html",
    "title": "Class DenominazioneNomeCognome | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DenominazioneNomeCognome Namespace FatturaElettronica.Common Assembly FatturaElettronica.dll Represents a Anagrafica object public class DenominazioneNomeCognome : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DenominazioneNomeCognome Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Derived Anagrafica RappresentanteFiscaleCessionarioCommittente RappresentanteFiscaleCessionarioCommittente Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DenominazioneNomeCognome() public DenominazioneNomeCognome() DenominazioneNomeCognome(XmlReader) public DenominazioneNomeCognome(XmlReader r) Parameters r XmlReader Properties Cognome Gets or sets the Cognome. [DataProperty(2)] public string Cognome { get; set; } Property Value string CognomeNome Returns Cognome and Nome as a single value. [JsonIgnore] public string CognomeNome { get; } Property Value string Remarks This is not a OrderedDataProperty so it will not be serialized to XML. Denominazione Gets or sets the Denominazione. [DataProperty(0)] public string Denominazione { get; set; } Property Value string Nome Gets or sets the Nome. [DataProperty(1)] public string Nome { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Common.html": {
    "href": "api/FatturaElettronica.Common.html",
    "title": "Namespace FatturaElettronica.Common | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Common Classes Allegati Dati relativi ad eventuale allegato. Anagrafica Represents a Anagrafica object DatiAnagrafici Represents a DatiAnagrafici object DatiDocumento Informazioni relative ad un documento a cui si fa riferimento. DenominazioneNomeCognome Represents a Anagrafica object IdFiscaleIVA Numero di identificazione fiscale ai fini IVA; i primi due caratteri rappresentano il paese ed i restanti il codice vero e proprio che, per i residenti in Italia, corrisponde al numero di partita IVA. Località Represents a Anagrafica object RappresentanteFiscale Dati relativi al rappresentante fiscale del cedente / prestatore. ScontoMaggiorazione Eventuale sconto o maggiorazione applicati sul totale documento. StabileOrganizzazione"
  },
  "api/FatturaElettronica.Common.IdFiscaleIVA.html": {
    "href": "api/FatturaElettronica.Common.IdFiscaleIVA.html",
    "title": "Class IdFiscaleIVA | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class IdFiscaleIVA Namespace FatturaElettronica.Common Assembly FatturaElettronica.dll Numero di identificazione fiscale ai fini IVA; i primi due caratteri rappresentano il paese ed i restanti il codice vero e proprio che, per i residenti in Italia, corrisponde al numero di partita IVA. public class IdFiscaleIVA : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable IdFiscaleIVA Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Derived IdTrasmittente IdTrasmittente Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors IdFiscaleIVA() public IdFiscaleIVA() IdFiscaleIVA(XmlReader) public IdFiscaleIVA(XmlReader r) Parameters r XmlReader Properties IdCodice Codice identificativo fiscale. [DataProperty(23)] public string IdCodice { get; set; } Property Value string IdPaese Codice della nazione espresso secondo lo standard ISO 3166-1 alpha-2 code. [DataProperty(17)] public string IdPaese { get; set; } Property Value string Methods ToString() public override string ToString() Returns string"
  },
  "api/FatturaElettronica.Common.Località.html": {
    "href": "api/FatturaElettronica.Common.Località.html",
    "title": "Class Località | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class Località Namespace FatturaElettronica.Common Assembly FatturaElettronica.dll Represents a Anagrafica object public abstract class Località : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable Località Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Derived StabileOrganizzazione IndirizzoResa SedeCedentePrestatore SedeCessionarioCommittente SedeCedentePrestatore SedeCessionarioCommittente Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors Località() Constructor. protected Località() Località(XmlReader) protected Località(XmlReader r) Parameters r XmlReader Properties CAP Codice Avviamento Postale. [DataProperty(36)] public string CAP { get; set; } Property Value string Comune Comune. [DataProperty(42)] public string Comune { get; set; } Property Value string Indirizzo Indirizzo (nome della via, piazza etc.) [DataProperty(24)] public string Indirizzo { get; set; } Property Value string Nazione Codice della nazione espresso secondo lo standard ISO 3166-1 alpha-2 code. [DataProperty(54)] public string Nazione { get; set; } Property Value string NumeroCivico Numero civico riferito all'indirizzo (non indicare se già presente nel campo indirizzo). [DataProperty(30)] public string NumeroCivico { get; set; } Property Value string Provincia Sigla della provincia di appartenenza del comune. [DataProperty(48)] public string Provincia { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Common.RappresentanteFiscale.html": {
    "href": "api/FatturaElettronica.Common.RappresentanteFiscale.html",
    "title": "Class RappresentanteFiscale | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class RappresentanteFiscale Namespace FatturaElettronica.Common Assembly FatturaElettronica.dll Dati relativi al rappresentante fiscale del cedente / prestatore. public abstract class RappresentanteFiscale : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable RappresentanteFiscale Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Derived RappresentanteFiscale TerzoIntermediarioOSoggettoEmittente Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors RappresentanteFiscale() Dati relativi al rappresentante fiscale del cedente / prestatore. public RappresentanteFiscale() RappresentanteFiscale(XmlReader) public RappresentanteFiscale(XmlReader r) Parameters r XmlReader Properties DatiAnagrafici Dati anagrafici del rappresentante fiscale del cedente / prestatore. [DataProperty(27)] public DatiAnagrafici DatiAnagrafici { get; set; } Property Value DatiAnagrafici"
  },
  "api/FatturaElettronica.Common.ScontoMaggiorazione.html": {
    "href": "api/FatturaElettronica.Common.ScontoMaggiorazione.html",
    "title": "Class ScontoMaggiorazione | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class ScontoMaggiorazione Namespace FatturaElettronica.Common Assembly FatturaElettronica.dll Eventuale sconto o maggiorazione applicati sul totale documento. public class ScontoMaggiorazione : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable ScontoMaggiorazione Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Properties Importo Importo dello sconto o della maggiorazione. [DataProperty(27)] public decimal? Importo { get; set; } Property Value decimal? Percentuale Percentuale di sconto o di maggiorazione. [DataProperty(21)] public decimal? Percentuale { get; set; } Property Value decimal? Tipo Indica se trattasi di sconto o di maggiorazione. [DataProperty(15)] public string Tipo { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Common.StabileOrganizzazione.html": {
    "href": "api/FatturaElettronica.Common.StabileOrganizzazione.html",
    "title": "Class StabileOrganizzazione | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class StabileOrganizzazione Namespace FatturaElettronica.Common Assembly FatturaElettronica.dll public class StabileOrganizzazione : Località, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable Località StabileOrganizzazione Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members Località.Indirizzo Località.NumeroCivico Località.CAP Località.Comune Località.Provincia Località.Nazione BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors StabileOrganizzazione() public StabileOrganizzazione() StabileOrganizzazione(XmlReader) public StabileOrganizzazione(XmlReader r) Parameters r XmlReader"
  },
  "api/FatturaElettronica.Core.BaseClass.html": {
    "href": "api/FatturaElettronica.Core.BaseClass.html",
    "title": "Class BaseClass | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class BaseClass Namespace FatturaElettronica.Core Assembly FatturaElettronica.dll The class all domain objects must inherit from. Currently supports: IEquatable so you can easily compare complex BusinessObjects togheter. Binding (INotififyPropertyChanged and IDataErrorInfo). TODO: BeginEdit()/EndEdit() combination, and rollbacks for cancels (IEditableObject). public abstract class BaseClass : INotifyPropertyChanged, IEquatable<BaseClass> Inheritance object BaseClass Implements INotifyPropertyChanged IEquatable<BaseClass> Derived BaseClassSerializable Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CleanString(string) Cleans a string by ensuring it isn't null and trimming it. protected string CleanString(string s) Parameters s string The string to clean. Returns string Equals(BaseClass) public bool Equals(BaseClass other) Parameters other BaseClass Returns bool Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetAllDataProperties() Provides a list of actual data properties for the current BusinessObject instance, sorted by writing order. protected IEnumerable<PropertyInfo> GetAllDataProperties() Returns IEnumerable<PropertyInfo> A enumerable list of PropertyInfo instances. Remarks Only properties flagged with the OrderedDataProperty attribute will be returned. GetHashCode() public override int GetHashCode() Returns int GetKnownNonDataProperty(string) protected PropertyInfo GetKnownNonDataProperty(string name) Parameters name string Returns PropertyInfo IsEmpty() Checks wether a BusinessObject instance is empty. public virtual bool IsEmpty() Returns bool Returns true if the object is empty; false otherwise. SetProperty<T>(ref T, T, string) protected bool SetProperty<T>(ref T storage, T value, string propertyName = null) Parameters storage T value T propertyName string Returns bool Type Parameters T Events PropertyChanged Occurs when any properties are changed on this object. public event PropertyChangedEventHandler PropertyChanged Event Type PropertyChangedEventHandler Operators operator ==(BaseClass, BaseClass) public static bool operator ==(BaseClass o1, BaseClass o2) Parameters o1 BaseClass o2 BaseClass Returns bool operator !=(BaseClass, BaseClass) public static bool operator !=(BaseClass o1, BaseClass o2) Parameters o1 BaseClass o2 BaseClass Returns bool"
  },
  "api/FatturaElettronica.Core.BaseClassSerializable.html": {
    "href": "api/FatturaElettronica.Core.BaseClassSerializable.html",
    "title": "Class BaseClassSerializable | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class BaseClassSerializable Namespace FatturaElettronica.Core Assembly FatturaElettronica.dll XML (de)serialization; JSON (de)serialization. public class BaseClassSerializable : BaseClass, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Derived Allegati DatiAnagrafici DatiDocumento DenominazioneNomeCognome IdFiscaleIVA Località RappresentanteFiscale ScontoMaggiorazione FatturaBase AltriDatiGestionali CodiceArticolo DatiBeniServizi DatiRiepilogo DettaglioLinee DatiBollo DatiCassaPrevidenziale DatiDDT DatiGenerali DatiGeneraliDocumento DatiRitenuta DatiSAL DatiTrasporto FatturaPrincipale DatiPagamento DettaglioPagamento DatiVeicoli FatturaElettronicaBody CedentePrestatore Contatti IscrizioneREA CessionarioCommittente ContattiTrasmittente DatiTrasmissione FatturaElettronicaHeader DatiBeniServizi DatiIVA DatiFatturaRettificata DatiGenerali DatiGeneraliDocumento FatturaElettronicaBody CedentePrestatore IscrizioneREA AltriDatiIdentificativi CessionarioCommittente IdentificativiFiscali DatiTrasmissione FatturaElettronicaHeader RappresentanteFiscale Inherited Members BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors BaseClassSerializable() Constructor. protected BaseClassSerializable() BaseClassSerializable(XmlReader) protected BaseClassSerializable(XmlReader r) Parameters r XmlReader Properties XmlOptions protected XmlOptions XmlOptions { get; set; } Property Value XmlOptions Methods FromJson(Utf8JsonReader) Deserializes the current BusinessObject from a json stream. public virtual void FromJson(Utf8JsonReader r) Parameters r Utf8JsonReader Active json stream reader Remarks Side effects on parse handling GetSchema() public XmlSchema GetSchema() Returns XmlSchema ReadAndHandleXmlStartElement(XmlReader) protected virtual void ReadAndHandleXmlStartElement(XmlReader r) Parameters r XmlReader ReadXml(XmlReader) Deserializes the current BusinessObject from a XML stream. public virtual void ReadXml(XmlReader r) Parameters r XmlReader Active XML stream reader. Remarks Reads the outer element. Leaves the reader at the same depth. ToJson() Serializes the instance to JSON public virtual string ToJson() Returns string A JSON string representing the class instance. ToJson(JsonOptions) Serializes the class to JSON. public virtual string ToJson(JsonOptions jsonOptions) Parameters jsonOptions JsonOptions JSON formatting options. Returns string A JSON string representing the class instance. WriteXml(XmlWriter) Serializes the current BusinessObject instance to a XML stream. public virtual void WriteXml(XmlWriter w) Parameters w XmlWriter Active XML stream writer. Remarks Writes only its inner content, not the outer element. Leaves the writer at the same depth."
  },
  "api/FatturaElettronica.Core.DataProperty.html": {
    "href": "api/FatturaElettronica.Core.DataProperty.html",
    "title": "Class DataProperty | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DataProperty Namespace FatturaElettronica.Core Assembly FatturaElettronica.dll Use this attribute to flag DataObject properties which are meant to be represent actual Business Object values (i.e. LastName, but not IsValid). Also, in order for the Read/Write XML methods to work properly, remember that these properties should be defined in the same order with which they are expected to appear in the XML file. [AttributeUsage(AttributeTargets.Property)] public sealed class DataProperty : Attribute Inheritance object Attribute DataProperty Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors DataProperty(int) public DataProperty(int order = 0) Parameters order int Properties Order public int Order { get; } Property Value int"
  },
  "api/FatturaElettronica.Core.html": {
    "href": "api/FatturaElettronica.Core.html",
    "title": "Namespace FatturaElettronica.Core | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Core Classes BaseClass The class all domain objects must inherit from. Currently supports: IEquatable so you can easily compare complex BusinessObjects togheter. Binding (INotififyPropertyChanged and IDataErrorInfo). TODO: BeginEdit()/EndEdit() combination, and rollbacks for cancels (IEditableObject). BaseClassSerializable XML (de)serialization; JSON (de)serialization. DataProperty Use this attribute to flag DataObject properties which are meant to be represent actual Business Object values (i.e. LastName, but not IsValid). Also, in order for the Read/Write XML methods to work properly, remember that these properties should be defined in the same order with which they are expected to appear in the XML file. IgnoreXmlDateFormat Use this attribute to flag DateTime properties which should not be serialized to XML using the class XmlDateFormat property. JsonParseException Json parsing exception ObjectExtensions TypeExtensions XmlOptions XML serialization options for BusinessObject instances. Enums JsonOptions Provides formatting optons for JSON output."
  },
  "api/FatturaElettronica.Core.IgnoreXmlDateFormat.html": {
    "href": "api/FatturaElettronica.Core.IgnoreXmlDateFormat.html",
    "title": "Class IgnoreXmlDateFormat | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class IgnoreXmlDateFormat Namespace FatturaElettronica.Core Assembly FatturaElettronica.dll Use this attribute to flag DateTime properties which should not be serialized to XML using the class XmlDateFormat property. [AttributeUsage(AttributeTargets.Property)] public sealed class IgnoreXmlDateFormat : Attribute Inheritance object Attribute IgnoreXmlDateFormat Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/FatturaElettronica.Core.JsonOptions.html": {
    "href": "api/FatturaElettronica.Core.JsonOptions.html",
    "title": "Enum JsonOptions | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Enum JsonOptions Namespace FatturaElettronica.Core Assembly FatturaElettronica.dll Provides formatting optons for JSON output. public enum JsonOptions Fields Indented = 1 None = 0 Remarks Currently a wrapper around Newtonsoft.Json.Formatting. We provide it so in the future we can remove json.net dependancy without changing the external API."
  },
  "api/FatturaElettronica.Core.JsonParseException.html": {
    "href": "api/FatturaElettronica.Core.JsonParseException.html",
    "title": "Class JsonParseException | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class JsonParseException Namespace FatturaElettronica.Core Assembly FatturaElettronica.dll Json parsing exception public class JsonParseException : Exception, ISerializable Inheritance object Exception JsonParseException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors JsonParseException(string, Utf8JsonReader) public JsonParseException(string message, Utf8JsonReader reader) Parameters message string reader Utf8JsonReader"
  },
  "api/FatturaElettronica.Core.ObjectExtensions.html": {
    "href": "api/FatturaElettronica.Core.ObjectExtensions.html",
    "title": "Class ObjectExtensions | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class ObjectExtensions Namespace FatturaElettronica.Core Assembly FatturaElettronica.dll public static class ObjectExtensions Inheritance object ObjectExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetHashCodeFromFields(params object[]) Allows GetHashCode() method to return a Hash based ont the object properties. public static int GetHashCodeFromFields(params object[] fields) Parameters fields object[] The list of fields to include in the hash generation. Returns int"
  },
  "api/FatturaElettronica.Core.TypeExtensions.html": {
    "href": "api/FatturaElettronica.Core.TypeExtensions.html",
    "title": "Class TypeExtensions | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class TypeExtensions Namespace FatturaElettronica.Core Assembly FatturaElettronica.dll public static class TypeExtensions Inheritance object TypeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetMethod(Type, string) public static MethodInfo GetMethod(this Type type, string name) Parameters type Type name string Returns MethodInfo IsGenericList(Type) public static bool IsGenericList(this Type type) Parameters type Type Returns bool IsSubclassOfBusinessObject(Type) public static bool IsSubclassOfBusinessObject(this Type type) Parameters type Type Returns bool"
  },
  "api/FatturaElettronica.Core.XmlOptions.html": {
    "href": "api/FatturaElettronica.Core.XmlOptions.html",
    "title": "Class XmlOptions | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class XmlOptions Namespace FatturaElettronica.Core Assembly FatturaElettronica.dll XML serialization options for BusinessObject instances. public class XmlOptions Inheritance object XmlOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DateTimeFormat Format string to be applied on DateTime properties. This format will be ignored if the IgnoreXmlDateFormat attribute has been set for the property. public string DateTimeFormat { get; set; } Property Value string DecimalFormat Format string to be applied on Decimal properties. public string DecimalFormat { get; set; } Property Value string SerializeEmptyBusinessObjects Whether empty BusinessObject children should be serialized or not. Defaults to false . public bool SerializeEmptyBusinessObjects { get; set; } Property Value bool SerializeEmptyStrings Wether emty strings should be serialized or not. Defaults to false . public bool SerializeEmptyStrings { get; set; } Property Value bool SerializeNullValues Whether null properties should be serialized or not. Defaults to false . public bool SerializeNullValues { get; set; } Property Value bool"
  },
  "api/FatturaElettronica.Defaults.FormatoTrasmissione.html": {
    "href": "api/FatturaElettronica.Defaults.FormatoTrasmissione.html",
    "title": "Class FormatoTrasmissione | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class FormatoTrasmissione Namespace FatturaElettronica.Defaults Assembly FatturaElettronica.dll public static class FormatoTrasmissione Inheritance object FormatoTrasmissione Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Privati public static string Privati { get; } Property Value string PubblicaAmministrazione public static string PubblicaAmministrazione { get; } Property Value string Semplificata public static string Semplificata { get; } Property Value string"
  },
  "api/FatturaElettronica.Defaults.html": {
    "href": "api/FatturaElettronica.Defaults.html",
    "title": "Namespace FatturaElettronica.Defaults | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Defaults Classes FormatoTrasmissione RootElement RootElement.XmlAttributeString Versione Enums Instance"
  },
  "api/FatturaElettronica.Defaults.Instance.html": {
    "href": "api/FatturaElettronica.Defaults.Instance.html",
    "title": "Enum Instance | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Enum Instance Namespace FatturaElettronica.Defaults Assembly FatturaElettronica.dll public enum Instance Fields Privati = 1 PubblicaAmministrazione = 0 Semplificata = 2"
  },
  "api/FatturaElettronica.Defaults.RootElement.html": {
    "href": "api/FatturaElettronica.Defaults.RootElement.html",
    "title": "Class RootElement | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class RootElement Namespace FatturaElettronica.Defaults Assembly FatturaElettronica.dll public class RootElement Inheritance object RootElement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ExtraAttributes public static RootElement.XmlAttributeString[] ExtraAttributes { get; set; } Property Value XmlAttributeString[] Prefix public static string Prefix { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Defaults.RootElement.XmlAttributeString.html": {
    "href": "api/FatturaElettronica.Defaults.RootElement.XmlAttributeString.html",
    "title": "Class RootElement.XmlAttributeString | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class RootElement.XmlAttributeString Namespace FatturaElettronica.Defaults Assembly FatturaElettronica.dll public class RootElement.XmlAttributeString Inheritance object RootElement.XmlAttributeString Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields LocalName public string LocalName Field Value string Prefix public string Prefix Field Value string ns public string ns Field Value string value public string value Field Value string"
  },
  "api/FatturaElettronica.Defaults.Versione.html": {
    "href": "api/FatturaElettronica.Defaults.Versione.html",
    "title": "Class Versione | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class Versione Namespace FatturaElettronica.Defaults Assembly FatturaElettronica.dll public static class Versione Inheritance object Versione Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Controlli public static string Controlli { get; } Property Value string Trasmissione public static string Trasmissione { get; } Property Value string TrasmissioneSemplificata public static string TrasmissioneSemplificata { get; } Property Value string"
  },
  "api/FatturaElettronica.Extensions.FatturaElettronicaExtensions.html": {
    "href": "api/FatturaElettronica.Extensions.FatturaElettronicaExtensions.html",
    "title": "Class FatturaElettronicaExtensions | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class FatturaElettronicaExtensions Namespace FatturaElettronica.Extensions Assembly FatturaElettronica.dll public static class FatturaElettronicaExtensions Inheritance object FatturaElettronicaExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Validate<T>(T) public static ValidationResult Validate<T>(this T obj) where T : BaseClassSerializable Parameters obj T Returns ValidationResult Type Parameters T"
  },
  "api/FatturaElettronica.Extensions.FatturaElettronicaFileNameExtensionType.html": {
    "href": "api/FatturaElettronica.Extensions.FatturaElettronicaFileNameExtensionType.html",
    "title": "Enum FatturaElettronicaFileNameExtensionType | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Enum FatturaElettronicaFileNameExtensionType Namespace FatturaElettronica.Extensions Assembly FatturaElettronica.dll public enum FatturaElettronicaFileNameExtensionType Fields Plain = 0 Signed = 1"
  },
  "api/FatturaElettronica.Extensions.FatturaElettronicaFileNameGenerator.html": {
    "href": "api/FatturaElettronica.Extensions.FatturaElettronicaFileNameGenerator.html",
    "title": "Class FatturaElettronicaFileNameGenerator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class FatturaElettronicaFileNameGenerator Namespace FatturaElettronica.Extensions Assembly FatturaElettronica.dll Factory per la creazione del filename public class FatturaElettronicaFileNameGenerator Inheritance object FatturaElettronicaFileNameGenerator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FatturaElettronicaFileNameGenerator(IdFiscaleIVA, FatturaElettronicaFileNameExtensionType) public FatturaElettronicaFileNameGenerator(IdFiscaleIVA idFiscale, FatturaElettronicaFileNameExtensionType fatturaType = FatturaElettronicaFileNameExtensionType.Plain) Parameters idFiscale IdFiscaleIVA fatturaType FatturaElettronicaFileNameExtensionType Properties CurrentIndex public int? CurrentIndex { get; set; } Property Value int? Methods GetNextFileName(int) Restituisce il nome del file partendo dall'ultimo numero di fattura staccata public string GetNextFileName(int lastBillingNumber) Parameters lastBillingNumber int Returns string GetNextFileName(string) Restituisce il nome del file partendo dall'ultimo nome del file generato public string GetNextFileName(string lastBillingNumber) Parameters lastBillingNumber string Returns string"
  },
  "api/FatturaElettronica.Extensions.html": {
    "href": "api/FatturaElettronica.Extensions.html",
    "title": "Namespace FatturaElettronica.Extensions | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Extensions Classes FatturaElettronicaExtensions FatturaElettronicaFileNameGenerator Factory per la creazione del filename HtmlExtensions JsonExtensions SignatureException SignedFileExtensions XmlExtensions Enums FatturaElettronicaFileNameExtensionType"
  },
  "api/FatturaElettronica.Extensions.HtmlExtensions.html": {
    "href": "api/FatturaElettronica.Extensions.HtmlExtensions.html",
    "title": "Class HtmlExtensions | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class HtmlExtensions Namespace FatturaElettronica.Extensions Assembly FatturaElettronica.dll public static class HtmlExtensions Inheritance object HtmlExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods WriteHtml(FatturaBase, string, string) public static void WriteHtml(this FatturaBase fattura, string outPath, string xslPath) Parameters fattura FatturaBase outPath string xslPath string"
  },
  "api/FatturaElettronica.Extensions.JsonExtensions.html": {
    "href": "api/FatturaElettronica.Extensions.JsonExtensions.html",
    "title": "Class JsonExtensions | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class JsonExtensions Namespace FatturaElettronica.Extensions Assembly FatturaElettronica.dll public static class JsonExtensions Inheritance object JsonExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FromJson(FatturaBase, string) public static void FromJson(this FatturaBase fattura, string json) Parameters fattura FatturaBase json string"
  },
  "api/FatturaElettronica.Extensions.Resources.ErrorMessages.html": {
    "href": "api/FatturaElettronica.Extensions.Resources.ErrorMessages.html",
    "title": "Class ErrorMessages | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class ErrorMessages Namespace FatturaElettronica.Extensions.Resources Assembly FatturaElettronica.dll public class ErrorMessages Inheritance object ErrorMessages Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Culture public static CultureInfo Culture { get; set; } Property Value CultureInfo FirmaException public static string FirmaException { get; } Property Value string IdCodiceIsMissing public static string IdCodiceIsMissing { get; } Property Value string IdFiscaleIsMissing public static string IdFiscaleIsMissing { get; } Property Value string IdPaeseIsWrongOrMissing public static string IdPaeseIsWrongOrMissing { get; } Property Value string LastBillingNumberIsTooLong public static string LastBillingNumberIsTooLong { get; } Property Value string PfxIsMissing public static string PfxIsMissing { get; } Property Value string ProgressivoOverflow public static string ProgressivoOverflow { get; } Property Value string ResourceManager public static ResourceManager ResourceManager { get; } Property Value ResourceManager SignatureException public static string SignatureException { get; } Property Value string"
  },
  "api/FatturaElettronica.Extensions.Resources.html": {
    "href": "api/FatturaElettronica.Extensions.Resources.html",
    "title": "Namespace FatturaElettronica.Extensions.Resources | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Extensions.Resources Classes ErrorMessages"
  },
  "api/FatturaElettronica.Extensions.SignatureException.html": {
    "href": "api/FatturaElettronica.Extensions.SignatureException.html",
    "title": "Class SignatureException | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class SignatureException Namespace FatturaElettronica.Extensions Assembly FatturaElettronica.dll public class SignatureException : Exception, ISerializable Inheritance object Exception SignatureException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SignatureException(string) public SignatureException(string message) Parameters message string"
  },
  "api/FatturaElettronica.Extensions.SignedFileExtensions.html": {
    "href": "api/FatturaElettronica.Extensions.SignedFileExtensions.html",
    "title": "Class SignedFileExtensions | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class SignedFileExtensions Namespace FatturaElettronica.Extensions Assembly FatturaElettronica.dll public static class SignedFileExtensions Inheritance object SignedFileExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ParseSignature(Stream, bool) public static MemoryStream ParseSignature(Stream stream, bool validateSignature) Parameters stream Stream validateSignature bool Returns MemoryStream ReadXmlSigned(FatturaBase, Stream, bool) public static void ReadXmlSigned(this FatturaBase fattura, Stream stream, bool validateSignature = true) Parameters fattura FatturaBase stream Stream validateSignature bool ReadXmlSigned(FatturaBase, string, bool) public static void ReadXmlSigned(this FatturaBase fattura, string filePath, bool validateSignature = true) Parameters fattura FatturaBase filePath string validateSignature bool ReadXmlSignedBase64(FatturaBase, string, bool) public static void ReadXmlSignedBase64(this FatturaBase fattura, string filePath, bool validateSignature = true) Parameters fattura FatturaBase filePath string validateSignature bool WriteXmlSigned(FatturaBase, X509Certificate2, string) public static void WriteXmlSigned(this FatturaBase fattura, X509Certificate2 cert, string p7mFilePath) Parameters fattura FatturaBase cert X509Certificate2 p7mFilePath string WriteXmlSigned(FatturaBase, string, string, string) public static void WriteXmlSigned(this FatturaBase fattura, string pfxFile, string pfxPassword, string p7mFilePath) Parameters fattura FatturaBase pfxFile string pfxPassword string p7mFilePath string"
  },
  "api/FatturaElettronica.Extensions.XmlExtensions.html": {
    "href": "api/FatturaElettronica.Extensions.XmlExtensions.html",
    "title": "Class XmlExtensions | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class XmlExtensions Namespace FatturaElettronica.Extensions Assembly FatturaElettronica.dll public static class XmlExtensions Inheritance object XmlExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ReadXml(FatturaBase, Stream) public static void ReadXml(this FatturaBase fattura, Stream stream) Parameters fattura FatturaBase stream Stream ReadXml(FatturaBase, string) public static void ReadXml(this FatturaBase fattura, string filePath) Parameters fattura FatturaBase filePath string WriteXml(FatturaBase, string) public static void WriteXml(this FatturaBase fattura, string filePath) Parameters fattura FatturaBase filePath string"
  },
  "api/FatturaElettronica.FatturaBase.html": {
    "href": "api/FatturaElettronica.FatturaBase.html",
    "title": "Class FatturaBase | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class FatturaBase Namespace FatturaElettronica Assembly FatturaElettronica.dll public abstract class FatturaBase : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable FatturaBase Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Derived FatturaOrdinaria FatturaSemplificata Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) HtmlExtensions.WriteHtml(FatturaBase, string, string) JsonExtensions.FromJson(FatturaBase, string) SignedFileExtensions.ReadXmlSigned(FatturaBase, Stream, bool) SignedFileExtensions.ReadXmlSigned(FatturaBase, string, bool) SignedFileExtensions.ReadXmlSignedBase64(FatturaBase, string, bool) SignedFileExtensions.WriteXmlSigned(FatturaBase, X509Certificate2, string) SignedFileExtensions.WriteXmlSigned(FatturaBase, string, string, string) XmlExtensions.ReadXml(FatturaBase, Stream) XmlExtensions.ReadXml(FatturaBase, string) XmlExtensions.WriteXml(FatturaBase, string) Properties SistemaEmittente public string SistemaEmittente { get; set; } Property Value string Methods CreateInstanceFromXml(Stream, bool) public static FatturaBase CreateInstanceFromXml(Stream stream, bool validateSignature = false) Parameters stream Stream validateSignature bool Returns FatturaBase GetFormatoTrasmissione() public abstract string GetFormatoTrasmissione() Returns string GetLocalName() protected abstract string GetLocalName() Returns string GetNameSpace() protected abstract string GetNameSpace() Returns string ReadAndHandleXmlStartElement(XmlReader) protected override void ReadAndHandleXmlStartElement(XmlReader r) Parameters r XmlReader ReadXml(XmlReader) Deserializes the current BusinessObject from a XML stream. public override void ReadXml(XmlReader r) Parameters r XmlReader Active XML stream reader. Remarks Reads the outer element. Leaves the reader at the same depth. WriteXml(XmlWriter) Serializes the current BusinessObject instance to a XML stream. public override void WriteXml(XmlWriter w) Parameters w XmlWriter Active XML stream writer. Remarks Writes only its inner content, not the outer element. Leaves the writer at the same depth."
  },
  "api/FatturaElettronica.html": {
    "href": "api/FatturaElettronica.html",
    "title": "Namespace FatturaElettronica | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica Classes FatturaBase"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiBeniServizi.AltriDatiGestionali.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiBeniServizi.AltriDatiGestionali.html",
    "title": "Class AltriDatiGestionali | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class AltriDatiGestionali Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiBeniServizi Assembly FatturaElettronica.dll Blocco che consente di inserire, con riferimento ad una linea di dettaglio, diverse tipologie di informazioni utili ai fini amministrativi, gestionali, etc. public class AltriDatiGestionali : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable AltriDatiGestionali Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors AltriDatiGestionali() public AltriDatiGestionali() AltriDatiGestionali(XmlReader) public AltriDatiGestionali(XmlReader r) Parameters r XmlReader Properties RiferimentoData Campo in cui inserire una data riferita alla tiplogia di informazione. [DataProperty(38)] public DateTime? RiferimentoData { get; set; } Property Value DateTime? RiferimentoNumero Campo in cui inserire un valore numerico riferito alla tipologia di informazione. [DataProperty(32)] public decimal? RiferimentoNumero { get; set; } Property Value decimal? RiferimentoTesto Campo in cui inserire un valore alfanumerico riferito alla tipologia di informazione. [DataProperty(26)] public string RiferimentoTesto { get; set; } Property Value string TipoDato Codice che identifica la tipologia di informazione [DataProperty(20)] public string TipoDato { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiBeniServizi.CodiceArticolo.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiBeniServizi.CodiceArticolo.html",
    "title": "Class CodiceArticolo | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class CodiceArticolo Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiBeniServizi Assembly FatturaElettronica.dll Eventuale codifica dell'articolo. public class CodiceArticolo : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable CodiceArticolo Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors CodiceArticolo() public CodiceArticolo() CodiceArticolo(XmlReader) public CodiceArticolo(XmlReader r) Parameters r XmlReader Properties CodiceTipo Indica la tipologia di codice articolo (TARIC, CPV, EAN, SSC, ...) [DataProperty(17)] public string CodiceTipo { get; set; } Property Value string CodiceValore Indica il valore del codice articolo corrispondente alla tipologia riportata nel campo CodiceTipo. [DataProperty(23)] public string CodiceValore { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiBeniServizi.DatiBeniServizi.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiBeniServizi.DatiBeniServizi.html",
    "title": "Class DatiBeniServizi | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiBeniServizi Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiBeniServizi Assembly FatturaElettronica.dll Blocco sempre obbligatorio contenente natura, qualità e quantità dei beni / servizi formanti oggetto dell'operazione. public class DatiBeniServizi : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiBeniServizi Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiBeniServizi() Blocco sempre obbligatorio contenente natura, qualità e quantità dei beni / servizi formanti oggetto dell'operazione. public DatiBeniServizi() DatiBeniServizi(XmlReader) public DatiBeniServizi(XmlReader r) Parameters r XmlReader Properties DatiRiepilogo Blocco sempre obbligatorio contenente i dati di riepilogo per ogni aliquota IVA o natura. [DataProperty(36)] public List<DatiRiepilogo> DatiRiepilogo { get; set; } Property Value List<DatiRiepilogo> DettaglioLinee Dati generali del documento principale. [DataProperty(30)] public List<DettaglioLinee> DettaglioLinee { get; set; } Property Value List<DettaglioLinee>"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiBeniServizi.DatiRiepilogo.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiBeniServizi.DatiRiepilogo.html",
    "title": "Class DatiRiepilogo | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiRiepilogo Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiBeniServizi Assembly FatturaElettronica.dll Blocco sempre obbligatorio contenente i dati di riepilogo per ogni aliquota IVA o natura. public class DatiRiepilogo : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiRiepilogo Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiRiepilogo() public DatiRiepilogo() DatiRiepilogo(XmlReader) public DatiRiepilogo(XmlReader r) Parameters r XmlReader Properties AliquotaIVA Aliquota (%) IVA. [DataProperty(17)] public decimal AliquotaIVA { get; set; } Property Value decimal Arrotondamento Arrotondamento sull'imponibili o sull'imposta. [DataProperty(35)] public decimal? Arrotondamento { get; set; } Property Value decimal? EsigibilitaIVA Eseigibilità IVA (immediata ai sensi Art. 6 comma 5 del DPR 633 1972, oppure differita). [DataProperty(54)] public string EsigibilitaIVA { get; set; } Property Value string ImponibileImporto Questo valore rappresenta: base imponibile per le operazioni soggette ad IVA; importo, per le operazioni che non rientrano tra quelle imponibili. [DataProperty(42)] public decimal ImponibileImporto { get; set; } Property Value decimal Imposta Imposta risultante dall'applicazione dell'aliquota IVA all'imponibile. [DataProperty(48)] public decimal Imposta { get; set; } Property Value decimal Natura Natura delle operazioni qualora non rientrino tra quelle imponibili. [DataProperty(23)] public string Natura { get; set; } Property Value string RiferimentoNormativo Norma di riferimento (obbligatoria nei casi in cui Natura è valorizzato). [DataProperty(60)] public string RiferimentoNormativo { get; set; } Property Value string SpeseAccessorie Corrispettivi relativi alle cessioni accessorie (es. imballaggi etc.) qualora presenti. [DataProperty(29)] public decimal? SpeseAccessorie { get; set; } Property Value decimal?"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiBeniServizi.DettaglioLinee.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiBeniServizi.DettaglioLinee.html",
    "title": "Class DettaglioLinee | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DettaglioLinee Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiBeniServizi Assembly FatturaElettronica.dll Linee di dettaglio del documento (i campi del blocco si ripetono per ogni riga di dettaglio). public class DettaglioLinee : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DettaglioLinee Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DettaglioLinee() Linee di dettaglio del documento (i campi del blocco si ripetono per ogni riga di dettaglio). public DettaglioLinee() DettaglioLinee(XmlReader) public DettaglioLinee(XmlReader r) Parameters r XmlReader Properties AliquotaIVA Aliquota (%) IVA applicata al bene/servizio. [DataProperty(97)] public decimal AliquotaIVA { get; set; } Property Value decimal AltriDatiGestionali Blocco che consente di inserire, con riferimento ad una linea di dettaglio, diverse tipologie di informazioni utili ai fini amministrativi, gestionali, etc. [DataProperty(122)] public List<AltriDatiGestionali> AltriDatiGestionali { get; set; } Property Value List<AltriDatiGestionali> CodiceArticolo Eventuale codifica dell'articolo (la molteplicità N del blocco consente di gestire la presenza di più codifiche). [DataProperty(41)] public List<CodiceArticolo> CodiceArticolo { get; set; } Property Value List<CodiceArticolo> DataFinePeriodo Data finale del periodo di riferimento cui si riferisce l'eventuale servizio prestato. [DataProperty(72)] public DateTime? DataFinePeriodo { get; set; } Property Value DateTime? DataInizioPeriodo Data iniziale del periodo di riferimento cui si riferisce l'eventuale servizio prestato. [DataProperty(66)] public DateTime? DataInizioPeriodo { get; set; } Property Value DateTime? Descrizione Natura e quantità dell'oggetto della cessione/prestazione; può fare anche riferimento ad un precedente documento emesso a titolo di anticipo/acconto, nel qual caso il valore del campo PrezzoUnitario e PrezzoTotale sarà negativo. [DataProperty(48)] public string Descrizione { get; set; } Property Value string Natura Natura dell'operazione se non rientra tra quelle imponibili (il campo Aliquota IVA deve essere valorizzato a zero). [DataProperty(109)] public string Natura { get; set; } Property Value string NumeroLinea Numero della riga di dettaglio del documento. [DataProperty(29)] public int NumeroLinea { get; set; } Property Value int PrezzoTotale Importo totale del bene/servizio (che tiene conto di eventuali sconti/maggiorazioni) IVA esclusa. [DataProperty(91)] public decimal PrezzoTotale { get; set; } Property Value decimal PrezzoUnitario Prezzo unitario del bene/servizio; nel caso di beni ceduti a titolo di sconto, premio o abbuono, l'importo indicato rappresenta il \"valore normale\". [DataProperty(78)] public decimal PrezzoUnitario { get; set; } Property Value decimal Quantita Numero di unità cedute / prestate. [DataProperty(54)] public decimal? Quantita { get; set; } Property Value decimal? RiferimentoAmministrazione Codice identificativo ai fini amministrativo-contabili. [DataProperty(115)] public string RiferimentoAmministrazione { get; set; } Property Value string Ritenuta Da valorizzare solo in caso di cessione/prestazione soggetta a ritenuta di acconto. [DataProperty(103)] public string Ritenuta { get; set; } Property Value string ScontoMaggiorazione Eventuale sconto o maggiorazione applicati (la molteciplità N del blocco consente di gestire la presenza di più sconti o maggiorazioni a \"cascata\"). [DataProperty(85)] public List<ScontoMaggiorazione> ScontoMaggiorazione { get; set; } Property Value List<ScontoMaggiorazione> TipoCessionePrestazione Da valorizzare nei soli casi di sconto, premio, abbuono, spesa accessoria. [DataProperty(35)] public string TipoCessionePrestazione { get; set; } Property Value string UnitaMisura Unità di misura riferita alla quantità. [DataProperty(60)] public string UnitaMisura { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiBeniServizi.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiBeniServizi.html",
    "title": "Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiBeniServizi | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiBeniServizi Classes AltriDatiGestionali Blocco che consente di inserire, con riferimento ad una linea di dettaglio, diverse tipologie di informazioni utili ai fini amministrativi, gestionali, etc. CodiceArticolo Eventuale codifica dell'articolo. DatiBeniServizi Blocco sempre obbligatorio contenente natura, qualità e quantità dei beni / servizi formanti oggetto dell'operazione. DatiRiepilogo Blocco sempre obbligatorio contenente i dati di riepilogo per ogni aliquota IVA o natura. DettaglioLinee Linee di dettaglio del documento (i campi del blocco si ripetono per ogni riga di dettaglio)."
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiAnagraficiVettore.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiAnagraficiVettore.html",
    "title": "Class DatiAnagraficiVettore | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiAnagraficiVettore Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali Assembly FatturaElettronica.dll public class DatiAnagraficiVettore : DatiAnagrafici, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiAnagrafici DatiAnagraficiVettore Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members DatiAnagrafici.IdFiscaleIVA DatiAnagrafici.CodiceFiscale DatiAnagrafici.Anagrafica BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiAnagraficiVettore() public DatiAnagraficiVettore() DatiAnagraficiVettore(XmlReader) public DatiAnagraficiVettore(XmlReader r) Parameters r XmlReader Properties NumeroLicenzaGuida Numero identificativo della licenza di guida (es. numero patente). [DataProperty(14)] public string NumeroLicenzaGuida { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiBollo.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiBollo.html",
    "title": "Class DatiBollo | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiBollo Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali Assembly FatturaElettronica.dll Dati relativi al bollo. public class DatiBollo : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiBollo Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiBollo() public DatiBollo() DatiBollo(XmlReader) public DatiBollo(XmlReader r) Parameters r XmlReader Properties BolloVirtuale Bollo virtuale. [DataProperty(21)] public string BolloVirtuale { get; set; } Property Value string ImportoBollo Importo del bollo. [DataProperty(28)] public decimal? ImportoBollo { get; set; } Property Value decimal?"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiCassaPrevidenziale.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiCassaPrevidenziale.html",
    "title": "Class DatiCassaPrevidenziale | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiCassaPrevidenziale Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali Assembly FatturaElettronica.dll Dati relativi alla cassa previdenziale di appartenenza. public class DatiCassaPrevidenziale : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiCassaPrevidenziale Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiCassaPrevidenziale() public DatiCassaPrevidenziale() DatiCassaPrevidenziale(XmlReader) public DatiCassaPrevidenziale(XmlReader r) Parameters r XmlReader Properties AlCassa Aliquota (%) del contributo, se previsto, per la cassa di appartenenza. [DataProperty(27)] public decimal AlCassa { get; set; } Property Value decimal AliquotaIVA Aliquota (%) IVA applicata. [DataProperty(45)] public decimal AliquotaIVA { get; set; } Property Value decimal ImponibileCassa Importo sul quale applicare il contributo cassa previdenziale. [DataProperty(39)] public decimal ImponibileCassa { get; set; } Property Value decimal ImportoContributoCassa Importo del contributo per la cassa di appartenenza. [DataProperty(33)] public decimal ImportoContributoCassa { get; set; } Property Value decimal Natura Nei casi di Aliquota IVA pari a zero. [DataProperty(57)] public string Natura { get; set; } Property Value string RiferimentoAmministrazione Codice identificativo ai fini amministrativo-contabili. [DataProperty(63)] public string RiferimentoAmministrazione { get; set; } Property Value string Ritenuta Indica se il contributo cassa è soggetto a ritenuta. [DataProperty(51)] public string Ritenuta { get; set; } Property Value string TipoCassa Tipologia della cassa previdenziale di appartenenza. [DataProperty(21)] public string TipoCassa { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiContratto.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiContratto.html",
    "title": "Class DatiContratto | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiContratto Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali Assembly FatturaElettronica.dll Informazioni relative al contratto. public class DatiContratto : DatiDocumento, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiDocumento DatiContratto Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members DatiDocumento.RiferimentoNumeroLinea DatiDocumento.IdDocumento DatiDocumento.Data DatiDocumento.NumItem DatiDocumento.CodiceCommessaConvenzione DatiDocumento.CodiceCUP DatiDocumento.CodiceCIG BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiContratto() public DatiContratto() DatiContratto(XmlReader) public DatiContratto(XmlReader r) Parameters r XmlReader"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiConvenzione.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiConvenzione.html",
    "title": "Class DatiConvenzione | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiConvenzione Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali Assembly FatturaElettronica.dll Informazioni relative alla convenzione. public class DatiConvenzione : DatiDocumento, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiDocumento DatiConvenzione Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members DatiDocumento.RiferimentoNumeroLinea DatiDocumento.IdDocumento DatiDocumento.Data DatiDocumento.NumItem DatiDocumento.CodiceCommessaConvenzione DatiDocumento.CodiceCUP DatiDocumento.CodiceCIG BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiConvenzione() public DatiConvenzione() DatiConvenzione(XmlReader) public DatiConvenzione(XmlReader r) Parameters r XmlReader"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiDDT.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiDDT.html",
    "title": "Class DatiDDT | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiDDT Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali Assembly FatturaElettronica.dll Nei casi di fattura differita per indicare il documento con cui è stato consegnato il bene. public class DatiDDT : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiDDT Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiDDT() Nei casi di fattura differita per indicare il documento con cui è stato consegnato il bene. public DatiDDT() DatiDDT(XmlReader) public DatiDDT(XmlReader r) Parameters r XmlReader Properties DataDDT Data del documento di trasporto. [DataProperty(39)] public DateTime DataDDT { get; set; } Property Value DateTime NumeroDDT Numero del documento di trasporto. [DataProperty(32)] public string NumeroDDT { get; set; } Property Value string RiferimentoNumeroLinea Linea di dettaglio della fattura cui si riferisce il DDT (non viene valorizzato se il riferimento è all'intera fattura). [DataProperty(46)] public List<int> RiferimentoNumeroLinea { get; set; } Property Value List<int>"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiFattureCollegate.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiFattureCollegate.html",
    "title": "Class DatiFattureCollegate | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiFattureCollegate Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali Assembly FatturaElettronica.dll Informazioni relative alle fatture precedentemente trasmesse e alle quali si collega il documento presente. public class DatiFattureCollegate : DatiDocumento, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiDocumento DatiFattureCollegate Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members DatiDocumento.RiferimentoNumeroLinea DatiDocumento.IdDocumento DatiDocumento.Data DatiDocumento.NumItem DatiDocumento.CodiceCommessaConvenzione DatiDocumento.CodiceCUP DatiDocumento.CodiceCIG BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Remarks Riguarda i casi di invio di nota di credito e/o fatture di conguaglio a fronte di precedenti fatture di acconto. Constructors DatiFattureCollegate() public DatiFattureCollegate() DatiFattureCollegate(XmlReader) public DatiFattureCollegate(XmlReader r) Parameters r XmlReader"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiGenerali.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiGenerali.html",
    "title": "Class DatiGenerali | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiGenerali Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali Assembly FatturaElettronica.dll Dati generali del documento principale e dati dei documenti correlati. public class DatiGenerali : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiGenerali Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiGenerali() Dati generali del documento principale e dati dei documenti correlati. public DatiGenerali() DatiGenerali(XmlReader) public DatiGenerali(XmlReader r) Parameters r XmlReader Properties DatiContratto Informazioni relative ai contratti. [DataProperty(49)] public List<DatiContratto> DatiContratto { get; set; } Property Value List<DatiContratto> DatiConvenzione Informazioni relative alle convenzioni. [DataProperty(55)] public List<DatiConvenzione> DatiConvenzione { get; set; } Property Value List<DatiConvenzione> DatiDDT Da valorizzarei nei casi di fattura differita per indicare il documento con cui è stato consegnato il bene. I campi del blocco possono essere ripetuti se la fattura fa riferimento a più consegne e quindi a più documenti di trasporto. [DataProperty(82)] public List<DatiDDT> DatiDDT { get; set; } Property Value List<DatiDDT> DatiFattureCollegate Informazioni relative alle fatture precedentemente trasmesse e alle quali si collega il documento presente. Riguarda i casi di invio di nota di credito e/o di fatture di conguaglio a fronte di precedenti fatture di accounto. [DataProperty(68)] public List<DatiFattureCollegate> DatiFattureCollegate { get; set; } Property Value List<DatiFattureCollegate> DatiGeneraliDocumento Dati generali del documento principale. [DataProperty(37)] public DatiGeneraliDocumento DatiGeneraliDocumento { get; set; } Property Value DatiGeneraliDocumento DatiOrdineAcquisto Informazioni relative agli ordini di acquisto. [DataProperty(43)] public List<DatiOrdineAcquisto> DatiOrdineAcquisto { get; set; } Property Value List<DatiOrdineAcquisto> DatiRicezione Informazioni relative ai dati presenti sul sistema gestionale in uso presso la PA (Agenzie Fiscali) riguardanti la fase di ricezione. [DataProperty(61)] public List<DatiRicezione> DatiRicezione { get; set; } Property Value List<DatiRicezione> DatiSAL Blocco da valorizzare nei casi di fattura per stato di avanzamento. [DataProperty(74)] public List<DatiSAL> DatiSAL { get; set; } Property Value List<DatiSAL> DatiTrasporto Blocco da valorizzare nei casi di fattura accompagnatoria per inserire informazioni relative al trasporto. [DataProperty(89)] public DatiTrasporto DatiTrasporto { get; set; } Property Value DatiTrasporto FatturaPrincipale Da valorizzare nei casi di fatture per operazioni accessorie, emesse dagli autotrasportatori per usufruire delle agevolazioni in materia di registrazioni e pagamento dell'IVA. [DataProperty(96)] public FatturaPrincipale FatturaPrincipale { get; set; } Property Value FatturaPrincipale"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiGeneraliDocumento.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiGeneraliDocumento.html",
    "title": "Class DatiGeneraliDocumento | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiGeneraliDocumento Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali Assembly FatturaElettronica.dll Dati generali del documento principale ed i dati dei documenti correlati. public class DatiGeneraliDocumento : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiGeneraliDocumento Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiGeneraliDocumento() Dati generali del documento principale ed i dati dei documenti correlati. public DatiGeneraliDocumento() DatiGeneraliDocumento(XmlReader) public DatiGeneraliDocumento(XmlReader r) Parameters r XmlReader Properties Arrotondamento Eventuale arrotondamento sul totale documento (ammette anche il segno negativo). [DataProperty(88)] public decimal? Arrotondamento { get; set; } Property Value decimal? Art73 Indica se il documento è stato emesso secondo modalità e termini stabiliti con decreto ministeriale ai sensi art. 73 DPR 633/72 (ciò consente al cedente/prestatore l'emissione nello stesso anno di più documenti aventi lo stesso numero). [DataProperty(101)] public string Art73 { get; set; } Property Value string Causale Descrizione della causale del documento. [DataProperty(94)] public List<string> Causale { get; set; } Property Value List<string> Data Data del documento. [DataProperty(46)] public DateTime Data { get; set; } Property Value DateTime DatiBollo Dati del bollo. [DataProperty(64)] public DatiBollo DatiBollo { get; set; } Property Value DatiBollo DatiCassaPrevidenziale Blocco dati relativi alla cassa previdenziale di appartenenenza. [DataProperty(70)] public List<DatiCassaPrevidenziale> DatiCassaPrevidenziale { get; set; } Property Value List<DatiCassaPrevidenziale> DatiRitenuta Dati della ritenuta. [DataProperty(58)] public List<DatiRitenuta> DatiRitenuta { get; set; } Property Value List<DatiRitenuta> Divisa Codice espresso secondo lo standard ISO 4217 alpha-3:2001 della valuta utilizzata per l'indicazione degli importi. [DataProperty(40)] public string Divisa { get; set; } Property Value string ImportoTotaleDocumento Importo totale del documento al netto dell'eventuale sconto e comprensivo di imposta a debito del cessionario /committente. [DataProperty(82)] public decimal? ImportoTotaleDocumento { get; set; } Property Value decimal? Numero Numero progressivo del documento. [DataProperty(52)] public string Numero { get; set; } Property Value string ScontoMaggiorazione Eventuali sconti o maggiorazioni applicati sul totale documento. [DataProperty(76)] public List<ScontoMaggiorazione> ScontoMaggiorazione { get; set; } Property Value List<ScontoMaggiorazione> TipoDocumento Dati generali del documento principale. [DataProperty(34)] public string TipoDocumento { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiOrdineAcquisto.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiOrdineAcquisto.html",
    "title": "Class DatiOrdineAcquisto | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiOrdineAcquisto Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali Assembly FatturaElettronica.dll Informazioni relative all'ordine di acquisto. public class DatiOrdineAcquisto : DatiDocumento, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiDocumento DatiOrdineAcquisto Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members DatiDocumento.RiferimentoNumeroLinea DatiDocumento.IdDocumento DatiDocumento.Data DatiDocumento.NumItem DatiDocumento.CodiceCommessaConvenzione DatiDocumento.CodiceCUP DatiDocumento.CodiceCIG BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiOrdineAcquisto() public DatiOrdineAcquisto() DatiOrdineAcquisto(XmlReader) public DatiOrdineAcquisto(XmlReader r) Parameters r XmlReader"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiRicezione.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiRicezione.html",
    "title": "Class DatiRicezione | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiRicezione Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali Assembly FatturaElettronica.dll Informazioni relative ai dati presenti sul sistema gestionale in uso presso la PA (Agenzie Fiscali) riguardanti la fase di ricezione. public class DatiRicezione : DatiDocumento, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiDocumento DatiRicezione Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members DatiDocumento.RiferimentoNumeroLinea DatiDocumento.IdDocumento DatiDocumento.Data DatiDocumento.NumItem DatiDocumento.CodiceCommessaConvenzione DatiDocumento.CodiceCUP DatiDocumento.CodiceCIG BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiRicezione() public DatiRicezione() DatiRicezione(XmlReader) public DatiRicezione(XmlReader r) Parameters r XmlReader"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiRitenuta.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiRitenuta.html",
    "title": "Class DatiRitenuta | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiRitenuta Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali Assembly FatturaElettronica.dll Dati relativi alla ritenuta. public class DatiRitenuta : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiRitenuta Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiRitenuta() public DatiRitenuta() DatiRitenuta(XmlReader) public DatiRitenuta(XmlReader r) Parameters r XmlReader Properties AliquotaRitenuta Aliquota (%) della ritenuta. [DataProperty(33)] public decimal AliquotaRitenuta { get; set; } Property Value decimal CausalePagamento Causale del pagamento (quella del modello 770). [DataProperty(39)] public string CausalePagamento { get; set; } Property Value string ImportoRitenuta Importo dellla ritenuta. [DataProperty(27)] public decimal ImportoRitenuta { get; set; } Property Value decimal TipoRitenuta Tipologia della ritenuta. [DataProperty(21)] public string TipoRitenuta { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiSAL.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiSAL.html",
    "title": "Class DatiSAL | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiSAL Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali Assembly FatturaElettronica.dll Da valorizzare nei casi di fattura per stato di avanzamento. public class DatiSAL : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiSAL Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiSAL() public DatiSAL() DatiSAL(XmlReader) public DatiSAL(XmlReader r) Parameters r XmlReader Properties RiferimentoFase Fase dello stato di avanzamento cui il documento si riferisce. [DataProperty(22)] public int RiferimentoFase { get; set; } Property Value int"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiTrasporto.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.DatiTrasporto.html",
    "title": "Class DatiTrasporto | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiTrasporto Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali Assembly FatturaElettronica.dll Da valorizzare nel caso di fattura accompagnatoria per inserire informazioni relative al trasporto. public class DatiTrasporto : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiTrasporto Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiTrasporto() Da valorizzare nel caso di fattura accompagnatoria per inserire informazioni relative al trasporto. public DatiTrasporto() DatiTrasporto(XmlReader) public DatiTrasporto(XmlReader r) Parameters r XmlReader Properties CausaleTrasporto Causale del trasporto. [DataProperty(41)] public string CausaleTrasporto { get; set; } Property Value string DataInizioTrasporto Data e ora del trasporto. [DataProperty(84)] public DateTime? DataInizioTrasporto { get; set; } Property Value DateTime? DataOraConsegna Data e ora della consegna della merce. [DataProperty(103)] public DateTime? DataOraConsegna { get; set; } Property Value DateTime? DataOraRitiro Data e ora del ritiro della merce. [DataProperty(77)] public DateTime? DataOraRitiro { get; set; } Property Value DateTime? DatiAnagraficiVettore Dati fiscali e anagrafici del vettore. [DataProperty(29)] public DatiAnagraficiVettore DatiAnagraficiVettore { get; set; } Property Value DatiAnagraficiVettore Descrizione Descrizione (natura, qualità, aspetto...) relativa ai colli trasportati. [DataProperty(53)] public string Descrizione { get; set; } Property Value string IndirizzoResa Indirizzo di resa. [DataProperty(97)] public IndirizzoResa IndirizzoResa { get; set; } Property Value IndirizzoResa MezzoTrasporto Mezzo utilizzato per il trasporto. [DataProperty(35)] public string MezzoTrasporto { get; set; } Property Value string NumeroColli Numero dei colli trasportati. [DataProperty(47)] public int? NumeroColli { get; set; } Property Value int? PesoLordo Peso lordo della merce. [DataProperty(65)] public decimal? PesoLordo { get; set; } Property Value decimal? PesoNetto Peso netto della merce. [DataProperty(71)] public decimal? PesoNetto { get; set; } Property Value decimal? TipoResa Codifica del termine di resa espresso secondo lo standard ICC-Camera di Commercio Internazionale (Incoterms). [DataProperty(90)] public string TipoResa { get; set; } Property Value string UnitaMisuraPeso Unità di misura riferita al peso della merce. [DataProperty(59)] public string UnitaMisuraPeso { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.FatturaPrincipale.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.FatturaPrincipale.html",
    "title": "Class FatturaPrincipale | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class FatturaPrincipale Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali Assembly FatturaElettronica.dll Da valorizzare nei casi di fatture per operazione accessorie, emesse dagli autotraportatori per usufruire delle agevolazioni in mteria di registrazione e pagamento IVA. public class FatturaPrincipale : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable FatturaPrincipale Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors FatturaPrincipale() public FatturaPrincipale() FatturaPrincipale(XmlReader) public FatturaPrincipale(XmlReader r) Parameters r XmlReader Properties DataFatturaPrincipale Data della fattura relativa al trasporto di beni. [DataProperty(31)] public DateTime? DataFatturaPrincipale { get; set; } Property Value DateTime? NumeroFatturaPrincipale Numero della fattura relativa al trasporto di beni, da indicare sulle fatture emesse dagli autotrasportatori per certificare le operazioni accessorie. [DataProperty(24)] public string NumeroFatturaPrincipale { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.html",
    "title": "Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali Classes DatiAnagraficiVettore DatiBollo Dati relativi al bollo. DatiCassaPrevidenziale Dati relativi alla cassa previdenziale di appartenenza. DatiContratto Informazioni relative al contratto. DatiConvenzione Informazioni relative alla convenzione. DatiDDT Nei casi di fattura differita per indicare il documento con cui è stato consegnato il bene. DatiFattureCollegate Informazioni relative alle fatture precedentemente trasmesse e alle quali si collega il documento presente. DatiGenerali Dati generali del documento principale e dati dei documenti correlati. DatiGeneraliDocumento Dati generali del documento principale ed i dati dei documenti correlati. DatiOrdineAcquisto Informazioni relative all'ordine di acquisto. DatiRicezione Informazioni relative ai dati presenti sul sistema gestionale in uso presso la PA (Agenzie Fiscali) riguardanti la fase di ricezione. DatiRitenuta Dati relativi alla ritenuta. DatiSAL Da valorizzare nei casi di fattura per stato di avanzamento. DatiTrasporto Da valorizzare nel caso di fattura accompagnatoria per inserire informazioni relative al trasporto. FatturaPrincipale Da valorizzare nei casi di fatture per operazione accessorie, emesse dagli autotraportatori per usufruire delle agevolazioni in mteria di registrazione e pagamento IVA. IndirizzoResa"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.IndirizzoResa.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali.IndirizzoResa.html",
    "title": "Class IndirizzoResa | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class IndirizzoResa Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiGenerali Assembly FatturaElettronica.dll public class IndirizzoResa : Località, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable Località IndirizzoResa Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members Località.Indirizzo Località.NumeroCivico Località.CAP Località.Comune Località.Provincia Località.Nazione BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors IndirizzoResa() public IndirizzoResa() IndirizzoResa(XmlReader) public IndirizzoResa(XmlReader r) Parameters r XmlReader"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiPagamento.DatiPagamento.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiPagamento.DatiPagamento.html",
    "title": "Class DatiPagamento | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiPagamento Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiPagamento Assembly FatturaElettronica.dll Dati relativi al pagamento. public class DatiPagamento : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiPagamento Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiPagamento() Dati relativi al pagamento. public DatiPagamento() DatiPagamento(XmlReader) public DatiPagamento(XmlReader r) Parameters r XmlReader Properties CondizioniPagamento Condizioni di pagamento. [DataProperty(25)] public string CondizioniPagamento { get; set; } Property Value string DettaglioPagamento Dati di dettaglio del pagamento. [DataProperty(31)] public List<DettaglioPagamento> DettaglioPagamento { get; set; } Property Value List<DettaglioPagamento>"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiPagamento.DettaglioPagamento.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiPagamento.DettaglioPagamento.html",
    "title": "Class DettaglioPagamento | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DettaglioPagamento Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiPagamento Assembly FatturaElettronica.dll Dati di dettaglio del pagamento. public class DettaglioPagamento : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DettaglioPagamento Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DettaglioPagamento() public DettaglioPagamento() DettaglioPagamento(XmlReader) public DettaglioPagamento(XmlReader r) Parameters r XmlReader Properties ABI Codice ABI. [DataProperty(101)] public string ABI { get; set; } Property Value string BIC Bank Identifier Code (codice che identifica la banca del destinatario). [DataProperty(115)] public string BIC { get; set; } Property Value string Beneficiario Beneficiario del pagamento (utilizzabile se si intende indicare un beneficiario diverso dal cedente/prestatore). [DataProperty(18)] public string Beneficiario { get; set; } Property Value string CAB Codice CAB. [DataProperty(108)] public string CAB { get; set; } Property Value string CFQuietanzante Codice fiscale del quietanziante (nel caso di campo ModalitaPagamento = MP04). [DataProperty(74)] public string CFQuietanzante { get; set; } Property Value string CodUfficioPostale Nei casi di modalità di pagamento in cui ha senso l'indicazione dellìufficio postale. [DataProperty(56)] public string CodUfficioPostale { get; set; } Property Value string CodicePagamento Codice per la riconciliazione degli incassi da parte del cedente/prestatore. [DataProperty(146)] public string CodicePagamento { get; set; } Property Value string CognomeQuietanzante Cognome del quietanziante (nel caso di campo ModalitaPagamento = MP04). [DataProperty(62)] public string CognomeQuietanzante { get; set; } Property Value string DataDecorrenzaPenale Data di decorrenza della penale. [DataProperty(140)] public DateTime? DataDecorrenzaPenale { get; set; } Property Value DateTime? DataLimitePagamentoAnticipato Data limite stabilita per il pagamento anticipato. [DataProperty(128)] public DateTime? DataLimitePagamentoAnticipato { get; set; } Property Value DateTime? DataRiferimentoTerminiPagamento Data dalla quale decorrono i termini di pagamento. [DataProperty(30)] public DateTime? DataRiferimentoTerminiPagamento { get; set; } Property Value DateTime? DataScadenzaPagamento Data di scadenza del pagamento da indicare nei casi in cui ha senso sulla base delle condizioni di pagamento previste. [DataProperty(44)] public DateTime? DataScadenzaPagamento { get; set; } Property Value DateTime? GiorniTerminiPagamento Termini di pagamento espressi in giorni a partire dalla data di riferimento di cui al campo DataRiferimentoTerminiPagamento. Vale 0 per i gamenti a vista. [DataProperty(37)] public int? GiorniTerminiPagamento { get; set; } Property Value int? IBAN International Bank Account Number (coordinata bancaria internazionale che consente di identificare, in maniera standard, il conto corrente del beneficiario). [DataProperty(94)] public string IBAN { get; set; } Property Value string ImportoPagamento Importo relativo al pagamento. [DataProperty(50)] public decimal ImportoPagamento { get; set; } Property Value decimal IstitutoFinanziario Nome dell'istituto finanziario. [DataProperty(87)] public string IstitutoFinanziario { get; set; } Property Value string ModalitaPagamento Modalità di pagamento. [DataProperty(24)] public string ModalitaPagamento { get; set; } Property Value string NomeQuietanzante Nome del quietanziante (nel caso di campo ModalitaPagamento = MP04). [DataProperty(68)] public string NomeQuietanzante { get; set; } Property Value string PenalitaPagamentiRitardati Ammontare della penalità dovuta per pagamenti ritardati. [DataProperty(134)] public decimal? PenalitaPagamentiRitardati { get; set; } Property Value decimal? ScontoPagamentoAnticipato Ammontare dello sconto per pagamento anticipato. [DataProperty(122)] public decimal? ScontoPagamentoAnticipato { get; set; } Property Value decimal? TitoloQuietanzante Titolo del quietanziante (nel caso di campo ModalitaPagamento = MP04). [DataProperty(81)] public string TitoloQuietanzante { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiPagamento.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiPagamento.html",
    "title": "Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiPagamento | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiPagamento Classes DatiPagamento Dati relativi al pagamento. DettaglioPagamento Dati di dettaglio del pagamento."
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiVeicoli.DatiVeicoli.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiVeicoli.DatiVeicoli.html",
    "title": "Class DatiVeicoli | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiVeicoli Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiVeicoli Assembly FatturaElettronica.dll Dati relativi ai veicoli di cui all'art. 38 comma 4 del ddl 331 del 1993. public class DatiVeicoli : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiVeicoli Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiVeicoli() public DatiVeicoli() DatiVeicoli(XmlReader) public DatiVeicoli(XmlReader r) Parameters r XmlReader Properties Data Data di prima immatricolazione o iscrizione nei pubblici registri. [DataProperty(18)] public DateTime? Data { get; set; } Property Value DateTime? TotalePercorso Totale chilometri percorsi, oppure totale ora navigate o volate. [DataProperty(24)] public string TotalePercorso { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiVeicoli.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiVeicoli.html",
    "title": "Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiVeicoli | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody.DatiVeicoli Classes DatiVeicoli Dati relativi ai veicoli di cui all'art. 38 comma 4 del ddl 331 del 1993."
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.FatturaElettronicaBody.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.FatturaElettronicaBody.html",
    "title": "Class FatturaElettronicaBody | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class FatturaElettronicaBody Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody Assembly FatturaElettronica.dll public class FatturaElettronicaBody : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable FatturaElettronicaBody Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors FatturaElettronicaBody() FatturaOrdinaria inclusa nella conunicazione. public FatturaElettronicaBody() FatturaElettronicaBody(XmlReader) public FatturaElettronicaBody(XmlReader r) Parameters r XmlReader Properties Allegati Dati relativi ad eventuali allegati. [DataProperty(50)] public List<Allegati> Allegati { get; set; } Property Value List<Allegati> DatiBeniServizi Blocco sempre obbligatorio contenente natura qualità e quantità dei beni/servizi oggetto dell'operazione. [DataProperty(32)] public DatiBeniServizi DatiBeniServizi { get; set; } Property Value DatiBeniServizi DatiGenerali Dati generali del documento principale. [DataProperty(26)] public DatiGenerali DatiGenerali { get; set; } Property Value DatiGenerali DatiPagamento Dati relativi al pagamento. [DataProperty(44)] public List<DatiPagamento> DatiPagamento { get; set; } Property Value List<DatiPagamento> DatiVeicoli Dati relativi ai veicoli di cui all'art. 38 del dl 331 del 1993. [DataProperty(38)] public DatiVeicoli DatiVeicoli { get; set; } Property Value DatiVeicoli"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaBody.html",
    "title": "Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Ordinaria.FatturaElettronicaBody Classes FatturaElettronicaBody"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CedentePrestatore.CedentePrestatore.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CedentePrestatore.CedentePrestatore.html",
    "title": "Class CedentePrestatore | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class CedentePrestatore Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CedentePrestatore Assembly FatturaElettronica.dll Dati relativi al cedente / prestatore. public class CedentePrestatore : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable CedentePrestatore Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors CedentePrestatore() Dati relativi al cedente / prestatore. public CedentePrestatore() CedentePrestatore(XmlReader) public CedentePrestatore(XmlReader r) Parameters r XmlReader Properties Contatti Contatti del cedente / prestatore. [DataProperty(56)] public Contatti Contatti { get; set; } Property Value Contatti DatiAnagrafici Dati anagrafici, professionali e fiscali del cedente / prestatore. [DataProperty(32)] public DatiAnagraficiCedentePrestatore DatiAnagrafici { get; set; } Property Value DatiAnagraficiCedentePrestatore IscrizioneREA Nei casi di società iscritte nel registro delle imprese ai sensi dell'art. 2250 del codice civile. [DataProperty(50)] public IscrizioneREA IscrizioneREA { get; set; } Property Value IscrizioneREA RiferimentoAmministrazione Codice identificativo del cedente / prestatore a fini amministrativi-contabili. [DataProperty(62)] public string RiferimentoAmministrazione { get; set; } Property Value string Sede Dati della sede del cedente / prestatore. [DataProperty(38)] public SedeCedentePrestatore Sede { get; set; } Property Value SedeCedentePrestatore StabileOrganizzazione Nei casi di cedente / prestatore non residente. [DataProperty(44)] public StabileOrganizzazione StabileOrganizzazione { get; set; } Property Value StabileOrganizzazione"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CedentePrestatore.Contatti.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CedentePrestatore.Contatti.html",
    "title": "Class Contatti | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class Contatti Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CedentePrestatore Assembly FatturaElettronica.dll Represents a Contatti object public class Contatti : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable Contatti Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors Contatti() public Contatti() Contatti(XmlReader) public Contatti(XmlReader r) Parameters r XmlReader Properties Email Indirizzo di posta elettronica. [DataProperty(31)] public string Email { get; set; } Property Value string Fax Numero di fax. [DataProperty(25)] public string Fax { get; set; } Property Value string Telefono Contatto telefonico fisso o mobile. [DataProperty(19)] public string Telefono { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CedentePrestatore.DatiAnagraficiCedentePrestatore.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CedentePrestatore.DatiAnagraficiCedentePrestatore.html",
    "title": "Class DatiAnagraficiCedentePrestatore | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiAnagraficiCedentePrestatore Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CedentePrestatore Assembly FatturaElettronica.dll public class DatiAnagraficiCedentePrestatore : DatiAnagrafici, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiAnagrafici DatiAnagraficiCedentePrestatore Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members DatiAnagrafici.IdFiscaleIVA DatiAnagrafici.CodiceFiscale DatiAnagrafici.Anagrafica BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiAnagraficiCedentePrestatore() Dati anagrafici, professionali e fiscali del cedente / prestatore. public DatiAnagraficiCedentePrestatore() DatiAnagraficiCedentePrestatore(XmlReader) public DatiAnagraficiCedentePrestatore(XmlReader r) Parameters r XmlReader Properties AlboProfessionale Nome dell'albo professionale. [DataProperty(10)] public string AlboProfessionale { get; set; } Property Value string DataIscrizioneAlbo Data di iscrizione all'albo professionale. [DataProperty(13)] public DateTime? DataIscrizioneAlbo { get; set; } Property Value DateTime? NumeroIscrizioneAlbo Numero di iscrizione all'albo professionale. [DataProperty(12)] public string NumeroIscrizioneAlbo { get; set; } Property Value string ProvinciaAlbo Sigla della provincia di competenza dell'albo professionale. [DataProperty(11)] public string ProvinciaAlbo { get; set; } Property Value string RegimeFiscale Regime fiscale. [DataProperty(14)] public string RegimeFiscale { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CedentePrestatore.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CedentePrestatore.html",
    "title": "Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CedentePrestatore | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CedentePrestatore Classes CedentePrestatore Dati relativi al cedente / prestatore. Contatti Represents a Contatti object DatiAnagraficiCedentePrestatore IscrizioneREA Represents a DatiAnagrafici object SedeCedentePrestatore"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CedentePrestatore.IscrizioneREA.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CedentePrestatore.IscrizioneREA.html",
    "title": "Class IscrizioneREA | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class IscrizioneREA Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CedentePrestatore Assembly FatturaElettronica.dll Represents a DatiAnagrafici object public class IscrizioneREA : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable IscrizioneREA Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors IscrizioneREA() public IscrizioneREA() IscrizioneREA(XmlReader) public IscrizioneREA(XmlReader r) Parameters r XmlReader Properties CapitaleSociale Nei soli casi di società di capitali (Spa, SApA, SRL), il campo va valorizzato per indicare il capitale sociale. [DataProperty(30)] public decimal? CapitaleSociale { get; set; } Property Value decimal? NumeroREA Numero di iscrizione al registro delle imprese. [DataProperty(23)] public string NumeroREA { get; set; } Property Value string SocioUnico Nei soli casi di SRL, il campo va valorizzato per indicare se vi è un socio unico oppure se vi sono più soci. [DataProperty(36)] public string SocioUnico { get; set; } Property Value string StatoLiquidazione Indica se la Società si trova in stato di liquidazione oppure no. [DataProperty(42)] public string StatoLiquidazione { get; set; } Property Value string Ufficio Sigla della provincia dell'Ufficio del registro delle imprese presso il quale è registata la società. [DataProperty(17)] public string Ufficio { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CedentePrestatore.SedeCedentePrestatore.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CedentePrestatore.SedeCedentePrestatore.html",
    "title": "Class SedeCedentePrestatore | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class SedeCedentePrestatore Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CedentePrestatore Assembly FatturaElettronica.dll public class SedeCedentePrestatore : Località, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable Località SedeCedentePrestatore Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members Località.Indirizzo Località.NumeroCivico Località.CAP Località.Comune Località.Provincia Località.Nazione BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors SedeCedentePrestatore() public SedeCedentePrestatore() SedeCedentePrestatore(XmlReader) public SedeCedentePrestatore(XmlReader r) Parameters r XmlReader"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CessionarioCommittente.CessionarioCommittente.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CessionarioCommittente.CessionarioCommittente.html",
    "title": "Class CessionarioCommittente | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class CessionarioCommittente Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CessionarioCommittente Assembly FatturaElettronica.dll Dati relativi al cessionario/ committente. public class CessionarioCommittente : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable CessionarioCommittente Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors CessionarioCommittente() Dati relativi al cessionario / committente. public CessionarioCommittente() CessionarioCommittente(XmlReader) public CessionarioCommittente(XmlReader r) Parameters r XmlReader Properties DatiAnagrafici Dati anagrafici, professionali e fiscali del cessionario / committente. [DataProperty(32)] public DatiAnagraficiCessionarioCommittente DatiAnagrafici { get; set; } Property Value DatiAnagraficiCessionarioCommittente RappresentanteFiscale Blocco da valorizzare se e solo se l'elemento informativo 1.1.3 FormatoTrasmissione = \"FPR12\" (fattura tra privati), nel caso di cessionario/committente che si avvale di rappresentante fiscale in Italia. [DataProperty(50)] public RappresentanteFiscaleCessionarioCommittente RappresentanteFiscale { get; set; } Property Value RappresentanteFiscaleCessionarioCommittente Sede Dati della sede del cessionario / committente. [DataProperty(38)] public SedeCessionarioCommittente Sede { get; set; } Property Value SedeCessionarioCommittente StabileOrganizzazione Blocco da valorizzare se e solo se l'elemento informativo 1.1.3 FormatoTrasmissione = \"FPR12\" (fattura tra privati), nel caso di cessionario/committente non residente e con stabile organizzazione in Italia. [DataProperty(44)] public StabileOrganizzazione StabileOrganizzazione { get; set; } Property Value StabileOrganizzazione"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CessionarioCommittente.DatiAnagraficiCessionarioCommittente.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CessionarioCommittente.DatiAnagraficiCessionarioCommittente.html",
    "title": "Class DatiAnagraficiCessionarioCommittente | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiAnagraficiCessionarioCommittente Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CessionarioCommittente Assembly FatturaElettronica.dll public class DatiAnagraficiCessionarioCommittente : DatiAnagrafici, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiAnagrafici DatiAnagraficiCessionarioCommittente Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members DatiAnagrafici.IdFiscaleIVA DatiAnagrafici.CodiceFiscale DatiAnagrafici.Anagrafica BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiAnagraficiCessionarioCommittente() Dati anagrafici, professionali e fiscali del cessionario / committente. public DatiAnagraficiCessionarioCommittente() DatiAnagraficiCessionarioCommittente(XmlReader) public DatiAnagraficiCessionarioCommittente(XmlReader r) Parameters r XmlReader"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CessionarioCommittente.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CessionarioCommittente.html",
    "title": "Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CessionarioCommittente | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CessionarioCommittente Classes CessionarioCommittente Dati relativi al cessionario/ committente. DatiAnagraficiCessionarioCommittente RappresentanteFiscaleCessionarioCommittente Represents a CessionarioCommittente.RappresentanteFiscale object. SedeCessionarioCommittente"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CessionarioCommittente.RappresentanteFiscaleCessionarioCommittente.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CessionarioCommittente.RappresentanteFiscaleCessionarioCommittente.html",
    "title": "Class RappresentanteFiscaleCessionarioCommittente | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class RappresentanteFiscaleCessionarioCommittente Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CessionarioCommittente Assembly FatturaElettronica.dll Represents a CessionarioCommittente.RappresentanteFiscale object. public class RappresentanteFiscaleCessionarioCommittente : DenominazioneNomeCognome, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DenominazioneNomeCognome RappresentanteFiscaleCessionarioCommittente Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members DenominazioneNomeCognome.Denominazione DenominazioneNomeCognome.Nome DenominazioneNomeCognome.Cognome DenominazioneNomeCognome.CognomeNome BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors RappresentanteFiscaleCessionarioCommittente() public RappresentanteFiscaleCessionarioCommittente() RappresentanteFiscaleCessionarioCommittente(XmlReader) public RappresentanteFiscaleCessionarioCommittente(XmlReader r) Parameters r XmlReader Properties IdFiscaleIVA Numero di identificazione fiscale ai fini IVA; i primi due caratteri rappresentano il paese ed i restanti il codice vero e proprio che, per i residenti in Italia, corrisponde al numero di partita IVA. [DataProperty(-1)] public IdFiscaleIVA IdFiscaleIVA { get; set; } Property Value IdFiscaleIVA"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CessionarioCommittente.SedeCessionarioCommittente.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CessionarioCommittente.SedeCessionarioCommittente.html",
    "title": "Class SedeCessionarioCommittente | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class SedeCessionarioCommittente Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CessionarioCommittente Assembly FatturaElettronica.dll public class SedeCessionarioCommittente : Località, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable Località SedeCessionarioCommittente Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members Località.Indirizzo Località.NumeroCivico Località.CAP Località.Comune Località.Provincia Località.Nazione BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors SedeCessionarioCommittente() public SedeCessionarioCommittente() SedeCessionarioCommittente(XmlReader) public SedeCessionarioCommittente(XmlReader r) Parameters r XmlReader"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.DatiTrasmissione.ContattiTrasmittente.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.DatiTrasmissione.ContattiTrasmittente.html",
    "title": "Class ContattiTrasmittente | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class ContattiTrasmittente Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.DatiTrasmissione Assembly FatturaElettronica.dll Represents a ContattiTrasmittente object public class ContattiTrasmittente : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable ContattiTrasmittente Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors ContattiTrasmittente() public ContattiTrasmittente() ContattiTrasmittente(XmlReader) public ContattiTrasmittente(XmlReader r) Parameters r XmlReader Properties Email Indirizzo di posta elettronica. [DataProperty(23)] public string Email { get; set; } Property Value string Telefono Contatto telefonico fisso o mobile. [DataProperty(17)] public string Telefono { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.DatiTrasmissione.DatiTrasmissione.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.DatiTrasmissione.DatiTrasmissione.html",
    "title": "Class DatiTrasmissione | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiTrasmissione Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.DatiTrasmissione Assembly FatturaElettronica.dll Informazioni che identificano univocamente il soggetto che trasmette, il documento trasmesso, il formato in cui è stato trasmesso il documento, il soggetto destinatario. public class DatiTrasmissione : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiTrasmissione Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiTrasmissione() Constructor. public DatiTrasmissione() DatiTrasmissione(XmlReader) public DatiTrasmissione(XmlReader r) Parameters r XmlReader Properties CodiceDestinatario Codice dell'ufficio dell'amministrazione dello stato destinatario della fattura, definito dall'amministrazione di appartenenza come riportato nella rubrica \"Indice PA\". [DataProperty(50)] public string CodiceDestinatario { get; set; } Property Value string ContattiTrasmittente Dati relativi ai contatti del trasmittente. [DataProperty(56)] public ContattiTrasmittente ContattiTrasmittente { get; set; } Property Value ContattiTrasmittente FormatoTrasmissione Codice identificativo del formato/versione con cui è stato trasmesso il documento fattura. [DataProperty(43)] public string FormatoTrasmissione { get; set; } Property Value string IdTrasmittente Identificativo univoco del soggetto trasmittente. [DataProperty(31)] public IdTrasmittente IdTrasmittente { get; set; } Property Value IdTrasmittente PECDestinatario Inidirizzo PEC al quale inviare il documento. [DataProperty(62)] public string PECDestinatario { get; set; } Property Value string ProgressivoInvio Progressivo univoco, attribuito dal soggetto che trasmette, relativo ad ogni singolo documento fattura. [DataProperty(37)] public string ProgressivoInvio { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.DatiTrasmissione.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.DatiTrasmissione.html",
    "title": "Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.DatiTrasmissione | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.DatiTrasmissione Classes ContattiTrasmittente Represents a ContattiTrasmittente object DatiTrasmissione Informazioni che identificano univocamente il soggetto che trasmette, il documento trasmesso, il formato in cui è stato trasmesso il documento, il soggetto destinatario. IdTrasmittente"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.DatiTrasmissione.IdTrasmittente.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.DatiTrasmissione.IdTrasmittente.html",
    "title": "Class IdTrasmittente | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class IdTrasmittente Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.DatiTrasmissione Assembly FatturaElettronica.dll public class IdTrasmittente : IdFiscaleIVA, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable IdFiscaleIVA IdTrasmittente Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members IdFiscaleIVA.IdPaese IdFiscaleIVA.IdCodice IdFiscaleIVA.ToString() BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors IdTrasmittente() public IdTrasmittente() IdTrasmittente(XmlReader) public IdTrasmittente(XmlReader r) Parameters r XmlReader"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.FatturaElettronicaHeader.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.FatturaElettronicaHeader.html",
    "title": "Class FatturaElettronicaHeader | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class FatturaElettronicaHeader Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader Assembly FatturaElettronica.dll public class FatturaElettronicaHeader : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable FatturaElettronicaHeader Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors FatturaElettronicaHeader() Intestazione della FatturaOrdinaria Elettronica. public FatturaElettronicaHeader() FatturaElettronicaHeader(XmlReader) public FatturaElettronicaHeader(XmlReader r) Parameters r XmlReader Properties CedentePrestatore Dati relativi al cedente / prestatore. [DataProperty(39)] public CedentePrestatore CedentePrestatore { get; set; } Property Value CedentePrestatore CessionarioCommittente Dati relativi al cessionario / committente [DataProperty(53)] public CessionarioCommittente CessionarioCommittente { get; set; } Property Value CessionarioCommittente DatiTrasmissione Informazioni che identificano univocamente il soggetto che trasmette, il documento trasmesso, il formato in cui è stato trasmesso il documento, il soggetto destinatario. [DataProperty(33)] public DatiTrasmissione DatiTrasmissione { get; set; } Property Value DatiTrasmissione Rappresentante Dati relativi al rappresentante fiscale del cedente / prestatore. [DataProperty(45)] [JsonPropertyName(\"RappresentanteFiscale\")] public RappresentanteFiscale Rappresentante { get; set; } Property Value RappresentanteFiscale SoggettoEmittente Nei casi di documenti emessi da un soggetto diverso dal cedente / prestatore, indica se la fattura sia stata emessa o da parte del cessionario / committente oppure da parte di un terzo per conto del cedente / prestatore. [DataProperty(67)] public string SoggettoEmittente { get; set; } Property Value string TerzoIntermediarioOSoggettoEmittente Dati relativi al soggetto che emette fattura per conto del cedente / prestatore. [DataProperty(59)] public TerzoIntermediarioOSoggettoEmittente TerzoIntermediarioOSoggettoEmittente { get; set; } Property Value TerzoIntermediarioOSoggettoEmittente"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.html",
    "title": "Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader Classes FatturaElettronicaHeader"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.RappresentanteFiscale.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.RappresentanteFiscale.html",
    "title": "Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.RappresentanteFiscale | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.RappresentanteFiscale Classes RappresentanteFiscale Dati relativi al rappresentante fiscale del cedente / prestatore."
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.RappresentanteFiscale.RappresentanteFiscale.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.RappresentanteFiscale.RappresentanteFiscale.html",
    "title": "Class RappresentanteFiscale | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class RappresentanteFiscale Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.RappresentanteFiscale Assembly FatturaElettronica.dll Dati relativi al rappresentante fiscale del cedente / prestatore. public class RappresentanteFiscale : RappresentanteFiscale, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable RappresentanteFiscale RappresentanteFiscale Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members RappresentanteFiscale.DatiAnagrafici BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T)"
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.TerzoIntermediarioOSoggettoEmittente.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.TerzoIntermediarioOSoggettoEmittente.html",
    "title": "Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.TerzoIntermediarioOSoggettoEmittente | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.TerzoIntermediarioOSoggettoEmittente Classes TerzoIntermediarioOSoggettoEmittente Dati relativi al soggetto terzo che emette fattura per conto del cedente / prestatore."
  },
  "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.TerzoIntermediarioOSoggettoEmittente.TerzoIntermediarioOSoggettoEmittente.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaElettronicaHeader.TerzoIntermediarioOSoggettoEmittente.TerzoIntermediarioOSoggettoEmittente.html",
    "title": "Class TerzoIntermediarioOSoggettoEmittente | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class TerzoIntermediarioOSoggettoEmittente Namespace FatturaElettronica.Ordinaria.FatturaElettronicaHeader.TerzoIntermediarioOSoggettoEmittente Assembly FatturaElettronica.dll Dati relativi al soggetto terzo che emette fattura per conto del cedente / prestatore. public class TerzoIntermediarioOSoggettoEmittente : RappresentanteFiscale, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable RappresentanteFiscale TerzoIntermediarioOSoggettoEmittente Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members RappresentanteFiscale.DatiAnagrafici BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T)"
  },
  "api/FatturaElettronica.Ordinaria.FatturaOrdinaria.html": {
    "href": "api/FatturaElettronica.Ordinaria.FatturaOrdinaria.html",
    "title": "Class FatturaOrdinaria | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class FatturaOrdinaria Namespace FatturaElettronica.Ordinaria Assembly FatturaElettronica.dll public class FatturaOrdinaria : FatturaBase, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable FatturaBase FatturaOrdinaria Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members FatturaBase.ReadXml(XmlReader) FatturaBase.WriteXml(XmlWriter) FatturaBase.CreateInstanceFromXml(Stream, bool) FatturaBase.ReadAndHandleXmlStartElement(XmlReader) FatturaBase.SistemaEmittente BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods HtmlExtensions.WriteHtml(FatturaBase, string, string) JsonExtensions.FromJson(FatturaBase, string) SignedFileExtensions.ReadXmlSigned(FatturaBase, Stream, bool) SignedFileExtensions.ReadXmlSigned(FatturaBase, string, bool) SignedFileExtensions.ReadXmlSignedBase64(FatturaBase, string, bool) SignedFileExtensions.WriteXmlSigned(FatturaBase, X509Certificate2, string) SignedFileExtensions.WriteXmlSigned(FatturaBase, string, string, string) XmlExtensions.ReadXml(FatturaBase, Stream) XmlExtensions.ReadXml(FatturaBase, string) XmlExtensions.WriteXml(FatturaBase, string) FatturaElettronicaExtensions.Validate<T>(T) Constructors FatturaOrdinaria() public FatturaOrdinaria() Properties FatturaElettronicaBody Lotto di fatture incluse nella comunicazione. [DataProperty(63)] public List<FatturaElettronicaBody> FatturaElettronicaBody { get; set; } Property Value List<FatturaElettronicaBody> Remarks Il blocco ha molteciplità 1 nel caso di fattura singola; nel caso di lotto di fatture, si ripete per ogni fattura componente il lotto stesso. FatturaElettronicaHeader Intestazione della comunicazione. [DataProperty(55)] public FatturaElettronicaHeader FatturaElettronicaHeader { get; set; } Property Value FatturaElettronicaHeader Methods CreateInstance(Instance) public static FatturaOrdinaria CreateInstance(Instance formato) Parameters formato Instance Returns FatturaOrdinaria GetFormatoTrasmissione() public override string GetFormatoTrasmissione() Returns string GetLocalName() protected override string GetLocalName() Returns string GetNameSpace() protected override string GetNameSpace() Returns string"
  },
  "api/FatturaElettronica.Ordinaria.html": {
    "href": "api/FatturaElettronica.Ordinaria.html",
    "title": "Namespace FatturaElettronica.Ordinaria | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Ordinaria Classes FatturaOrdinaria"
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaBody.DatiBeniServizi.DatiBeniServizi.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaBody.DatiBeniServizi.DatiBeniServizi.html",
    "title": "Class DatiBeniServizi | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiBeniServizi Namespace FatturaElettronica.Semplificata.FatturaElettronicaBody.DatiBeniServizi Assembly FatturaElettronica.dll Blocco sempre obbligatorio contenente natura, qualità e quantità dei beni / servizi formanti oggetto dell'operazione. public class DatiBeniServizi : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiBeniServizi Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiBeniServizi() Blocco sempre obbligatorio contenente natura, qualità e quantità dei beni / servizi formanti oggetto dell'operazione. public DatiBeniServizi() DatiBeniServizi(XmlReader) public DatiBeniServizi(XmlReader r) Parameters r XmlReader Properties DatiIVA Dati relativi all'imposta sul valore aggiunto. [DataProperty(39)] public DatiIVA DatiIVA { get; set; } Property Value DatiIVA Descrizione Natura e quantità dell'oggetto della cessione/prestazione [DataProperty(27)] public string Descrizione { get; set; } Property Value string Importo Ammontare complessivo (comprensivo di imposta). [DataProperty(33)] public decimal Importo { get; set; } Property Value decimal Natura L'elemento serve per indicare il motivo (Natura dell'operazione) per il quale l'emittente della fattura non indica aliquota IVA. [DataProperty(45)] public string Natura { get; set; } Property Value string RiferimentoNormativo Norma di riferimento. [DataProperty(51)] public string RiferimentoNormativo { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaBody.DatiBeniServizi.DatiIVA.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaBody.DatiBeniServizi.DatiIVA.html",
    "title": "Class DatiIVA | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiIVA Namespace FatturaElettronica.Semplificata.FatturaElettronicaBody.DatiBeniServizi Assembly FatturaElettronica.dll Dati relativi all'imposta sul valore aggiunto. public class DatiIVA : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiIVA Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiIVA() Dati relativi all'imposta sul valore aggiunto. public DatiIVA() DatiIVA(XmlReader) public DatiIVA(XmlReader r) Parameters r XmlReader Properties Aliquota Aliquota (%) IVA applicata. Si può indicare in alternativa all'elemento informativo 2,2,3,1 [DataProperty(26)] public decimal? Aliquota { get; set; } Property Value decimal? Imposta Ammontare dell'imposta. Si può indicare in alternativa all'elemento informativo 2,2,3,2 [DataProperty(20)] public decimal? Imposta { get; set; } Property Value decimal?"
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaBody.DatiBeniServizi.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaBody.DatiBeniServizi.html",
    "title": "Namespace FatturaElettronica.Semplificata.FatturaElettronicaBody.DatiBeniServizi | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Semplificata.FatturaElettronicaBody.DatiBeniServizi Classes DatiBeniServizi Blocco sempre obbligatorio contenente natura, qualità e quantità dei beni / servizi formanti oggetto dell'operazione. DatiIVA Dati relativi all'imposta sul valore aggiunto."
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaBody.DatiGenerali.DatiFatturaRettificata.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaBody.DatiGenerali.DatiFatturaRettificata.html",
    "title": "Class DatiFatturaRettificata | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiFatturaRettificata Namespace FatturaElettronica.Semplificata.FatturaElettronicaBody.DatiGenerali Assembly FatturaElettronica.dll Dati relativi alla fattura rettificata. public class DatiFatturaRettificata : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiFatturaRettificata Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiFatturaRettificata() Dati generali del documento principale ed i dati dei documenti correlati. public DatiFatturaRettificata() DatiFatturaRettificata(XmlReader) public DatiFatturaRettificata(XmlReader r) Parameters r XmlReader Properties DataFR Data della fattura rettificata. [DataProperty(33)] public DateTime? DataFR { get; set; } Property Value DateTime? ElementiRettificati Indicazioni specifiche degli elelementi oggetto di rettifica. [DataProperty(39)] public string ElementiRettificati { get; set; } Property Value string NumeroFR Numero progressivo della fattura rettificata. [DataProperty(27)] public string NumeroFR { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaBody.DatiGenerali.DatiGenerali.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaBody.DatiGenerali.DatiGenerali.html",
    "title": "Class DatiGenerali | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiGenerali Namespace FatturaElettronica.Semplificata.FatturaElettronicaBody.DatiGenerali Assembly FatturaElettronica.dll Dati generali del documento principale e dati dei documenti correlati. public class DatiGenerali : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiGenerali Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiGenerali() Dati generali del documento principale e dati dei documenti correlati. public DatiGenerali() DatiGenerali(XmlReader) public DatiGenerali(XmlReader r) Parameters r XmlReader Properties DatiFatturaRettificata Blocco contenente le informazioni relative alla fattura rettificata. Vale per le fatture emesse ai sensi dell'articolo 26 DPR 633/72 [DataProperty(35)] public DatiFatturaRettificata DatiFatturaRettificata { get; set; } Property Value DatiFatturaRettificata DatiGeneraliDocumento Dati generali del documento principale. [DataProperty(28)] public DatiGeneraliDocumento DatiGeneraliDocumento { get; set; } Property Value DatiGeneraliDocumento"
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaBody.DatiGenerali.DatiGeneraliDocumento.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaBody.DatiGenerali.DatiGeneraliDocumento.html",
    "title": "Class DatiGeneraliDocumento | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiGeneraliDocumento Namespace FatturaElettronica.Semplificata.FatturaElettronicaBody.DatiGenerali Assembly FatturaElettronica.dll Dati generali del documento principale ed i dati dei documenti correlati. public class DatiGeneraliDocumento : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiGeneraliDocumento Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiGeneraliDocumento() Dati generali del documento principale ed i dati dei documenti correlati. public DatiGeneraliDocumento() DatiGeneraliDocumento(XmlReader) public DatiGeneraliDocumento(XmlReader r) Parameters r XmlReader Properties BolloVirtuale Bollo assolto ai sendi del decreto MEF 17 giugno 2014 (art.6). [DataProperty(51)] public string BolloVirtuale { get; set; } Property Value string Data Data del documento. [DataProperty(39)] public DateTime Data { get; set; } Property Value DateTime Divisa Codice espresso secondo lo standard ISO 4217 alpha-3:2001 della valuta utilizzata per l'indicazione degli importi. [DataProperty(33)] public string Divisa { get; set; } Property Value string Numero Numero progressivo del documento. [DataProperty(45)] public string Numero { get; set; } Property Value string TipoDocumento Dati generali del documento principale. [DataProperty(27)] public string TipoDocumento { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaBody.DatiGenerali.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaBody.DatiGenerali.html",
    "title": "Namespace FatturaElettronica.Semplificata.FatturaElettronicaBody.DatiGenerali | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Semplificata.FatturaElettronicaBody.DatiGenerali Classes DatiFatturaRettificata Dati relativi alla fattura rettificata. DatiGenerali Dati generali del documento principale e dati dei documenti correlati. DatiGeneraliDocumento Dati generali del documento principale ed i dati dei documenti correlati."
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaBody.FatturaElettronicaBody.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaBody.FatturaElettronicaBody.html",
    "title": "Class FatturaElettronicaBody | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class FatturaElettronicaBody Namespace FatturaElettronica.Semplificata.FatturaElettronicaBody Assembly FatturaElettronica.dll public class FatturaElettronicaBody : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable FatturaElettronicaBody Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors FatturaElettronicaBody() FatturaOrdinaria inclusa nella conunicazione. public FatturaElettronicaBody() FatturaElettronicaBody(XmlReader) public FatturaElettronicaBody(XmlReader r) Parameters r XmlReader Properties Allegati Dati relativi ad eventuali allegati. [DataProperty(36)] public List<Allegati> Allegati { get; set; } Property Value List<Allegati> DatiBeniServizi Blocco semre obbligatorio contenente natura qualità e quantità dei beni/servizi oggetto dell'operazione. [DataProperty(30)] public List<DatiBeniServizi> DatiBeniServizi { get; set; } Property Value List<DatiBeniServizi> DatiGenerali Dati generali del documento principale. [DataProperty(24)] public DatiGenerali DatiGenerali { get; set; } Property Value DatiGenerali"
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaBody.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaBody.html",
    "title": "Namespace FatturaElettronica.Semplificata.FatturaElettronicaBody | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Semplificata.FatturaElettronicaBody Classes FatturaElettronicaBody"
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.CedentePrestatore.CedentePrestatore.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.CedentePrestatore.CedentePrestatore.html",
    "title": "Class CedentePrestatore | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class CedentePrestatore Namespace FatturaElettronica.Semplificata.FatturaElettronicaHeader.CedentePrestatore Assembly FatturaElettronica.dll Dati relativi al cedente / prestatore. public class CedentePrestatore : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable CedentePrestatore Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors CedentePrestatore() Dati relativi al cedente / prestatore. public CedentePrestatore() CedentePrestatore(XmlReader) public CedentePrestatore(XmlReader r) Parameters r XmlReader Properties CodiceFiscale Numero di Codice Fiscale. [DataProperty(1)] public string CodiceFiscale { get; set; } Property Value string Cognome Gets or sets the Cognome. [DataProperty(4)] public string Cognome { get; set; } Property Value string CognomeNome Returns Cognome and Nome as a single value. [JsonIgnore] public string CognomeNome { get; } Property Value string Remarks This is not a OrderedDataProperty so it will not be serialized to XML. Denominazione Gets or sets the Denominazione. [DataProperty(2)] public string Denominazione { get; set; } Property Value string IdFiscaleIVA Numero di identificazione fiscale ai fini IVA; i primi due caratteri rappresentano il paese ed i restanti il codice vero e proprio che, per i residenti in Italia, corrisponde al numero di partita IVA. [DataProperty(0)] public IdFiscaleIVA IdFiscaleIVA { get; set; } Property Value IdFiscaleIVA IscrizioneREA Nei casi di società iscritte nel registro delle imprese ai sensi dell'art. 2250 del codice civile. [DataProperty(8)] public IscrizioneREA IscrizioneREA { get; set; } Property Value IscrizioneREA Nome Gets or sets the Nome. [DataProperty(3)] public string Nome { get; set; } Property Value string RappresentanteFiscale Rappresentante fiscale [DataProperty(7)] public RappresentanteFiscale RappresentanteFiscale { get; set; } Property Value RappresentanteFiscale RegimeFiscale Regime fiscale. [DataProperty(10)] public string RegimeFiscale { get; set; } Property Value string RiferimentoAmministrazione Codice identificativo del cedente / prestatore a fini amministrativi-contabili. [DataProperty(9)] public string RiferimentoAmministrazione { get; set; } Property Value string Sede Dati della sede del cedente / prestatore. [DataProperty(5)] public SedeCedentePrestatore Sede { get; set; } Property Value SedeCedentePrestatore StabileOrganizzazione Nei casi di cedente / prestatore non residente. [DataProperty(6)] public StabileOrganizzazione StabileOrganizzazione { get; set; } Property Value StabileOrganizzazione"
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.CedentePrestatore.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.CedentePrestatore.html",
    "title": "Namespace FatturaElettronica.Semplificata.FatturaElettronicaHeader.CedentePrestatore | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Semplificata.FatturaElettronicaHeader.CedentePrestatore Classes CedentePrestatore Dati relativi al cedente / prestatore. IscrizioneREA Represents a DatiAnagrafici object SedeCedentePrestatore"
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.CedentePrestatore.IscrizioneREA.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.CedentePrestatore.IscrizioneREA.html",
    "title": "Class IscrizioneREA | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class IscrizioneREA Namespace FatturaElettronica.Semplificata.FatturaElettronicaHeader.CedentePrestatore Assembly FatturaElettronica.dll Represents a DatiAnagrafici object public class IscrizioneREA : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable IscrizioneREA Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors IscrizioneREA() public IscrizioneREA() IscrizioneREA(XmlReader) public IscrizioneREA(XmlReader r) Parameters r XmlReader Properties CapitaleSociale Nei soli casi di società di capitali (Spa, SApA, SRL), il campo va valorizzato per indicare il capitale sociale. [DataProperty(30)] public decimal? CapitaleSociale { get; set; } Property Value decimal? NumeroREA Numero di iscrizione al registro delle imprese. [DataProperty(23)] public string NumeroREA { get; set; } Property Value string SocioUnico Nei soli casi di SRL, il campo va valorizzato per indicare se vi è un socio unico oppure se vi sono più soci. [DataProperty(36)] public string SocioUnico { get; set; } Property Value string StatoLiquidazione Indica se la Società si trova in stato di liquidazione oppure no. [DataProperty(42)] public string StatoLiquidazione { get; set; } Property Value string Ufficio Sigla della provincia dell'Ufficio del registro delle imprese presso il quale è registata la società. [DataProperty(17)] public string Ufficio { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.CedentePrestatore.SedeCedentePrestatore.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.CedentePrestatore.SedeCedentePrestatore.html",
    "title": "Class SedeCedentePrestatore | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class SedeCedentePrestatore Namespace FatturaElettronica.Semplificata.FatturaElettronicaHeader.CedentePrestatore Assembly FatturaElettronica.dll public class SedeCedentePrestatore : Località, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable Località SedeCedentePrestatore Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members Località.Indirizzo Località.NumeroCivico Località.CAP Località.Comune Località.Provincia Località.Nazione BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors SedeCedentePrestatore() public SedeCedentePrestatore() SedeCedentePrestatore(XmlReader) public SedeCedentePrestatore(XmlReader r) Parameters r XmlReader"
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.CessionarioCommittente.AltriDatiIdentificativi.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.CessionarioCommittente.AltriDatiIdentificativi.html",
    "title": "Class AltriDatiIdentificativi | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class AltriDatiIdentificativi Namespace FatturaElettronica.Semplificata.FatturaElettronicaHeader.CessionarioCommittente Assembly FatturaElettronica.dll Altri dati identificativi del cessionario / committente. public class AltriDatiIdentificativi : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable AltriDatiIdentificativi Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors AltriDatiIdentificativi() Altri dati fiscali del cessionario / committente. public AltriDatiIdentificativi() AltriDatiIdentificativi(XmlReader) public AltriDatiIdentificativi(XmlReader r) Parameters r XmlReader Properties Cognome Gets or sets the Cognome. [DataProperty(2)] public string Cognome { get; set; } Property Value string CognomeNome Returns Cognome and Nome as a single value. [JsonIgnore] public string CognomeNome { get; } Property Value string Remarks This is not a OrderedDataProperty so it will not be serialized to XML. Denominazione Numero di identificazione fiscale ai fini IVA; i primi due caratteri rappresentano il paese ed i restanti il codice vero e proprio che, per i residenti in Italia, corrisponde al numero di partita IVA. [DataProperty(0)] public string Denominazione { get; set; } Property Value string Nome Gets or sets the Nome. [DataProperty(1)] public string Nome { get; set; } Property Value string RappresentanteFiscale Blocco da valorizzare nei casi in cui il cessionario/committente si avvalga di un rappresentante fiscale in Italia. [DataProperty(62)] public RappresentanteFiscaleCessionarioCommittente RappresentanteFiscale { get; set; } Property Value RappresentanteFiscaleCessionarioCommittente Sede Dati della sede del cessionario / committente. [DataProperty(50)] public SedeCessionarioCommittente Sede { get; set; } Property Value SedeCessionarioCommittente StabileOrganizzazione Blocco da valorizzare nei casi di cessionario/committente non residente e con stabile organizzazione in Italia. [DataProperty(56)] public StabileOrganizzazione StabileOrganizzazione { get; set; } Property Value StabileOrganizzazione"
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.CessionarioCommittente.CessionarioCommittente.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.CessionarioCommittente.CessionarioCommittente.html",
    "title": "Class CessionarioCommittente | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class CessionarioCommittente Namespace FatturaElettronica.Semplificata.FatturaElettronicaHeader.CessionarioCommittente Assembly FatturaElettronica.dll Dati relativi al cessionario/ committente. public class CessionarioCommittente : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable CessionarioCommittente Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors CessionarioCommittente() Dati relativi al cessionario / committente. public CessionarioCommittente() CessionarioCommittente(XmlReader) public CessionarioCommittente(XmlReader r) Parameters r XmlReader Properties AltriDatiIdentificativi Altri dati fiscali del cessionario / committente. [DataProperty(34)] public AltriDatiIdentificativi AltriDatiIdentificativi { get; set; } Property Value AltriDatiIdentificativi IdentificativiFiscali Dati fiscali del cessionario / committente. [DataProperty(28)] public IdentificativiFiscali IdentificativiFiscali { get; set; } Property Value IdentificativiFiscali"
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.CessionarioCommittente.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.CessionarioCommittente.html",
    "title": "Namespace FatturaElettronica.Semplificata.FatturaElettronicaHeader.CessionarioCommittente | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Semplificata.FatturaElettronicaHeader.CessionarioCommittente Classes AltriDatiIdentificativi Altri dati identificativi del cessionario / committente. CessionarioCommittente Dati relativi al cessionario/ committente. IdentificativiFiscali Identificativi fiscali del cessionario/commitente RappresentanteFiscaleCessionarioCommittente Represents a CessionarioCommittente.RappresentanteFiscale object. SedeCessionarioCommittente"
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.CessionarioCommittente.IdentificativiFiscali.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.CessionarioCommittente.IdentificativiFiscali.html",
    "title": "Class IdentificativiFiscali | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class IdentificativiFiscali Namespace FatturaElettronica.Semplificata.FatturaElettronicaHeader.CessionarioCommittente Assembly FatturaElettronica.dll Identificativi fiscali del cessionario/commitente public class IdentificativiFiscali : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable IdentificativiFiscali Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors IdentificativiFiscali() Dati fiscali del cessionario / committente. public IdentificativiFiscali() IdentificativiFiscali(XmlReader) public IdentificativiFiscali(XmlReader r) Parameters r XmlReader Properties CodiceFiscale Numero di Codice Fiscale. [DataProperty(1)] public string CodiceFiscale { get; set; } Property Value string IdFiscaleIVA Numero di identificazione fiscale ai fini IVA; i primi due caratteri rappresentano il paese ed i restanti il codice vero e proprio che, per i residenti in Italia, corrisponde al numero di partita IVA. [DataProperty(0)] public IdFiscaleIVA IdFiscaleIVA { get; set; } Property Value IdFiscaleIVA"
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.CessionarioCommittente.RappresentanteFiscaleCessionarioCommittente.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.CessionarioCommittente.RappresentanteFiscaleCessionarioCommittente.html",
    "title": "Class RappresentanteFiscaleCessionarioCommittente | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class RappresentanteFiscaleCessionarioCommittente Namespace FatturaElettronica.Semplificata.FatturaElettronicaHeader.CessionarioCommittente Assembly FatturaElettronica.dll Represents a CessionarioCommittente.RappresentanteFiscale object. public class RappresentanteFiscaleCessionarioCommittente : DenominazioneNomeCognome, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DenominazioneNomeCognome RappresentanteFiscaleCessionarioCommittente Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members DenominazioneNomeCognome.Denominazione DenominazioneNomeCognome.Nome DenominazioneNomeCognome.Cognome DenominazioneNomeCognome.CognomeNome BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors RappresentanteFiscaleCessionarioCommittente() public RappresentanteFiscaleCessionarioCommittente() RappresentanteFiscaleCessionarioCommittente(XmlReader) public RappresentanteFiscaleCessionarioCommittente(XmlReader r) Parameters r XmlReader Properties IdFiscaleIVA Numero di identificazione fiscale ai fini IVA; i primi due caratteri rappresentano il paese ed i restanti il codice vero e proprio che, per i residenti in Italia, corrisponde al numero di partita IVA. [DataProperty(-1)] public IdFiscaleIVA IdFiscaleIVA { get; set; } Property Value IdFiscaleIVA"
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.CessionarioCommittente.SedeCessionarioCommittente.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.CessionarioCommittente.SedeCessionarioCommittente.html",
    "title": "Class SedeCessionarioCommittente | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class SedeCessionarioCommittente Namespace FatturaElettronica.Semplificata.FatturaElettronicaHeader.CessionarioCommittente Assembly FatturaElettronica.dll public class SedeCessionarioCommittente : Località, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable Località SedeCessionarioCommittente Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members Località.Indirizzo Località.NumeroCivico Località.CAP Località.Comune Località.Provincia Località.Nazione BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors SedeCessionarioCommittente() public SedeCessionarioCommittente() SedeCessionarioCommittente(XmlReader) public SedeCessionarioCommittente(XmlReader r) Parameters r XmlReader"
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.DatiTrasmissione.DatiTrasmissione.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.DatiTrasmissione.DatiTrasmissione.html",
    "title": "Class DatiTrasmissione | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiTrasmissione Namespace FatturaElettronica.Semplificata.FatturaElettronicaHeader.DatiTrasmissione Assembly FatturaElettronica.dll Informazioni che identificano univocamente il soggetto che trasmette, il documento trasmesso, il formato in cui è stato trasmesso il documento, il soggetto destinatario. public class DatiTrasmissione : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable DatiTrasmissione Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors DatiTrasmissione() Constructor. public DatiTrasmissione() DatiTrasmissione(XmlReader) public DatiTrasmissione(XmlReader r) Parameters r XmlReader Properties CodiceDestinatario Codice dell'ufficio dell'amministrazione dello stato destinatario della fattura, definito dall'amministrazione di appartenenza come riportato nella rubrica \"Indice PA\". [DataProperty(49)] public string CodiceDestinatario { get; set; } Property Value string FormatoTrasmissione Codice identificativo del formato/versione con cui è stato trasmesso il documento fattura. [DataProperty(42)] public string FormatoTrasmissione { get; set; } Property Value string IdTrasmittente Identificativo univoco del soggetto trasmittente. [DataProperty(30)] public IdTrasmittente IdTrasmittente { get; set; } Property Value IdTrasmittente PECDestinatario Inidirizzo PEC al quale inviare il documento. [DataProperty(55)] public string PECDestinatario { get; set; } Property Value string ProgressivoInvio Progressivo univoco, attribuito dal soggetto che trasmette, relativo ad ogni singolo documento fattura. [DataProperty(36)] public string ProgressivoInvio { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.DatiTrasmissione.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.DatiTrasmissione.html",
    "title": "Namespace FatturaElettronica.Semplificata.FatturaElettronicaHeader.DatiTrasmissione | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Semplificata.FatturaElettronicaHeader.DatiTrasmissione Classes DatiTrasmissione Informazioni che identificano univocamente il soggetto che trasmette, il documento trasmesso, il formato in cui è stato trasmesso il documento, il soggetto destinatario. IdTrasmittente"
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.DatiTrasmissione.IdTrasmittente.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.DatiTrasmissione.IdTrasmittente.html",
    "title": "Class IdTrasmittente | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class IdTrasmittente Namespace FatturaElettronica.Semplificata.FatturaElettronicaHeader.DatiTrasmissione Assembly FatturaElettronica.dll public class IdTrasmittente : IdFiscaleIVA, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable IdFiscaleIVA IdTrasmittente Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members IdFiscaleIVA.IdPaese IdFiscaleIVA.IdCodice IdFiscaleIVA.ToString() BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors IdTrasmittente() public IdTrasmittente() IdTrasmittente(XmlReader) public IdTrasmittente(XmlReader r) Parameters r XmlReader"
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.FatturaElettronicaHeader.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.FatturaElettronicaHeader.html",
    "title": "Class FatturaElettronicaHeader | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class FatturaElettronicaHeader Namespace FatturaElettronica.Semplificata.FatturaElettronicaHeader Assembly FatturaElettronica.dll public class FatturaElettronicaHeader : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable FatturaElettronicaHeader Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors FatturaElettronicaHeader() Intestazione della FatturaOrdinaria Elettronica. public FatturaElettronicaHeader() FatturaElettronicaHeader(XmlReader) public FatturaElettronicaHeader(XmlReader r) Parameters r XmlReader Properties CedentePrestatore Dati relativi al cedente / prestatore. [DataProperty(33)] public CedentePrestatore CedentePrestatore { get; set; } Property Value CedentePrestatore CessionarioCommittente Dati relativi al cessionario / committente [DataProperty(39)] public CessionarioCommittente CessionarioCommittente { get; set; } Property Value CessionarioCommittente DatiTrasmissione Informazioni che identificano univocamente il soggetto che trasmette, il documento trasmesso, il formato in cui è stato trasmesso il documento, il soggetto destinatario. [DataProperty(27)] public DatiTrasmissione DatiTrasmissione { get; set; } Property Value DatiTrasmissione SoggettoEmittente Nei casi di documenti emessi da un soggetto diverso dal cedente / prestatore, indica se la fattura sia stata emessa o da parte del cessionario / committente oppure da parte di un terzo per conto del cedente / prestatore. [DataProperty(46)] public string SoggettoEmittente { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.html",
    "title": "Namespace FatturaElettronica.Semplificata.FatturaElettronicaHeader | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Semplificata.FatturaElettronicaHeader Classes FatturaElettronicaHeader RappresentanteFiscale Dati relativi al rappresentante fiscale del cessionario / committente."
  },
  "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.RappresentanteFiscale.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaElettronicaHeader.RappresentanteFiscale.html",
    "title": "Class RappresentanteFiscale | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class RappresentanteFiscale Namespace FatturaElettronica.Semplificata.FatturaElettronicaHeader Assembly FatturaElettronica.dll Dati relativi al rappresentante fiscale del cessionario / committente. public class RappresentanteFiscale : BaseClassSerializable, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable RappresentanteFiscale Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClassSerializable.WriteXml(XmlWriter) BaseClassSerializable.ReadAndHandleXmlStartElement(XmlReader) BaseClassSerializable.ReadXml(XmlReader) BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods FatturaElettronicaExtensions.Validate<T>(T) Constructors RappresentanteFiscale() Dati relativi al rappresentante fiscale del cessionario / committente. public RappresentanteFiscale() RappresentanteFiscale(XmlReader) public RappresentanteFiscale(XmlReader r) Parameters r XmlReader Properties Cognome Gets or sets the Cognome. [DataProperty(3)] public string Cognome { get; set; } Property Value string CognomeNome Returns Cognome and Nome as a single value. [JsonIgnore] public string CognomeNome { get; } Property Value string Remarks This is not a OrderedDataProperty so it will not be serialized to XML. Denominazione Gets or sets the Denominazione. [DataProperty(1)] public string Denominazione { get; set; } Property Value string IdFiscaleIVA Dati anagrafici del rappresentante fiscale del cedente / prestatore. [DataProperty(0)] public IdFiscaleIVA IdFiscaleIVA { get; set; } Property Value IdFiscaleIVA Nome Gets or sets the Nome. [DataProperty(2)] public string Nome { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Semplificata.FatturaSemplificata.html": {
    "href": "api/FatturaElettronica.Semplificata.FatturaSemplificata.html",
    "title": "Class FatturaSemplificata | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class FatturaSemplificata Namespace FatturaElettronica.Semplificata Assembly FatturaElettronica.dll public class FatturaSemplificata : FatturaBase, INotifyPropertyChanged, IEquatable<BaseClass>, IXmlSerializable Inheritance object BaseClass BaseClassSerializable FatturaBase FatturaSemplificata Implements INotifyPropertyChanged IEquatable<BaseClass> IXmlSerializable Inherited Members FatturaBase.ReadXml(XmlReader) FatturaBase.WriteXml(XmlWriter) FatturaBase.CreateInstanceFromXml(Stream, bool) FatturaBase.ReadAndHandleXmlStartElement(XmlReader) FatturaBase.SistemaEmittente BaseClassSerializable.XmlOptions BaseClassSerializable.FromJson(Utf8JsonReader) BaseClassSerializable.ToJson() BaseClassSerializable.ToJson(JsonOptions) BaseClassSerializable.GetSchema() BaseClass.PropertyChanged BaseClass.SetProperty<T>(ref T, T, string) BaseClass.CleanString(string) BaseClass.IsEmpty() BaseClass.GetAllDataProperties() BaseClass.GetKnownNonDataProperty(string) BaseClass.Equals(BaseClass) BaseClass.Equals(object) BaseClass.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods HtmlExtensions.WriteHtml(FatturaBase, string, string) JsonExtensions.FromJson(FatturaBase, string) SignedFileExtensions.ReadXmlSigned(FatturaBase, Stream, bool) SignedFileExtensions.ReadXmlSigned(FatturaBase, string, bool) SignedFileExtensions.ReadXmlSignedBase64(FatturaBase, string, bool) SignedFileExtensions.WriteXmlSigned(FatturaBase, X509Certificate2, string) SignedFileExtensions.WriteXmlSigned(FatturaBase, string, string, string) XmlExtensions.ReadXml(FatturaBase, Stream) XmlExtensions.ReadXml(FatturaBase, string) XmlExtensions.WriteXml(FatturaBase, string) FatturaElettronicaExtensions.Validate<T>(T) Constructors FatturaSemplificata() public FatturaSemplificata() Properties FatturaElettronicaBody Lotto di fatture incluse nella comunicazione. [DataProperty(60)] public List<FatturaElettronicaBody> FatturaElettronicaBody { get; set; } Property Value List<FatturaElettronicaBody> Remarks Il blocco ha molteciplità 1 nel caso di fattura singola; nel caso di lotto di fatture, si ripete per ogni fattura componente il lotto stesso. FatturaElettronicaHeader Intestazione della comunicazione. [DataProperty(52)] public FatturaElettronicaHeader FatturaElettronicaHeader { get; set; } Property Value FatturaElettronicaHeader Methods CreateInstance(Instance) public static FatturaSemplificata CreateInstance(Instance formato) Parameters formato Instance Returns FatturaSemplificata GetFormatoTrasmissione() public override string GetFormatoTrasmissione() Returns string GetLocalName() protected override string GetLocalName() Returns string GetNameSpace() protected override string GetNameSpace() Returns string"
  },
  "api/FatturaElettronica.Semplificata.html": {
    "href": "api/FatturaElettronica.Semplificata.html",
    "title": "Namespace FatturaElettronica.Semplificata | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Semplificata Classes FatturaSemplificata"
  },
  "api/FatturaElettronica.Tabelle.CausalePagamento.html": {
    "href": "api/FatturaElettronica.Tabelle.CausalePagamento.html",
    "title": "Class CausalePagamento | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class CausalePagamento Namespace FatturaElettronica.Tabelle Assembly FatturaElettronica.dll public class CausalePagamento : Tabella Inheritance object Tabella CausalePagamento Inherited Members Tabella.Nome Tabella.Codice Tabella.Descrizione Tabella.Codici object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties List public override Tabella[] List { get; } Property Value Tabella[]"
  },
  "api/FatturaElettronica.Tabelle.CondizioniPagamento.html": {
    "href": "api/FatturaElettronica.Tabelle.CondizioniPagamento.html",
    "title": "Class CondizioniPagamento | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class CondizioniPagamento Namespace FatturaElettronica.Tabelle Assembly FatturaElettronica.dll public class CondizioniPagamento : Tabella Inheritance object Tabella CondizioniPagamento Inherited Members Tabella.Nome Tabella.Codice Tabella.Descrizione Tabella.Codici object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties List public override Tabella[] List { get; } Property Value Tabella[]"
  },
  "api/FatturaElettronica.Tabelle.Divisa.html": {
    "href": "api/FatturaElettronica.Tabelle.Divisa.html",
    "title": "Class Divisa | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class Divisa Namespace FatturaElettronica.Tabelle Assembly FatturaElettronica.dll public class Divisa : Tabella Inheritance object Tabella Divisa Inherited Members Tabella.Nome Tabella.Codice Tabella.Descrizione Tabella.Codici object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties List public override Tabella[] List { get; } Property Value Tabella[]"
  },
  "api/FatturaElettronica.Tabelle.EsigibilitaIVA.html": {
    "href": "api/FatturaElettronica.Tabelle.EsigibilitaIVA.html",
    "title": "Class EsigibilitaIVA | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class EsigibilitaIVA Namespace FatturaElettronica.Tabelle Assembly FatturaElettronica.dll public class EsigibilitaIVA : Tabella Inheritance object Tabella EsigibilitaIVA Inherited Members Tabella.Nome Tabella.Codice Tabella.Descrizione Tabella.Codici object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties List public override Tabella[] List { get; } Property Value Tabella[]"
  },
  "api/FatturaElettronica.Tabelle.FormatoTrasmissione.html": {
    "href": "api/FatturaElettronica.Tabelle.FormatoTrasmissione.html",
    "title": "Class FormatoTrasmissione | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class FormatoTrasmissione Namespace FatturaElettronica.Tabelle Assembly FatturaElettronica.dll public class FormatoTrasmissione : Tabella Inheritance object Tabella FormatoTrasmissione Inherited Members Tabella.Nome Tabella.Codice Tabella.Descrizione Tabella.Codici object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties List public override Tabella[] List { get; } Property Value Tabella[]"
  },
  "api/FatturaElettronica.Tabelle.html": {
    "href": "api/FatturaElettronica.Tabelle.html",
    "title": "Namespace FatturaElettronica.Tabelle | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Tabelle Classes CausalePagamento CondizioniPagamento Divisa EsigibilitaIVA FormatoTrasmissione IdPaese ModalitaPagamento Natura NaturaSemplificata Provincia Attualmente non usata in convalida, vedo: https://github.com/FatturaElettronica/FatturaElettronica.NET/issues/129 /// RegimeFiscale ScontoMaggiorazione SocioUnico SoggettoEmittente StatoLiquidazione Tabella TipoCassa TipoCessionePrestazione TipoDocumento TipoDocumentoSemplificata TipoResa TipoRitenuta"
  },
  "api/FatturaElettronica.Tabelle.IdPaese.html": {
    "href": "api/FatturaElettronica.Tabelle.IdPaese.html",
    "title": "Class IdPaese | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class IdPaese Namespace FatturaElettronica.Tabelle Assembly FatturaElettronica.dll public class IdPaese : Tabella Inheritance object Tabella IdPaese Inherited Members Tabella.Nome Tabella.Codice Tabella.Descrizione Tabella.Codici object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties List public override Tabella[] List { get; } Property Value Tabella[]"
  },
  "api/FatturaElettronica.Tabelle.ModalitaPagamento.html": {
    "href": "api/FatturaElettronica.Tabelle.ModalitaPagamento.html",
    "title": "Class ModalitaPagamento | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class ModalitaPagamento Namespace FatturaElettronica.Tabelle Assembly FatturaElettronica.dll public class ModalitaPagamento : Tabella Inheritance object Tabella ModalitaPagamento Inherited Members Tabella.Nome Tabella.Codice Tabella.Descrizione Tabella.Codici object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties List public override Tabella[] List { get; } Property Value Tabella[]"
  },
  "api/FatturaElettronica.Tabelle.Natura.html": {
    "href": "api/FatturaElettronica.Tabelle.Natura.html",
    "title": "Class Natura | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class Natura Namespace FatturaElettronica.Tabelle Assembly FatturaElettronica.dll public class Natura : Tabella Inheritance object Tabella Natura Inherited Members Tabella.Nome Tabella.Codice Tabella.Descrizione Tabella.Codici object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties List public override Tabella[] List { get; } Property Value Tabella[]"
  },
  "api/FatturaElettronica.Tabelle.NaturaSemplificata.html": {
    "href": "api/FatturaElettronica.Tabelle.NaturaSemplificata.html",
    "title": "Class NaturaSemplificata | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class NaturaSemplificata Namespace FatturaElettronica.Tabelle Assembly FatturaElettronica.dll public class NaturaSemplificata : Tabella Inheritance object Tabella NaturaSemplificata Inherited Members Tabella.Nome Tabella.Codice Tabella.Descrizione Tabella.Codici object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties List public override Tabella[] List { get; } Property Value Tabella[]"
  },
  "api/FatturaElettronica.Tabelle.Provincia.html": {
    "href": "api/FatturaElettronica.Tabelle.Provincia.html",
    "title": "Class Provincia | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class Provincia Namespace FatturaElettronica.Tabelle Assembly FatturaElettronica.dll Attualmente non usata in convalida, vedo: https://github.com/FatturaElettronica/FatturaElettronica.NET/issues/129 /// public class Provincia : Tabella Inheritance object Tabella Provincia Inherited Members Tabella.Nome Tabella.Codice Tabella.Descrizione Tabella.Codici object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties List public override Tabella[] List { get; } Property Value Tabella[]"
  },
  "api/FatturaElettronica.Tabelle.RegimeFiscale.html": {
    "href": "api/FatturaElettronica.Tabelle.RegimeFiscale.html",
    "title": "Class RegimeFiscale | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class RegimeFiscale Namespace FatturaElettronica.Tabelle Assembly FatturaElettronica.dll public class RegimeFiscale : Tabella Inheritance object Tabella RegimeFiscale Inherited Members Tabella.Nome Tabella.Codice Tabella.Descrizione Tabella.Codici object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties List public override Tabella[] List { get; } Property Value Tabella[]"
  },
  "api/FatturaElettronica.Tabelle.ScontoMaggiorazione.html": {
    "href": "api/FatturaElettronica.Tabelle.ScontoMaggiorazione.html",
    "title": "Class ScontoMaggiorazione | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class ScontoMaggiorazione Namespace FatturaElettronica.Tabelle Assembly FatturaElettronica.dll public class ScontoMaggiorazione : Tabella Inheritance object Tabella ScontoMaggiorazione Inherited Members Tabella.Nome Tabella.Codice Tabella.Descrizione Tabella.Codici object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties List public override Tabella[] List { get; } Property Value Tabella[]"
  },
  "api/FatturaElettronica.Tabelle.SocioUnico.html": {
    "href": "api/FatturaElettronica.Tabelle.SocioUnico.html",
    "title": "Class SocioUnico | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class SocioUnico Namespace FatturaElettronica.Tabelle Assembly FatturaElettronica.dll public class SocioUnico : Tabella Inheritance object Tabella SocioUnico Inherited Members Tabella.Nome Tabella.Codice Tabella.Descrizione Tabella.Codici object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties List public override Tabella[] List { get; } Property Value Tabella[]"
  },
  "api/FatturaElettronica.Tabelle.SoggettoEmittente.html": {
    "href": "api/FatturaElettronica.Tabelle.SoggettoEmittente.html",
    "title": "Class SoggettoEmittente | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class SoggettoEmittente Namespace FatturaElettronica.Tabelle Assembly FatturaElettronica.dll public class SoggettoEmittente : Tabella Inheritance object Tabella SoggettoEmittente Inherited Members Tabella.Nome Tabella.Codice Tabella.Descrizione Tabella.Codici object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties List public override Tabella[] List { get; } Property Value Tabella[]"
  },
  "api/FatturaElettronica.Tabelle.StatoLiquidazione.html": {
    "href": "api/FatturaElettronica.Tabelle.StatoLiquidazione.html",
    "title": "Class StatoLiquidazione | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class StatoLiquidazione Namespace FatturaElettronica.Tabelle Assembly FatturaElettronica.dll public class StatoLiquidazione : Tabella Inheritance object Tabella StatoLiquidazione Inherited Members Tabella.Nome Tabella.Codice Tabella.Descrizione Tabella.Codici object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties List public override Tabella[] List { get; } Property Value Tabella[]"
  },
  "api/FatturaElettronica.Tabelle.Tabella.html": {
    "href": "api/FatturaElettronica.Tabelle.Tabella.html",
    "title": "Class Tabella | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class Tabella Namespace FatturaElettronica.Tabelle Assembly FatturaElettronica.dll public abstract class Tabella Inheritance object Tabella Derived CausalePagamento CondizioniPagamento Divisa EsigibilitaIVA FormatoTrasmissione IdPaese ModalitaPagamento Natura NaturaSemplificata Provincia RegimeFiscale ScontoMaggiorazione SocioUnico SoggettoEmittente StatoLiquidazione TipoCassa TipoCessionePrestazione TipoDocumento TipoDocumentoSemplificata TipoResa TipoRitenuta Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Codice public string Codice { get; protected set; } Property Value string Codici public HashSet<string> Codici { get; } Property Value HashSet<string> Descrizione public string Descrizione { get; } Property Value string List public abstract Tabella[] List { get; } Property Value Tabella[] Nome public string Nome { get; set; } Property Value string"
  },
  "api/FatturaElettronica.Tabelle.TipoCassa.html": {
    "href": "api/FatturaElettronica.Tabelle.TipoCassa.html",
    "title": "Class TipoCassa | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class TipoCassa Namespace FatturaElettronica.Tabelle Assembly FatturaElettronica.dll public class TipoCassa : Tabella Inheritance object Tabella TipoCassa Inherited Members Tabella.Nome Tabella.Codice Tabella.Descrizione Tabella.Codici object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties List public override Tabella[] List { get; } Property Value Tabella[]"
  },
  "api/FatturaElettronica.Tabelle.TipoCessionePrestazione.html": {
    "href": "api/FatturaElettronica.Tabelle.TipoCessionePrestazione.html",
    "title": "Class TipoCessionePrestazione | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class TipoCessionePrestazione Namespace FatturaElettronica.Tabelle Assembly FatturaElettronica.dll public class TipoCessionePrestazione : Tabella Inheritance object Tabella TipoCessionePrestazione Inherited Members Tabella.Nome Tabella.Codice Tabella.Descrizione Tabella.Codici object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties List public override Tabella[] List { get; } Property Value Tabella[]"
  },
  "api/FatturaElettronica.Tabelle.TipoDocumento.html": {
    "href": "api/FatturaElettronica.Tabelle.TipoDocumento.html",
    "title": "Class TipoDocumento | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class TipoDocumento Namespace FatturaElettronica.Tabelle Assembly FatturaElettronica.dll public class TipoDocumento : Tabella Inheritance object Tabella TipoDocumento Inherited Members Tabella.Nome Tabella.Codice Tabella.Descrizione Tabella.Codici object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties List public override Tabella[] List { get; } Property Value Tabella[]"
  },
  "api/FatturaElettronica.Tabelle.TipoDocumentoSemplificata.html": {
    "href": "api/FatturaElettronica.Tabelle.TipoDocumentoSemplificata.html",
    "title": "Class TipoDocumentoSemplificata | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class TipoDocumentoSemplificata Namespace FatturaElettronica.Tabelle Assembly FatturaElettronica.dll public class TipoDocumentoSemplificata : Tabella Inheritance object Tabella TipoDocumentoSemplificata Inherited Members Tabella.Nome Tabella.Codice Tabella.Descrizione Tabella.Codici object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties List public override Tabella[] List { get; } Property Value Tabella[]"
  },
  "api/FatturaElettronica.Tabelle.TipoResa.html": {
    "href": "api/FatturaElettronica.Tabelle.TipoResa.html",
    "title": "Class TipoResa | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class TipoResa Namespace FatturaElettronica.Tabelle Assembly FatturaElettronica.dll public class TipoResa : Tabella Inheritance object Tabella TipoResa Inherited Members Tabella.Nome Tabella.Codice Tabella.Descrizione Tabella.Codici object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties List public override Tabella[] List { get; } Property Value Tabella[]"
  },
  "api/FatturaElettronica.Tabelle.TipoRitenuta.html": {
    "href": "api/FatturaElettronica.Tabelle.TipoRitenuta.html",
    "title": "Class TipoRitenuta | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class TipoRitenuta Namespace FatturaElettronica.Tabelle Assembly FatturaElettronica.dll public class TipoRitenuta : Tabella Inheritance object Tabella TipoRitenuta Inherited Members Tabella.Nome Tabella.Codice Tabella.Descrizione Tabella.Codici object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties List public override Tabella[] List { get; } Property Value Tabella[]"
  },
  "api/FatturaElettronica.Validators.AllegatiValidator.html": {
    "href": "api/FatturaElettronica.Validators.AllegatiValidator.html",
    "title": "Class AllegatiValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class AllegatiValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class AllegatiValidator : AbstractValidator<Allegati>, IValidator<Allegati>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<Allegati> AllegatiValidator Implements IValidator<Allegati> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<Allegati>.Validate(Allegati) AbstractValidator<Allegati>.ValidateAsync(Allegati, CancellationToken) AbstractValidator<Allegati>.Validate(ValidationContext<Allegati>) AbstractValidator<Allegati>.ValidateAsync(ValidationContext<Allegati>, CancellationToken) AbstractValidator<Allegati>.CreateDescriptor() AbstractValidator<Allegati>.RuleFor<TProperty>(Expression<Func<Allegati, TProperty>>) AbstractValidator<Allegati>.Transform<TProperty, TTransformed>(Expression<Func<Allegati, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<Allegati>.Transform<TProperty, TTransformed>(Expression<Func<Allegati, TProperty>>, Func<Allegati, TProperty, TTransformed>) AbstractValidator<Allegati>.RuleForEach<TElement>(Expression<Func<Allegati, IEnumerable<TElement>>>) AbstractValidator<Allegati>.TransformForEach<TElement, TTransformed>(Expression<Func<Allegati, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<Allegati>.TransformForEach<TElement, TTransformed>(Expression<Func<Allegati, IEnumerable<TElement>>>, Func<Allegati, TElement, TTransformed>) AbstractValidator<Allegati>.RuleSet(string, Action) AbstractValidator<Allegati>.When(Func<Allegati, bool>, Action) AbstractValidator<Allegati>.When(Func<Allegati, ValidationContext<Allegati>, bool>, Action) AbstractValidator<Allegati>.Unless(Func<Allegati, bool>, Action) AbstractValidator<Allegati>.Unless(Func<Allegati, ValidationContext<Allegati>, bool>, Action) AbstractValidator<Allegati>.WhenAsync(Func<Allegati, CancellationToken, Task<bool>>, Action) AbstractValidator<Allegati>.WhenAsync(Func<Allegati, ValidationContext<Allegati>, CancellationToken, Task<bool>>, Action) AbstractValidator<Allegati>.UnlessAsync(Func<Allegati, CancellationToken, Task<bool>>, Action) AbstractValidator<Allegati>.UnlessAsync(Func<Allegati, ValidationContext<Allegati>, CancellationToken, Task<bool>>, Action) AbstractValidator<Allegati>.Include(IValidator<Allegati>) AbstractValidator<Allegati>.Include<TValidator>(Func<Allegati, TValidator>) AbstractValidator<Allegati>.GetEnumerator() AbstractValidator<Allegati>.EnsureInstanceNotNull(object) AbstractValidator<Allegati>.PreValidate(ValidationContext<Allegati>, ValidationResult) AbstractValidator<Allegati>.RaiseValidationException(ValidationContext<Allegati>, ValidationResult) AbstractValidator<Allegati>.CascadeMode AbstractValidator<Allegati>.ClassLevelCascadeMode AbstractValidator<Allegati>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AllegatiValidator() public AllegatiValidator()"
  },
  "api/FatturaElettronica.Validators.AltriDatiGestionaliValidator.html": {
    "href": "api/FatturaElettronica.Validators.AltriDatiGestionaliValidator.html",
    "title": "Class AltriDatiGestionaliValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class AltriDatiGestionaliValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class AltriDatiGestionaliValidator : AbstractValidator<AltriDatiGestionali>, IValidator<AltriDatiGestionali>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<AltriDatiGestionali> AltriDatiGestionaliValidator Implements IValidator<AltriDatiGestionali> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<AltriDatiGestionali>.Validate(AltriDatiGestionali) AbstractValidator<AltriDatiGestionali>.ValidateAsync(AltriDatiGestionali, CancellationToken) AbstractValidator<AltriDatiGestionali>.Validate(ValidationContext<AltriDatiGestionali>) AbstractValidator<AltriDatiGestionali>.ValidateAsync(ValidationContext<AltriDatiGestionali>, CancellationToken) AbstractValidator<AltriDatiGestionali>.CreateDescriptor() AbstractValidator<AltriDatiGestionali>.RuleFor<TProperty>(Expression<Func<AltriDatiGestionali, TProperty>>) AbstractValidator<AltriDatiGestionali>.Transform<TProperty, TTransformed>(Expression<Func<AltriDatiGestionali, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<AltriDatiGestionali>.Transform<TProperty, TTransformed>(Expression<Func<AltriDatiGestionali, TProperty>>, Func<AltriDatiGestionali, TProperty, TTransformed>) AbstractValidator<AltriDatiGestionali>.RuleForEach<TElement>(Expression<Func<AltriDatiGestionali, IEnumerable<TElement>>>) AbstractValidator<AltriDatiGestionali>.TransformForEach<TElement, TTransformed>(Expression<Func<AltriDatiGestionali, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<AltriDatiGestionali>.TransformForEach<TElement, TTransformed>(Expression<Func<AltriDatiGestionali, IEnumerable<TElement>>>, Func<AltriDatiGestionali, TElement, TTransformed>) AbstractValidator<AltriDatiGestionali>.RuleSet(string, Action) AbstractValidator<AltriDatiGestionali>.When(Func<AltriDatiGestionali, bool>, Action) AbstractValidator<AltriDatiGestionali>.When(Func<AltriDatiGestionali, ValidationContext<AltriDatiGestionali>, bool>, Action) AbstractValidator<AltriDatiGestionali>.Unless(Func<AltriDatiGestionali, bool>, Action) AbstractValidator<AltriDatiGestionali>.Unless(Func<AltriDatiGestionali, ValidationContext<AltriDatiGestionali>, bool>, Action) AbstractValidator<AltriDatiGestionali>.WhenAsync(Func<AltriDatiGestionali, CancellationToken, Task<bool>>, Action) AbstractValidator<AltriDatiGestionali>.WhenAsync(Func<AltriDatiGestionali, ValidationContext<AltriDatiGestionali>, CancellationToken, Task<bool>>, Action) AbstractValidator<AltriDatiGestionali>.UnlessAsync(Func<AltriDatiGestionali, CancellationToken, Task<bool>>, Action) AbstractValidator<AltriDatiGestionali>.UnlessAsync(Func<AltriDatiGestionali, ValidationContext<AltriDatiGestionali>, CancellationToken, Task<bool>>, Action) AbstractValidator<AltriDatiGestionali>.Include(IValidator<AltriDatiGestionali>) AbstractValidator<AltriDatiGestionali>.Include<TValidator>(Func<AltriDatiGestionali, TValidator>) AbstractValidator<AltriDatiGestionali>.GetEnumerator() AbstractValidator<AltriDatiGestionali>.EnsureInstanceNotNull(object) AbstractValidator<AltriDatiGestionali>.PreValidate(ValidationContext<AltriDatiGestionali>, ValidationResult) AbstractValidator<AltriDatiGestionali>.RaiseValidationException(ValidationContext<AltriDatiGestionali>, ValidationResult) AbstractValidator<AltriDatiGestionali>.CascadeMode AbstractValidator<AltriDatiGestionali>.ClassLevelCascadeMode AbstractValidator<AltriDatiGestionali>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AltriDatiGestionaliValidator() public AltriDatiGestionaliValidator()"
  },
  "api/FatturaElettronica.Validators.AnagraficaValidator.html": {
    "href": "api/FatturaElettronica.Validators.AnagraficaValidator.html",
    "title": "Class AnagraficaValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class AnagraficaValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class AnagraficaValidator : DenominazioneNomeCognomeValidator<Anagrafica>, IValidator<Anagrafica>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<Anagrafica> DenominazioneNomeCognomeValidator<Anagrafica> AnagraficaValidator Implements IValidator<Anagrafica> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<Anagrafica>.Validate(Anagrafica) AbstractValidator<Anagrafica>.ValidateAsync(Anagrafica, CancellationToken) AbstractValidator<Anagrafica>.Validate(ValidationContext<Anagrafica>) AbstractValidator<Anagrafica>.ValidateAsync(ValidationContext<Anagrafica>, CancellationToken) AbstractValidator<Anagrafica>.CreateDescriptor() AbstractValidator<Anagrafica>.RuleFor<TProperty>(Expression<Func<Anagrafica, TProperty>>) AbstractValidator<Anagrafica>.Transform<TProperty, TTransformed>(Expression<Func<Anagrafica, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<Anagrafica>.Transform<TProperty, TTransformed>(Expression<Func<Anagrafica, TProperty>>, Func<Anagrafica, TProperty, TTransformed>) AbstractValidator<Anagrafica>.RuleForEach<TElement>(Expression<Func<Anagrafica, IEnumerable<TElement>>>) AbstractValidator<Anagrafica>.TransformForEach<TElement, TTransformed>(Expression<Func<Anagrafica, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<Anagrafica>.TransformForEach<TElement, TTransformed>(Expression<Func<Anagrafica, IEnumerable<TElement>>>, Func<Anagrafica, TElement, TTransformed>) AbstractValidator<Anagrafica>.RuleSet(string, Action) AbstractValidator<Anagrafica>.When(Func<Anagrafica, bool>, Action) AbstractValidator<Anagrafica>.When(Func<Anagrafica, ValidationContext<Anagrafica>, bool>, Action) AbstractValidator<Anagrafica>.Unless(Func<Anagrafica, bool>, Action) AbstractValidator<Anagrafica>.Unless(Func<Anagrafica, ValidationContext<Anagrafica>, bool>, Action) AbstractValidator<Anagrafica>.WhenAsync(Func<Anagrafica, CancellationToken, Task<bool>>, Action) AbstractValidator<Anagrafica>.WhenAsync(Func<Anagrafica, ValidationContext<Anagrafica>, CancellationToken, Task<bool>>, Action) AbstractValidator<Anagrafica>.UnlessAsync(Func<Anagrafica, CancellationToken, Task<bool>>, Action) AbstractValidator<Anagrafica>.UnlessAsync(Func<Anagrafica, ValidationContext<Anagrafica>, CancellationToken, Task<bool>>, Action) AbstractValidator<Anagrafica>.Include(IValidator<Anagrafica>) AbstractValidator<Anagrafica>.Include<TValidator>(Func<Anagrafica, TValidator>) AbstractValidator<Anagrafica>.GetEnumerator() AbstractValidator<Anagrafica>.EnsureInstanceNotNull(object) AbstractValidator<Anagrafica>.PreValidate(ValidationContext<Anagrafica>, ValidationResult) AbstractValidator<Anagrafica>.RaiseValidationException(ValidationContext<Anagrafica>, ValidationResult) AbstractValidator<Anagrafica>.CascadeMode AbstractValidator<Anagrafica>.ClassLevelCascadeMode AbstractValidator<Anagrafica>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AnagraficaValidator() public AnagraficaValidator()"
  },
  "api/FatturaElettronica.Validators.BasicLatinValidator-2.html": {
    "href": "api/FatturaElettronica.Validators.BasicLatinValidator-2.html",
    "title": "Class BasicLatinValidator<T, TProperty> | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class BasicLatinValidator<T, TProperty> Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class BasicLatinValidator<T, TProperty> : LatinBaseValidator<T, TProperty>, IPropertyValidator<T, TProperty>, IPropertyValidator Type Parameters T TProperty Inheritance object PropertyValidator<T, TProperty> LatinBaseValidator<T, TProperty> BasicLatinValidator<T, TProperty> Implements IPropertyValidator<T, TProperty> IPropertyValidator Inherited Members LatinBaseValidator<T, TProperty>.GetDefaultMessageTemplate(string) LatinBaseValidator<T, TProperty>.IsValid(ValidationContext<T>, TProperty) LatinBaseValidator<T, TProperty>.Name PropertyValidator<T, TProperty>.GetDefaultMessageTemplate(string) PropertyValidator<T, TProperty>.Localized(string, string) PropertyValidator<T, TProperty>.IsValid(ValidationContext<T>, TProperty) PropertyValidator<T, TProperty>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BasicLatinValidator() public BasicLatinValidator()"
  },
  "api/FatturaElettronica.Validators.CausaleValidator.html": {
    "href": "api/FatturaElettronica.Validators.CausaleValidator.html",
    "title": "Class CausaleValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class CausaleValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class CausaleValidator : AbstractValidator<string>, IValidator<string>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<string> CausaleValidator Implements IValidator<string> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<string>.Validate(string) AbstractValidator<string>.ValidateAsync(string, CancellationToken) AbstractValidator<string>.Validate(ValidationContext<string>) AbstractValidator<string>.ValidateAsync(ValidationContext<string>, CancellationToken) AbstractValidator<string>.CreateDescriptor() AbstractValidator<string>.RuleFor<TProperty>(Expression<Func<string, TProperty>>) AbstractValidator<string>.Transform<TProperty, TTransformed>(Expression<Func<string, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<string>.Transform<TProperty, TTransformed>(Expression<Func<string, TProperty>>, Func<string, TProperty, TTransformed>) AbstractValidator<string>.RuleForEach<TElement>(Expression<Func<string, IEnumerable<TElement>>>) AbstractValidator<string>.TransformForEach<TElement, TTransformed>(Expression<Func<string, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<string>.TransformForEach<TElement, TTransformed>(Expression<Func<string, IEnumerable<TElement>>>, Func<string, TElement, TTransformed>) AbstractValidator<string>.RuleSet(string, Action) AbstractValidator<string>.When(Func<string, bool>, Action) AbstractValidator<string>.When(Func<string, ValidationContext<string>, bool>, Action) AbstractValidator<string>.Unless(Func<string, bool>, Action) AbstractValidator<string>.Unless(Func<string, ValidationContext<string>, bool>, Action) AbstractValidator<string>.WhenAsync(Func<string, CancellationToken, Task<bool>>, Action) AbstractValidator<string>.WhenAsync(Func<string, ValidationContext<string>, CancellationToken, Task<bool>>, Action) AbstractValidator<string>.UnlessAsync(Func<string, CancellationToken, Task<bool>>, Action) AbstractValidator<string>.UnlessAsync(Func<string, ValidationContext<string>, CancellationToken, Task<bool>>, Action) AbstractValidator<string>.Include(IValidator<string>) AbstractValidator<string>.Include<TValidator>(Func<string, TValidator>) AbstractValidator<string>.GetEnumerator() AbstractValidator<string>.EnsureInstanceNotNull(object) AbstractValidator<string>.PreValidate(ValidationContext<string>, ValidationResult) AbstractValidator<string>.RaiseValidationException(ValidationContext<string>, ValidationResult) AbstractValidator<string>.CascadeMode AbstractValidator<string>.ClassLevelCascadeMode AbstractValidator<string>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CausaleValidator(int, int) public CausaleValidator(int min, int max) Parameters min int max int"
  },
  "api/FatturaElettronica.Validators.CedentePrestatoreValidator.html": {
    "href": "api/FatturaElettronica.Validators.CedentePrestatoreValidator.html",
    "title": "Class CedentePrestatoreValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class CedentePrestatoreValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class CedentePrestatoreValidator : AbstractValidator<CedentePrestatore>, IValidator<CedentePrestatore>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<CedentePrestatore> CedentePrestatoreValidator Implements IValidator<CedentePrestatore> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<CedentePrestatore>.Validate(CedentePrestatore) AbstractValidator<CedentePrestatore>.ValidateAsync(CedentePrestatore, CancellationToken) AbstractValidator<CedentePrestatore>.Validate(ValidationContext<CedentePrestatore>) AbstractValidator<CedentePrestatore>.ValidateAsync(ValidationContext<CedentePrestatore>, CancellationToken) AbstractValidator<CedentePrestatore>.CreateDescriptor() AbstractValidator<CedentePrestatore>.RuleFor<TProperty>(Expression<Func<CedentePrestatore, TProperty>>) AbstractValidator<CedentePrestatore>.Transform<TProperty, TTransformed>(Expression<Func<CedentePrestatore, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<CedentePrestatore>.Transform<TProperty, TTransformed>(Expression<Func<CedentePrestatore, TProperty>>, Func<CedentePrestatore, TProperty, TTransformed>) AbstractValidator<CedentePrestatore>.RuleForEach<TElement>(Expression<Func<CedentePrestatore, IEnumerable<TElement>>>) AbstractValidator<CedentePrestatore>.TransformForEach<TElement, TTransformed>(Expression<Func<CedentePrestatore, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<CedentePrestatore>.TransformForEach<TElement, TTransformed>(Expression<Func<CedentePrestatore, IEnumerable<TElement>>>, Func<CedentePrestatore, TElement, TTransformed>) AbstractValidator<CedentePrestatore>.RuleSet(string, Action) AbstractValidator<CedentePrestatore>.When(Func<CedentePrestatore, bool>, Action) AbstractValidator<CedentePrestatore>.When(Func<CedentePrestatore, ValidationContext<CedentePrestatore>, bool>, Action) AbstractValidator<CedentePrestatore>.Unless(Func<CedentePrestatore, bool>, Action) AbstractValidator<CedentePrestatore>.Unless(Func<CedentePrestatore, ValidationContext<CedentePrestatore>, bool>, Action) AbstractValidator<CedentePrestatore>.WhenAsync(Func<CedentePrestatore, CancellationToken, Task<bool>>, Action) AbstractValidator<CedentePrestatore>.WhenAsync(Func<CedentePrestatore, ValidationContext<CedentePrestatore>, CancellationToken, Task<bool>>, Action) AbstractValidator<CedentePrestatore>.UnlessAsync(Func<CedentePrestatore, CancellationToken, Task<bool>>, Action) AbstractValidator<CedentePrestatore>.UnlessAsync(Func<CedentePrestatore, ValidationContext<CedentePrestatore>, CancellationToken, Task<bool>>, Action) AbstractValidator<CedentePrestatore>.Include(IValidator<CedentePrestatore>) AbstractValidator<CedentePrestatore>.Include<TValidator>(Func<CedentePrestatore, TValidator>) AbstractValidator<CedentePrestatore>.GetEnumerator() AbstractValidator<CedentePrestatore>.EnsureInstanceNotNull(object) AbstractValidator<CedentePrestatore>.PreValidate(ValidationContext<CedentePrestatore>, ValidationResult) AbstractValidator<CedentePrestatore>.RaiseValidationException(ValidationContext<CedentePrestatore>, ValidationResult) AbstractValidator<CedentePrestatore>.CascadeMode AbstractValidator<CedentePrestatore>.ClassLevelCascadeMode AbstractValidator<CedentePrestatore>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CedentePrestatoreValidator() public CedentePrestatoreValidator()"
  },
  "api/FatturaElettronica.Validators.CessionarioCommittenteValidator.html": {
    "href": "api/FatturaElettronica.Validators.CessionarioCommittenteValidator.html",
    "title": "Class CessionarioCommittenteValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class CessionarioCommittenteValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class CessionarioCommittenteValidator : AbstractValidator<CessionarioCommittente>, IValidator<CessionarioCommittente>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<CessionarioCommittente> CessionarioCommittenteValidator Implements IValidator<CessionarioCommittente> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<CessionarioCommittente>.Validate(CessionarioCommittente) AbstractValidator<CessionarioCommittente>.ValidateAsync(CessionarioCommittente, CancellationToken) AbstractValidator<CessionarioCommittente>.Validate(ValidationContext<CessionarioCommittente>) AbstractValidator<CessionarioCommittente>.ValidateAsync(ValidationContext<CessionarioCommittente>, CancellationToken) AbstractValidator<CessionarioCommittente>.CreateDescriptor() AbstractValidator<CessionarioCommittente>.RuleFor<TProperty>(Expression<Func<CessionarioCommittente, TProperty>>) AbstractValidator<CessionarioCommittente>.Transform<TProperty, TTransformed>(Expression<Func<CessionarioCommittente, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<CessionarioCommittente>.Transform<TProperty, TTransformed>(Expression<Func<CessionarioCommittente, TProperty>>, Func<CessionarioCommittente, TProperty, TTransformed>) AbstractValidator<CessionarioCommittente>.RuleForEach<TElement>(Expression<Func<CessionarioCommittente, IEnumerable<TElement>>>) AbstractValidator<CessionarioCommittente>.TransformForEach<TElement, TTransformed>(Expression<Func<CessionarioCommittente, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<CessionarioCommittente>.TransformForEach<TElement, TTransformed>(Expression<Func<CessionarioCommittente, IEnumerable<TElement>>>, Func<CessionarioCommittente, TElement, TTransformed>) AbstractValidator<CessionarioCommittente>.RuleSet(string, Action) AbstractValidator<CessionarioCommittente>.When(Func<CessionarioCommittente, bool>, Action) AbstractValidator<CessionarioCommittente>.When(Func<CessionarioCommittente, ValidationContext<CessionarioCommittente>, bool>, Action) AbstractValidator<CessionarioCommittente>.Unless(Func<CessionarioCommittente, bool>, Action) AbstractValidator<CessionarioCommittente>.Unless(Func<CessionarioCommittente, ValidationContext<CessionarioCommittente>, bool>, Action) AbstractValidator<CessionarioCommittente>.WhenAsync(Func<CessionarioCommittente, CancellationToken, Task<bool>>, Action) AbstractValidator<CessionarioCommittente>.WhenAsync(Func<CessionarioCommittente, ValidationContext<CessionarioCommittente>, CancellationToken, Task<bool>>, Action) AbstractValidator<CessionarioCommittente>.UnlessAsync(Func<CessionarioCommittente, CancellationToken, Task<bool>>, Action) AbstractValidator<CessionarioCommittente>.UnlessAsync(Func<CessionarioCommittente, ValidationContext<CessionarioCommittente>, CancellationToken, Task<bool>>, Action) AbstractValidator<CessionarioCommittente>.Include(IValidator<CessionarioCommittente>) AbstractValidator<CessionarioCommittente>.Include<TValidator>(Func<CessionarioCommittente, TValidator>) AbstractValidator<CessionarioCommittente>.GetEnumerator() AbstractValidator<CessionarioCommittente>.EnsureInstanceNotNull(object) AbstractValidator<CessionarioCommittente>.PreValidate(ValidationContext<CessionarioCommittente>, ValidationResult) AbstractValidator<CessionarioCommittente>.RaiseValidationException(ValidationContext<CessionarioCommittente>, ValidationResult) AbstractValidator<CessionarioCommittente>.CascadeMode AbstractValidator<CessionarioCommittente>.ClassLevelCascadeMode AbstractValidator<CessionarioCommittente>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CessionarioCommittenteValidator() public CessionarioCommittenteValidator()"
  },
  "api/FatturaElettronica.Validators.Charsets.html": {
    "href": "api/FatturaElettronica.Validators.Charsets.html",
    "title": "Enum Charsets | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Enum Charsets Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public enum Charsets Fields BasicLatin = 0 Latin1Supplement = 1"
  },
  "api/FatturaElettronica.Validators.CodiceArticoloValidator.html": {
    "href": "api/FatturaElettronica.Validators.CodiceArticoloValidator.html",
    "title": "Class CodiceArticoloValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class CodiceArticoloValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class CodiceArticoloValidator : AbstractValidator<CodiceArticolo>, IValidator<CodiceArticolo>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<CodiceArticolo> CodiceArticoloValidator Implements IValidator<CodiceArticolo> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<CodiceArticolo>.Validate(CodiceArticolo) AbstractValidator<CodiceArticolo>.ValidateAsync(CodiceArticolo, CancellationToken) AbstractValidator<CodiceArticolo>.Validate(ValidationContext<CodiceArticolo>) AbstractValidator<CodiceArticolo>.ValidateAsync(ValidationContext<CodiceArticolo>, CancellationToken) AbstractValidator<CodiceArticolo>.CreateDescriptor() AbstractValidator<CodiceArticolo>.RuleFor<TProperty>(Expression<Func<CodiceArticolo, TProperty>>) AbstractValidator<CodiceArticolo>.Transform<TProperty, TTransformed>(Expression<Func<CodiceArticolo, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<CodiceArticolo>.Transform<TProperty, TTransformed>(Expression<Func<CodiceArticolo, TProperty>>, Func<CodiceArticolo, TProperty, TTransformed>) AbstractValidator<CodiceArticolo>.RuleForEach<TElement>(Expression<Func<CodiceArticolo, IEnumerable<TElement>>>) AbstractValidator<CodiceArticolo>.TransformForEach<TElement, TTransformed>(Expression<Func<CodiceArticolo, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<CodiceArticolo>.TransformForEach<TElement, TTransformed>(Expression<Func<CodiceArticolo, IEnumerable<TElement>>>, Func<CodiceArticolo, TElement, TTransformed>) AbstractValidator<CodiceArticolo>.RuleSet(string, Action) AbstractValidator<CodiceArticolo>.When(Func<CodiceArticolo, bool>, Action) AbstractValidator<CodiceArticolo>.When(Func<CodiceArticolo, ValidationContext<CodiceArticolo>, bool>, Action) AbstractValidator<CodiceArticolo>.Unless(Func<CodiceArticolo, bool>, Action) AbstractValidator<CodiceArticolo>.Unless(Func<CodiceArticolo, ValidationContext<CodiceArticolo>, bool>, Action) AbstractValidator<CodiceArticolo>.WhenAsync(Func<CodiceArticolo, CancellationToken, Task<bool>>, Action) AbstractValidator<CodiceArticolo>.WhenAsync(Func<CodiceArticolo, ValidationContext<CodiceArticolo>, CancellationToken, Task<bool>>, Action) AbstractValidator<CodiceArticolo>.UnlessAsync(Func<CodiceArticolo, CancellationToken, Task<bool>>, Action) AbstractValidator<CodiceArticolo>.UnlessAsync(Func<CodiceArticolo, ValidationContext<CodiceArticolo>, CancellationToken, Task<bool>>, Action) AbstractValidator<CodiceArticolo>.Include(IValidator<CodiceArticolo>) AbstractValidator<CodiceArticolo>.Include<TValidator>(Func<CodiceArticolo, TValidator>) AbstractValidator<CodiceArticolo>.GetEnumerator() AbstractValidator<CodiceArticolo>.EnsureInstanceNotNull(object) AbstractValidator<CodiceArticolo>.PreValidate(ValidationContext<CodiceArticolo>, ValidationResult) AbstractValidator<CodiceArticolo>.RaiseValidationException(ValidationContext<CodiceArticolo>, ValidationResult) AbstractValidator<CodiceArticolo>.CascadeMode AbstractValidator<CodiceArticolo>.ClassLevelCascadeMode AbstractValidator<CodiceArticolo>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CodiceArticoloValidator() public CodiceArticoloValidator()"
  },
  "api/FatturaElettronica.Validators.ContattiTrasmittenteValidator.html": {
    "href": "api/FatturaElettronica.Validators.ContattiTrasmittenteValidator.html",
    "title": "Class ContattiTrasmittenteValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class ContattiTrasmittenteValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class ContattiTrasmittenteValidator : AbstractValidator<ContattiTrasmittente>, IValidator<ContattiTrasmittente>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<ContattiTrasmittente> ContattiTrasmittenteValidator Implements IValidator<ContattiTrasmittente> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<ContattiTrasmittente>.Validate(ContattiTrasmittente) AbstractValidator<ContattiTrasmittente>.ValidateAsync(ContattiTrasmittente, CancellationToken) AbstractValidator<ContattiTrasmittente>.Validate(ValidationContext<ContattiTrasmittente>) AbstractValidator<ContattiTrasmittente>.ValidateAsync(ValidationContext<ContattiTrasmittente>, CancellationToken) AbstractValidator<ContattiTrasmittente>.CreateDescriptor() AbstractValidator<ContattiTrasmittente>.RuleFor<TProperty>(Expression<Func<ContattiTrasmittente, TProperty>>) AbstractValidator<ContattiTrasmittente>.Transform<TProperty, TTransformed>(Expression<Func<ContattiTrasmittente, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<ContattiTrasmittente>.Transform<TProperty, TTransformed>(Expression<Func<ContattiTrasmittente, TProperty>>, Func<ContattiTrasmittente, TProperty, TTransformed>) AbstractValidator<ContattiTrasmittente>.RuleForEach<TElement>(Expression<Func<ContattiTrasmittente, IEnumerable<TElement>>>) AbstractValidator<ContattiTrasmittente>.TransformForEach<TElement, TTransformed>(Expression<Func<ContattiTrasmittente, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<ContattiTrasmittente>.TransformForEach<TElement, TTransformed>(Expression<Func<ContattiTrasmittente, IEnumerable<TElement>>>, Func<ContattiTrasmittente, TElement, TTransformed>) AbstractValidator<ContattiTrasmittente>.RuleSet(string, Action) AbstractValidator<ContattiTrasmittente>.When(Func<ContattiTrasmittente, bool>, Action) AbstractValidator<ContattiTrasmittente>.When(Func<ContattiTrasmittente, ValidationContext<ContattiTrasmittente>, bool>, Action) AbstractValidator<ContattiTrasmittente>.Unless(Func<ContattiTrasmittente, bool>, Action) AbstractValidator<ContattiTrasmittente>.Unless(Func<ContattiTrasmittente, ValidationContext<ContattiTrasmittente>, bool>, Action) AbstractValidator<ContattiTrasmittente>.WhenAsync(Func<ContattiTrasmittente, CancellationToken, Task<bool>>, Action) AbstractValidator<ContattiTrasmittente>.WhenAsync(Func<ContattiTrasmittente, ValidationContext<ContattiTrasmittente>, CancellationToken, Task<bool>>, Action) AbstractValidator<ContattiTrasmittente>.UnlessAsync(Func<ContattiTrasmittente, CancellationToken, Task<bool>>, Action) AbstractValidator<ContattiTrasmittente>.UnlessAsync(Func<ContattiTrasmittente, ValidationContext<ContattiTrasmittente>, CancellationToken, Task<bool>>, Action) AbstractValidator<ContattiTrasmittente>.Include(IValidator<ContattiTrasmittente>) AbstractValidator<ContattiTrasmittente>.Include<TValidator>(Func<ContattiTrasmittente, TValidator>) AbstractValidator<ContattiTrasmittente>.GetEnumerator() AbstractValidator<ContattiTrasmittente>.EnsureInstanceNotNull(object) AbstractValidator<ContattiTrasmittente>.PreValidate(ValidationContext<ContattiTrasmittente>, ValidationResult) AbstractValidator<ContattiTrasmittente>.RaiseValidationException(ValidationContext<ContattiTrasmittente>, ValidationResult) AbstractValidator<ContattiTrasmittente>.CascadeMode AbstractValidator<ContattiTrasmittente>.ClassLevelCascadeMode AbstractValidator<ContattiTrasmittente>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ContattiTrasmittenteValidator() public ContattiTrasmittenteValidator()"
  },
  "api/FatturaElettronica.Validators.ContattiValidator.html": {
    "href": "api/FatturaElettronica.Validators.ContattiValidator.html",
    "title": "Class ContattiValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class ContattiValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class ContattiValidator : AbstractValidator<Contatti>, IValidator<Contatti>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<Contatti> ContattiValidator Implements IValidator<Contatti> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<Contatti>.Validate(Contatti) AbstractValidator<Contatti>.ValidateAsync(Contatti, CancellationToken) AbstractValidator<Contatti>.Validate(ValidationContext<Contatti>) AbstractValidator<Contatti>.ValidateAsync(ValidationContext<Contatti>, CancellationToken) AbstractValidator<Contatti>.CreateDescriptor() AbstractValidator<Contatti>.RuleFor<TProperty>(Expression<Func<Contatti, TProperty>>) AbstractValidator<Contatti>.Transform<TProperty, TTransformed>(Expression<Func<Contatti, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<Contatti>.Transform<TProperty, TTransformed>(Expression<Func<Contatti, TProperty>>, Func<Contatti, TProperty, TTransformed>) AbstractValidator<Contatti>.RuleForEach<TElement>(Expression<Func<Contatti, IEnumerable<TElement>>>) AbstractValidator<Contatti>.TransformForEach<TElement, TTransformed>(Expression<Func<Contatti, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<Contatti>.TransformForEach<TElement, TTransformed>(Expression<Func<Contatti, IEnumerable<TElement>>>, Func<Contatti, TElement, TTransformed>) AbstractValidator<Contatti>.RuleSet(string, Action) AbstractValidator<Contatti>.When(Func<Contatti, bool>, Action) AbstractValidator<Contatti>.When(Func<Contatti, ValidationContext<Contatti>, bool>, Action) AbstractValidator<Contatti>.Unless(Func<Contatti, bool>, Action) AbstractValidator<Contatti>.Unless(Func<Contatti, ValidationContext<Contatti>, bool>, Action) AbstractValidator<Contatti>.WhenAsync(Func<Contatti, CancellationToken, Task<bool>>, Action) AbstractValidator<Contatti>.WhenAsync(Func<Contatti, ValidationContext<Contatti>, CancellationToken, Task<bool>>, Action) AbstractValidator<Contatti>.UnlessAsync(Func<Contatti, CancellationToken, Task<bool>>, Action) AbstractValidator<Contatti>.UnlessAsync(Func<Contatti, ValidationContext<Contatti>, CancellationToken, Task<bool>>, Action) AbstractValidator<Contatti>.Include(IValidator<Contatti>) AbstractValidator<Contatti>.Include<TValidator>(Func<Contatti, TValidator>) AbstractValidator<Contatti>.GetEnumerator() AbstractValidator<Contatti>.EnsureInstanceNotNull(object) AbstractValidator<Contatti>.PreValidate(ValidationContext<Contatti>, ValidationResult) AbstractValidator<Contatti>.RaiseValidationException(ValidationContext<Contatti>, ValidationResult) AbstractValidator<Contatti>.CascadeMode AbstractValidator<Contatti>.ClassLevelCascadeMode AbstractValidator<Contatti>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ContattiValidator() public ContattiValidator()"
  },
  "api/FatturaElettronica.Validators.DatiAnagraficiCedentePrestatoreValidator.html": {
    "href": "api/FatturaElettronica.Validators.DatiAnagraficiCedentePrestatoreValidator.html",
    "title": "Class DatiAnagraficiCedentePrestatoreValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiAnagraficiCedentePrestatoreValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DatiAnagraficiCedentePrestatoreValidator : AbstractValidator<DatiAnagraficiCedentePrestatore>, IValidator<DatiAnagraficiCedentePrestatore>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiAnagraficiCedentePrestatore> DatiAnagraficiCedentePrestatoreValidator Implements IValidator<DatiAnagraficiCedentePrestatore> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiAnagraficiCedentePrestatore>.Validate(DatiAnagraficiCedentePrestatore) AbstractValidator<DatiAnagraficiCedentePrestatore>.ValidateAsync(DatiAnagraficiCedentePrestatore, CancellationToken) AbstractValidator<DatiAnagraficiCedentePrestatore>.Validate(ValidationContext<DatiAnagraficiCedentePrestatore>) AbstractValidator<DatiAnagraficiCedentePrestatore>.ValidateAsync(ValidationContext<DatiAnagraficiCedentePrestatore>, CancellationToken) AbstractValidator<DatiAnagraficiCedentePrestatore>.CreateDescriptor() AbstractValidator<DatiAnagraficiCedentePrestatore>.RuleFor<TProperty>(Expression<Func<DatiAnagraficiCedentePrestatore, TProperty>>) AbstractValidator<DatiAnagraficiCedentePrestatore>.Transform<TProperty, TTransformed>(Expression<Func<DatiAnagraficiCedentePrestatore, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiAnagraficiCedentePrestatore>.Transform<TProperty, TTransformed>(Expression<Func<DatiAnagraficiCedentePrestatore, TProperty>>, Func<DatiAnagraficiCedentePrestatore, TProperty, TTransformed>) AbstractValidator<DatiAnagraficiCedentePrestatore>.RuleForEach<TElement>(Expression<Func<DatiAnagraficiCedentePrestatore, IEnumerable<TElement>>>) AbstractValidator<DatiAnagraficiCedentePrestatore>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiAnagraficiCedentePrestatore, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiAnagraficiCedentePrestatore>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiAnagraficiCedentePrestatore, IEnumerable<TElement>>>, Func<DatiAnagraficiCedentePrestatore, TElement, TTransformed>) AbstractValidator<DatiAnagraficiCedentePrestatore>.RuleSet(string, Action) AbstractValidator<DatiAnagraficiCedentePrestatore>.When(Func<DatiAnagraficiCedentePrestatore, bool>, Action) AbstractValidator<DatiAnagraficiCedentePrestatore>.When(Func<DatiAnagraficiCedentePrestatore, ValidationContext<DatiAnagraficiCedentePrestatore>, bool>, Action) AbstractValidator<DatiAnagraficiCedentePrestatore>.Unless(Func<DatiAnagraficiCedentePrestatore, bool>, Action) AbstractValidator<DatiAnagraficiCedentePrestatore>.Unless(Func<DatiAnagraficiCedentePrestatore, ValidationContext<DatiAnagraficiCedentePrestatore>, bool>, Action) AbstractValidator<DatiAnagraficiCedentePrestatore>.WhenAsync(Func<DatiAnagraficiCedentePrestatore, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiAnagraficiCedentePrestatore>.WhenAsync(Func<DatiAnagraficiCedentePrestatore, ValidationContext<DatiAnagraficiCedentePrestatore>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiAnagraficiCedentePrestatore>.UnlessAsync(Func<DatiAnagraficiCedentePrestatore, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiAnagraficiCedentePrestatore>.UnlessAsync(Func<DatiAnagraficiCedentePrestatore, ValidationContext<DatiAnagraficiCedentePrestatore>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiAnagraficiCedentePrestatore>.Include(IValidator<DatiAnagraficiCedentePrestatore>) AbstractValidator<DatiAnagraficiCedentePrestatore>.Include<TValidator>(Func<DatiAnagraficiCedentePrestatore, TValidator>) AbstractValidator<DatiAnagraficiCedentePrestatore>.GetEnumerator() AbstractValidator<DatiAnagraficiCedentePrestatore>.EnsureInstanceNotNull(object) AbstractValidator<DatiAnagraficiCedentePrestatore>.PreValidate(ValidationContext<DatiAnagraficiCedentePrestatore>, ValidationResult) AbstractValidator<DatiAnagraficiCedentePrestatore>.RaiseValidationException(ValidationContext<DatiAnagraficiCedentePrestatore>, ValidationResult) AbstractValidator<DatiAnagraficiCedentePrestatore>.CascadeMode AbstractValidator<DatiAnagraficiCedentePrestatore>.ClassLevelCascadeMode AbstractValidator<DatiAnagraficiCedentePrestatore>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiAnagraficiCedentePrestatoreValidator() public DatiAnagraficiCedentePrestatoreValidator()"
  },
  "api/FatturaElettronica.Validators.DatiAnagraficiCessionarioCommittenteValidator.html": {
    "href": "api/FatturaElettronica.Validators.DatiAnagraficiCessionarioCommittenteValidator.html",
    "title": "Class DatiAnagraficiCessionarioCommittenteValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiAnagraficiCessionarioCommittenteValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DatiAnagraficiCessionarioCommittenteValidator : AbstractValidator<DatiAnagraficiCessionarioCommittente>, IValidator<DatiAnagraficiCessionarioCommittente>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiAnagraficiCessionarioCommittente> DatiAnagraficiCessionarioCommittenteValidator Implements IValidator<DatiAnagraficiCessionarioCommittente> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiAnagraficiCessionarioCommittente>.Validate(DatiAnagraficiCessionarioCommittente) AbstractValidator<DatiAnagraficiCessionarioCommittente>.ValidateAsync(DatiAnagraficiCessionarioCommittente, CancellationToken) AbstractValidator<DatiAnagraficiCessionarioCommittente>.Validate(ValidationContext<DatiAnagraficiCessionarioCommittente>) AbstractValidator<DatiAnagraficiCessionarioCommittente>.ValidateAsync(ValidationContext<DatiAnagraficiCessionarioCommittente>, CancellationToken) AbstractValidator<DatiAnagraficiCessionarioCommittente>.CreateDescriptor() AbstractValidator<DatiAnagraficiCessionarioCommittente>.RuleFor<TProperty>(Expression<Func<DatiAnagraficiCessionarioCommittente, TProperty>>) AbstractValidator<DatiAnagraficiCessionarioCommittente>.Transform<TProperty, TTransformed>(Expression<Func<DatiAnagraficiCessionarioCommittente, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiAnagraficiCessionarioCommittente>.Transform<TProperty, TTransformed>(Expression<Func<DatiAnagraficiCessionarioCommittente, TProperty>>, Func<DatiAnagraficiCessionarioCommittente, TProperty, TTransformed>) AbstractValidator<DatiAnagraficiCessionarioCommittente>.RuleForEach<TElement>(Expression<Func<DatiAnagraficiCessionarioCommittente, IEnumerable<TElement>>>) AbstractValidator<DatiAnagraficiCessionarioCommittente>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiAnagraficiCessionarioCommittente, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiAnagraficiCessionarioCommittente>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiAnagraficiCessionarioCommittente, IEnumerable<TElement>>>, Func<DatiAnagraficiCessionarioCommittente, TElement, TTransformed>) AbstractValidator<DatiAnagraficiCessionarioCommittente>.RuleSet(string, Action) AbstractValidator<DatiAnagraficiCessionarioCommittente>.When(Func<DatiAnagraficiCessionarioCommittente, bool>, Action) AbstractValidator<DatiAnagraficiCessionarioCommittente>.When(Func<DatiAnagraficiCessionarioCommittente, ValidationContext<DatiAnagraficiCessionarioCommittente>, bool>, Action) AbstractValidator<DatiAnagraficiCessionarioCommittente>.Unless(Func<DatiAnagraficiCessionarioCommittente, bool>, Action) AbstractValidator<DatiAnagraficiCessionarioCommittente>.Unless(Func<DatiAnagraficiCessionarioCommittente, ValidationContext<DatiAnagraficiCessionarioCommittente>, bool>, Action) AbstractValidator<DatiAnagraficiCessionarioCommittente>.WhenAsync(Func<DatiAnagraficiCessionarioCommittente, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiAnagraficiCessionarioCommittente>.WhenAsync(Func<DatiAnagraficiCessionarioCommittente, ValidationContext<DatiAnagraficiCessionarioCommittente>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiAnagraficiCessionarioCommittente>.UnlessAsync(Func<DatiAnagraficiCessionarioCommittente, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiAnagraficiCessionarioCommittente>.UnlessAsync(Func<DatiAnagraficiCessionarioCommittente, ValidationContext<DatiAnagraficiCessionarioCommittente>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiAnagraficiCessionarioCommittente>.Include(IValidator<DatiAnagraficiCessionarioCommittente>) AbstractValidator<DatiAnagraficiCessionarioCommittente>.Include<TValidator>(Func<DatiAnagraficiCessionarioCommittente, TValidator>) AbstractValidator<DatiAnagraficiCessionarioCommittente>.GetEnumerator() AbstractValidator<DatiAnagraficiCessionarioCommittente>.EnsureInstanceNotNull(object) AbstractValidator<DatiAnagraficiCessionarioCommittente>.PreValidate(ValidationContext<DatiAnagraficiCessionarioCommittente>, ValidationResult) AbstractValidator<DatiAnagraficiCessionarioCommittente>.RaiseValidationException(ValidationContext<DatiAnagraficiCessionarioCommittente>, ValidationResult) AbstractValidator<DatiAnagraficiCessionarioCommittente>.CascadeMode AbstractValidator<DatiAnagraficiCessionarioCommittente>.ClassLevelCascadeMode AbstractValidator<DatiAnagraficiCessionarioCommittente>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiAnagraficiCessionarioCommittenteValidator() public DatiAnagraficiCessionarioCommittenteValidator()"
  },
  "api/FatturaElettronica.Validators.DatiAnagraficiRappresentanteFiscaleValidator.html": {
    "href": "api/FatturaElettronica.Validators.DatiAnagraficiRappresentanteFiscaleValidator.html",
    "title": "Class DatiAnagraficiRappresentanteFiscaleValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiAnagraficiRappresentanteFiscaleValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DatiAnagraficiRappresentanteFiscaleValidator : AbstractValidator<DatiAnagrafici>, IValidator<DatiAnagrafici>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiAnagrafici> DatiAnagraficiRappresentanteFiscaleValidator Implements IValidator<DatiAnagrafici> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiAnagrafici>.Validate(DatiAnagrafici) AbstractValidator<DatiAnagrafici>.ValidateAsync(DatiAnagrafici, CancellationToken) AbstractValidator<DatiAnagrafici>.Validate(ValidationContext<DatiAnagrafici>) AbstractValidator<DatiAnagrafici>.ValidateAsync(ValidationContext<DatiAnagrafici>, CancellationToken) AbstractValidator<DatiAnagrafici>.CreateDescriptor() AbstractValidator<DatiAnagrafici>.RuleFor<TProperty>(Expression<Func<DatiAnagrafici, TProperty>>) AbstractValidator<DatiAnagrafici>.Transform<TProperty, TTransformed>(Expression<Func<DatiAnagrafici, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiAnagrafici>.Transform<TProperty, TTransformed>(Expression<Func<DatiAnagrafici, TProperty>>, Func<DatiAnagrafici, TProperty, TTransformed>) AbstractValidator<DatiAnagrafici>.RuleForEach<TElement>(Expression<Func<DatiAnagrafici, IEnumerable<TElement>>>) AbstractValidator<DatiAnagrafici>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiAnagrafici, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiAnagrafici>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiAnagrafici, IEnumerable<TElement>>>, Func<DatiAnagrafici, TElement, TTransformed>) AbstractValidator<DatiAnagrafici>.RuleSet(string, Action) AbstractValidator<DatiAnagrafici>.When(Func<DatiAnagrafici, bool>, Action) AbstractValidator<DatiAnagrafici>.When(Func<DatiAnagrafici, ValidationContext<DatiAnagrafici>, bool>, Action) AbstractValidator<DatiAnagrafici>.Unless(Func<DatiAnagrafici, bool>, Action) AbstractValidator<DatiAnagrafici>.Unless(Func<DatiAnagrafici, ValidationContext<DatiAnagrafici>, bool>, Action) AbstractValidator<DatiAnagrafici>.WhenAsync(Func<DatiAnagrafici, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiAnagrafici>.WhenAsync(Func<DatiAnagrafici, ValidationContext<DatiAnagrafici>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiAnagrafici>.UnlessAsync(Func<DatiAnagrafici, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiAnagrafici>.UnlessAsync(Func<DatiAnagrafici, ValidationContext<DatiAnagrafici>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiAnagrafici>.Include(IValidator<DatiAnagrafici>) AbstractValidator<DatiAnagrafici>.Include<TValidator>(Func<DatiAnagrafici, TValidator>) AbstractValidator<DatiAnagrafici>.GetEnumerator() AbstractValidator<DatiAnagrafici>.EnsureInstanceNotNull(object) AbstractValidator<DatiAnagrafici>.PreValidate(ValidationContext<DatiAnagrafici>, ValidationResult) AbstractValidator<DatiAnagrafici>.RaiseValidationException(ValidationContext<DatiAnagrafici>, ValidationResult) AbstractValidator<DatiAnagrafici>.CascadeMode AbstractValidator<DatiAnagrafici>.ClassLevelCascadeMode AbstractValidator<DatiAnagrafici>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiAnagraficiRappresentanteFiscaleValidator() public DatiAnagraficiRappresentanteFiscaleValidator()"
  },
  "api/FatturaElettronica.Validators.DatiAnagraficiTerzoIntermediarioValidator.html": {
    "href": "api/FatturaElettronica.Validators.DatiAnagraficiTerzoIntermediarioValidator.html",
    "title": "Class DatiAnagraficiTerzoIntermediarioValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiAnagraficiTerzoIntermediarioValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DatiAnagraficiTerzoIntermediarioValidator : AbstractValidator<DatiAnagrafici>, IValidator<DatiAnagrafici>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiAnagrafici> DatiAnagraficiTerzoIntermediarioValidator Implements IValidator<DatiAnagrafici> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiAnagrafici>.Validate(DatiAnagrafici) AbstractValidator<DatiAnagrafici>.ValidateAsync(DatiAnagrafici, CancellationToken) AbstractValidator<DatiAnagrafici>.Validate(ValidationContext<DatiAnagrafici>) AbstractValidator<DatiAnagrafici>.ValidateAsync(ValidationContext<DatiAnagrafici>, CancellationToken) AbstractValidator<DatiAnagrafici>.CreateDescriptor() AbstractValidator<DatiAnagrafici>.RuleFor<TProperty>(Expression<Func<DatiAnagrafici, TProperty>>) AbstractValidator<DatiAnagrafici>.Transform<TProperty, TTransformed>(Expression<Func<DatiAnagrafici, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiAnagrafici>.Transform<TProperty, TTransformed>(Expression<Func<DatiAnagrafici, TProperty>>, Func<DatiAnagrafici, TProperty, TTransformed>) AbstractValidator<DatiAnagrafici>.RuleForEach<TElement>(Expression<Func<DatiAnagrafici, IEnumerable<TElement>>>) AbstractValidator<DatiAnagrafici>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiAnagrafici, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiAnagrafici>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiAnagrafici, IEnumerable<TElement>>>, Func<DatiAnagrafici, TElement, TTransformed>) AbstractValidator<DatiAnagrafici>.RuleSet(string, Action) AbstractValidator<DatiAnagrafici>.When(Func<DatiAnagrafici, bool>, Action) AbstractValidator<DatiAnagrafici>.When(Func<DatiAnagrafici, ValidationContext<DatiAnagrafici>, bool>, Action) AbstractValidator<DatiAnagrafici>.Unless(Func<DatiAnagrafici, bool>, Action) AbstractValidator<DatiAnagrafici>.Unless(Func<DatiAnagrafici, ValidationContext<DatiAnagrafici>, bool>, Action) AbstractValidator<DatiAnagrafici>.WhenAsync(Func<DatiAnagrafici, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiAnagrafici>.WhenAsync(Func<DatiAnagrafici, ValidationContext<DatiAnagrafici>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiAnagrafici>.UnlessAsync(Func<DatiAnagrafici, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiAnagrafici>.UnlessAsync(Func<DatiAnagrafici, ValidationContext<DatiAnagrafici>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiAnagrafici>.Include(IValidator<DatiAnagrafici>) AbstractValidator<DatiAnagrafici>.Include<TValidator>(Func<DatiAnagrafici, TValidator>) AbstractValidator<DatiAnagrafici>.GetEnumerator() AbstractValidator<DatiAnagrafici>.EnsureInstanceNotNull(object) AbstractValidator<DatiAnagrafici>.PreValidate(ValidationContext<DatiAnagrafici>, ValidationResult) AbstractValidator<DatiAnagrafici>.RaiseValidationException(ValidationContext<DatiAnagrafici>, ValidationResult) AbstractValidator<DatiAnagrafici>.CascadeMode AbstractValidator<DatiAnagrafici>.ClassLevelCascadeMode AbstractValidator<DatiAnagrafici>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiAnagraficiTerzoIntermediarioValidator() public DatiAnagraficiTerzoIntermediarioValidator()"
  },
  "api/FatturaElettronica.Validators.DatiAnagraficiVettoreValidator.html": {
    "href": "api/FatturaElettronica.Validators.DatiAnagraficiVettoreValidator.html",
    "title": "Class DatiAnagraficiVettoreValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiAnagraficiVettoreValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DatiAnagraficiVettoreValidator : AbstractValidator<DatiAnagraficiVettore>, IValidator<DatiAnagraficiVettore>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiAnagraficiVettore> DatiAnagraficiVettoreValidator Implements IValidator<DatiAnagraficiVettore> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiAnagraficiVettore>.Validate(DatiAnagraficiVettore) AbstractValidator<DatiAnagraficiVettore>.ValidateAsync(DatiAnagraficiVettore, CancellationToken) AbstractValidator<DatiAnagraficiVettore>.Validate(ValidationContext<DatiAnagraficiVettore>) AbstractValidator<DatiAnagraficiVettore>.ValidateAsync(ValidationContext<DatiAnagraficiVettore>, CancellationToken) AbstractValidator<DatiAnagraficiVettore>.CreateDescriptor() AbstractValidator<DatiAnagraficiVettore>.RuleFor<TProperty>(Expression<Func<DatiAnagraficiVettore, TProperty>>) AbstractValidator<DatiAnagraficiVettore>.Transform<TProperty, TTransformed>(Expression<Func<DatiAnagraficiVettore, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiAnagraficiVettore>.Transform<TProperty, TTransformed>(Expression<Func<DatiAnagraficiVettore, TProperty>>, Func<DatiAnagraficiVettore, TProperty, TTransformed>) AbstractValidator<DatiAnagraficiVettore>.RuleForEach<TElement>(Expression<Func<DatiAnagraficiVettore, IEnumerable<TElement>>>) AbstractValidator<DatiAnagraficiVettore>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiAnagraficiVettore, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiAnagraficiVettore>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiAnagraficiVettore, IEnumerable<TElement>>>, Func<DatiAnagraficiVettore, TElement, TTransformed>) AbstractValidator<DatiAnagraficiVettore>.RuleSet(string, Action) AbstractValidator<DatiAnagraficiVettore>.When(Func<DatiAnagraficiVettore, bool>, Action) AbstractValidator<DatiAnagraficiVettore>.When(Func<DatiAnagraficiVettore, ValidationContext<DatiAnagraficiVettore>, bool>, Action) AbstractValidator<DatiAnagraficiVettore>.Unless(Func<DatiAnagraficiVettore, bool>, Action) AbstractValidator<DatiAnagraficiVettore>.Unless(Func<DatiAnagraficiVettore, ValidationContext<DatiAnagraficiVettore>, bool>, Action) AbstractValidator<DatiAnagraficiVettore>.WhenAsync(Func<DatiAnagraficiVettore, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiAnagraficiVettore>.WhenAsync(Func<DatiAnagraficiVettore, ValidationContext<DatiAnagraficiVettore>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiAnagraficiVettore>.UnlessAsync(Func<DatiAnagraficiVettore, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiAnagraficiVettore>.UnlessAsync(Func<DatiAnagraficiVettore, ValidationContext<DatiAnagraficiVettore>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiAnagraficiVettore>.Include(IValidator<DatiAnagraficiVettore>) AbstractValidator<DatiAnagraficiVettore>.Include<TValidator>(Func<DatiAnagraficiVettore, TValidator>) AbstractValidator<DatiAnagraficiVettore>.GetEnumerator() AbstractValidator<DatiAnagraficiVettore>.EnsureInstanceNotNull(object) AbstractValidator<DatiAnagraficiVettore>.PreValidate(ValidationContext<DatiAnagraficiVettore>, ValidationResult) AbstractValidator<DatiAnagraficiVettore>.RaiseValidationException(ValidationContext<DatiAnagraficiVettore>, ValidationResult) AbstractValidator<DatiAnagraficiVettore>.CascadeMode AbstractValidator<DatiAnagraficiVettore>.ClassLevelCascadeMode AbstractValidator<DatiAnagraficiVettore>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiAnagraficiVettoreValidator() public DatiAnagraficiVettoreValidator()"
  },
  "api/FatturaElettronica.Validators.DatiBeniServiziValidator.html": {
    "href": "api/FatturaElettronica.Validators.DatiBeniServiziValidator.html",
    "title": "Class DatiBeniServiziValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiBeniServiziValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DatiBeniServiziValidator : AbstractValidator<DatiBeniServizi>, IValidator<DatiBeniServizi>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiBeniServizi> DatiBeniServiziValidator Implements IValidator<DatiBeniServizi> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiBeniServizi>.Validate(DatiBeniServizi) AbstractValidator<DatiBeniServizi>.ValidateAsync(DatiBeniServizi, CancellationToken) AbstractValidator<DatiBeniServizi>.Validate(ValidationContext<DatiBeniServizi>) AbstractValidator<DatiBeniServizi>.ValidateAsync(ValidationContext<DatiBeniServizi>, CancellationToken) AbstractValidator<DatiBeniServizi>.CreateDescriptor() AbstractValidator<DatiBeniServizi>.RuleFor<TProperty>(Expression<Func<DatiBeniServizi, TProperty>>) AbstractValidator<DatiBeniServizi>.Transform<TProperty, TTransformed>(Expression<Func<DatiBeniServizi, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiBeniServizi>.Transform<TProperty, TTransformed>(Expression<Func<DatiBeniServizi, TProperty>>, Func<DatiBeniServizi, TProperty, TTransformed>) AbstractValidator<DatiBeniServizi>.RuleForEach<TElement>(Expression<Func<DatiBeniServizi, IEnumerable<TElement>>>) AbstractValidator<DatiBeniServizi>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiBeniServizi, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiBeniServizi>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiBeniServizi, IEnumerable<TElement>>>, Func<DatiBeniServizi, TElement, TTransformed>) AbstractValidator<DatiBeniServizi>.RuleSet(string, Action) AbstractValidator<DatiBeniServizi>.When(Func<DatiBeniServizi, bool>, Action) AbstractValidator<DatiBeniServizi>.When(Func<DatiBeniServizi, ValidationContext<DatiBeniServizi>, bool>, Action) AbstractValidator<DatiBeniServizi>.Unless(Func<DatiBeniServizi, bool>, Action) AbstractValidator<DatiBeniServizi>.Unless(Func<DatiBeniServizi, ValidationContext<DatiBeniServizi>, bool>, Action) AbstractValidator<DatiBeniServizi>.WhenAsync(Func<DatiBeniServizi, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiBeniServizi>.WhenAsync(Func<DatiBeniServizi, ValidationContext<DatiBeniServizi>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiBeniServizi>.UnlessAsync(Func<DatiBeniServizi, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiBeniServizi>.UnlessAsync(Func<DatiBeniServizi, ValidationContext<DatiBeniServizi>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiBeniServizi>.Include(IValidator<DatiBeniServizi>) AbstractValidator<DatiBeniServizi>.Include<TValidator>(Func<DatiBeniServizi, TValidator>) AbstractValidator<DatiBeniServizi>.GetEnumerator() AbstractValidator<DatiBeniServizi>.EnsureInstanceNotNull(object) AbstractValidator<DatiBeniServizi>.PreValidate(ValidationContext<DatiBeniServizi>, ValidationResult) AbstractValidator<DatiBeniServizi>.RaiseValidationException(ValidationContext<DatiBeniServizi>, ValidationResult) AbstractValidator<DatiBeniServizi>.CascadeMode AbstractValidator<DatiBeniServizi>.ClassLevelCascadeMode AbstractValidator<DatiBeniServizi>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiBeniServiziValidator() public DatiBeniServiziValidator()"
  },
  "api/FatturaElettronica.Validators.DatiBolloValidator.html": {
    "href": "api/FatturaElettronica.Validators.DatiBolloValidator.html",
    "title": "Class DatiBolloValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiBolloValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DatiBolloValidator : AbstractValidator<DatiBollo>, IValidator<DatiBollo>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiBollo> DatiBolloValidator Implements IValidator<DatiBollo> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiBollo>.Validate(DatiBollo) AbstractValidator<DatiBollo>.ValidateAsync(DatiBollo, CancellationToken) AbstractValidator<DatiBollo>.Validate(ValidationContext<DatiBollo>) AbstractValidator<DatiBollo>.ValidateAsync(ValidationContext<DatiBollo>, CancellationToken) AbstractValidator<DatiBollo>.CreateDescriptor() AbstractValidator<DatiBollo>.RuleFor<TProperty>(Expression<Func<DatiBollo, TProperty>>) AbstractValidator<DatiBollo>.Transform<TProperty, TTransformed>(Expression<Func<DatiBollo, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiBollo>.Transform<TProperty, TTransformed>(Expression<Func<DatiBollo, TProperty>>, Func<DatiBollo, TProperty, TTransformed>) AbstractValidator<DatiBollo>.RuleForEach<TElement>(Expression<Func<DatiBollo, IEnumerable<TElement>>>) AbstractValidator<DatiBollo>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiBollo, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiBollo>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiBollo, IEnumerable<TElement>>>, Func<DatiBollo, TElement, TTransformed>) AbstractValidator<DatiBollo>.RuleSet(string, Action) AbstractValidator<DatiBollo>.When(Func<DatiBollo, bool>, Action) AbstractValidator<DatiBollo>.When(Func<DatiBollo, ValidationContext<DatiBollo>, bool>, Action) AbstractValidator<DatiBollo>.Unless(Func<DatiBollo, bool>, Action) AbstractValidator<DatiBollo>.Unless(Func<DatiBollo, ValidationContext<DatiBollo>, bool>, Action) AbstractValidator<DatiBollo>.WhenAsync(Func<DatiBollo, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiBollo>.WhenAsync(Func<DatiBollo, ValidationContext<DatiBollo>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiBollo>.UnlessAsync(Func<DatiBollo, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiBollo>.UnlessAsync(Func<DatiBollo, ValidationContext<DatiBollo>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiBollo>.Include(IValidator<DatiBollo>) AbstractValidator<DatiBollo>.Include<TValidator>(Func<DatiBollo, TValidator>) AbstractValidator<DatiBollo>.GetEnumerator() AbstractValidator<DatiBollo>.EnsureInstanceNotNull(object) AbstractValidator<DatiBollo>.PreValidate(ValidationContext<DatiBollo>, ValidationResult) AbstractValidator<DatiBollo>.RaiseValidationException(ValidationContext<DatiBollo>, ValidationResult) AbstractValidator<DatiBollo>.CascadeMode AbstractValidator<DatiBollo>.ClassLevelCascadeMode AbstractValidator<DatiBollo>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiBolloValidator() public DatiBolloValidator()"
  },
  "api/FatturaElettronica.Validators.DatiCassaPrevidenzialeValidator.html": {
    "href": "api/FatturaElettronica.Validators.DatiCassaPrevidenzialeValidator.html",
    "title": "Class DatiCassaPrevidenzialeValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiCassaPrevidenzialeValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DatiCassaPrevidenzialeValidator : AbstractValidator<DatiCassaPrevidenziale>, IValidator<DatiCassaPrevidenziale>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiCassaPrevidenziale> DatiCassaPrevidenzialeValidator Implements IValidator<DatiCassaPrevidenziale> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiCassaPrevidenziale>.Validate(DatiCassaPrevidenziale) AbstractValidator<DatiCassaPrevidenziale>.ValidateAsync(DatiCassaPrevidenziale, CancellationToken) AbstractValidator<DatiCassaPrevidenziale>.Validate(ValidationContext<DatiCassaPrevidenziale>) AbstractValidator<DatiCassaPrevidenziale>.ValidateAsync(ValidationContext<DatiCassaPrevidenziale>, CancellationToken) AbstractValidator<DatiCassaPrevidenziale>.CreateDescriptor() AbstractValidator<DatiCassaPrevidenziale>.RuleFor<TProperty>(Expression<Func<DatiCassaPrevidenziale, TProperty>>) AbstractValidator<DatiCassaPrevidenziale>.Transform<TProperty, TTransformed>(Expression<Func<DatiCassaPrevidenziale, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiCassaPrevidenziale>.Transform<TProperty, TTransformed>(Expression<Func<DatiCassaPrevidenziale, TProperty>>, Func<DatiCassaPrevidenziale, TProperty, TTransformed>) AbstractValidator<DatiCassaPrevidenziale>.RuleForEach<TElement>(Expression<Func<DatiCassaPrevidenziale, IEnumerable<TElement>>>) AbstractValidator<DatiCassaPrevidenziale>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiCassaPrevidenziale, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiCassaPrevidenziale>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiCassaPrevidenziale, IEnumerable<TElement>>>, Func<DatiCassaPrevidenziale, TElement, TTransformed>) AbstractValidator<DatiCassaPrevidenziale>.RuleSet(string, Action) AbstractValidator<DatiCassaPrevidenziale>.When(Func<DatiCassaPrevidenziale, bool>, Action) AbstractValidator<DatiCassaPrevidenziale>.When(Func<DatiCassaPrevidenziale, ValidationContext<DatiCassaPrevidenziale>, bool>, Action) AbstractValidator<DatiCassaPrevidenziale>.Unless(Func<DatiCassaPrevidenziale, bool>, Action) AbstractValidator<DatiCassaPrevidenziale>.Unless(Func<DatiCassaPrevidenziale, ValidationContext<DatiCassaPrevidenziale>, bool>, Action) AbstractValidator<DatiCassaPrevidenziale>.WhenAsync(Func<DatiCassaPrevidenziale, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiCassaPrevidenziale>.WhenAsync(Func<DatiCassaPrevidenziale, ValidationContext<DatiCassaPrevidenziale>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiCassaPrevidenziale>.UnlessAsync(Func<DatiCassaPrevidenziale, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiCassaPrevidenziale>.UnlessAsync(Func<DatiCassaPrevidenziale, ValidationContext<DatiCassaPrevidenziale>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiCassaPrevidenziale>.Include(IValidator<DatiCassaPrevidenziale>) AbstractValidator<DatiCassaPrevidenziale>.Include<TValidator>(Func<DatiCassaPrevidenziale, TValidator>) AbstractValidator<DatiCassaPrevidenziale>.GetEnumerator() AbstractValidator<DatiCassaPrevidenziale>.EnsureInstanceNotNull(object) AbstractValidator<DatiCassaPrevidenziale>.PreValidate(ValidationContext<DatiCassaPrevidenziale>, ValidationResult) AbstractValidator<DatiCassaPrevidenziale>.RaiseValidationException(ValidationContext<DatiCassaPrevidenziale>, ValidationResult) AbstractValidator<DatiCassaPrevidenziale>.CascadeMode AbstractValidator<DatiCassaPrevidenziale>.ClassLevelCascadeMode AbstractValidator<DatiCassaPrevidenziale>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiCassaPrevidenzialeValidator() public DatiCassaPrevidenzialeValidator()"
  },
  "api/FatturaElettronica.Validators.DatiContrattoValidator.html": {
    "href": "api/FatturaElettronica.Validators.DatiContrattoValidator.html",
    "title": "Class DatiContrattoValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiContrattoValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DatiContrattoValidator : DatiDocumentoValidator, IValidator<DatiDocumento>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiDocumento> DatiDocumentoValidator DatiContrattoValidator Implements IValidator<DatiDocumento> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiDocumento>.Validate(DatiDocumento) AbstractValidator<DatiDocumento>.ValidateAsync(DatiDocumento, CancellationToken) AbstractValidator<DatiDocumento>.Validate(ValidationContext<DatiDocumento>) AbstractValidator<DatiDocumento>.ValidateAsync(ValidationContext<DatiDocumento>, CancellationToken) AbstractValidator<DatiDocumento>.CreateDescriptor() AbstractValidator<DatiDocumento>.RuleFor<TProperty>(Expression<Func<DatiDocumento, TProperty>>) AbstractValidator<DatiDocumento>.Transform<TProperty, TTransformed>(Expression<Func<DatiDocumento, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiDocumento>.Transform<TProperty, TTransformed>(Expression<Func<DatiDocumento, TProperty>>, Func<DatiDocumento, TProperty, TTransformed>) AbstractValidator<DatiDocumento>.RuleForEach<TElement>(Expression<Func<DatiDocumento, IEnumerable<TElement>>>) AbstractValidator<DatiDocumento>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiDocumento, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiDocumento>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiDocumento, IEnumerable<TElement>>>, Func<DatiDocumento, TElement, TTransformed>) AbstractValidator<DatiDocumento>.RuleSet(string, Action) AbstractValidator<DatiDocumento>.When(Func<DatiDocumento, bool>, Action) AbstractValidator<DatiDocumento>.When(Func<DatiDocumento, ValidationContext<DatiDocumento>, bool>, Action) AbstractValidator<DatiDocumento>.Unless(Func<DatiDocumento, bool>, Action) AbstractValidator<DatiDocumento>.Unless(Func<DatiDocumento, ValidationContext<DatiDocumento>, bool>, Action) AbstractValidator<DatiDocumento>.WhenAsync(Func<DatiDocumento, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.WhenAsync(Func<DatiDocumento, ValidationContext<DatiDocumento>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.UnlessAsync(Func<DatiDocumento, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.UnlessAsync(Func<DatiDocumento, ValidationContext<DatiDocumento>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.Include(IValidator<DatiDocumento>) AbstractValidator<DatiDocumento>.Include<TValidator>(Func<DatiDocumento, TValidator>) AbstractValidator<DatiDocumento>.GetEnumerator() AbstractValidator<DatiDocumento>.EnsureInstanceNotNull(object) AbstractValidator<DatiDocumento>.PreValidate(ValidationContext<DatiDocumento>, ValidationResult) AbstractValidator<DatiDocumento>.RaiseValidationException(ValidationContext<DatiDocumento>, ValidationResult) AbstractValidator<DatiDocumento>.CascadeMode AbstractValidator<DatiDocumento>.ClassLevelCascadeMode AbstractValidator<DatiDocumento>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/FatturaElettronica.Validators.DatiConvenzioneValidator.html": {
    "href": "api/FatturaElettronica.Validators.DatiConvenzioneValidator.html",
    "title": "Class DatiConvenzioneValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiConvenzioneValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DatiConvenzioneValidator : DatiDocumentoValidator, IValidator<DatiDocumento>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiDocumento> DatiDocumentoValidator DatiConvenzioneValidator Implements IValidator<DatiDocumento> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiDocumento>.Validate(DatiDocumento) AbstractValidator<DatiDocumento>.ValidateAsync(DatiDocumento, CancellationToken) AbstractValidator<DatiDocumento>.Validate(ValidationContext<DatiDocumento>) AbstractValidator<DatiDocumento>.ValidateAsync(ValidationContext<DatiDocumento>, CancellationToken) AbstractValidator<DatiDocumento>.CreateDescriptor() AbstractValidator<DatiDocumento>.RuleFor<TProperty>(Expression<Func<DatiDocumento, TProperty>>) AbstractValidator<DatiDocumento>.Transform<TProperty, TTransformed>(Expression<Func<DatiDocumento, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiDocumento>.Transform<TProperty, TTransformed>(Expression<Func<DatiDocumento, TProperty>>, Func<DatiDocumento, TProperty, TTransformed>) AbstractValidator<DatiDocumento>.RuleForEach<TElement>(Expression<Func<DatiDocumento, IEnumerable<TElement>>>) AbstractValidator<DatiDocumento>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiDocumento, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiDocumento>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiDocumento, IEnumerable<TElement>>>, Func<DatiDocumento, TElement, TTransformed>) AbstractValidator<DatiDocumento>.RuleSet(string, Action) AbstractValidator<DatiDocumento>.When(Func<DatiDocumento, bool>, Action) AbstractValidator<DatiDocumento>.When(Func<DatiDocumento, ValidationContext<DatiDocumento>, bool>, Action) AbstractValidator<DatiDocumento>.Unless(Func<DatiDocumento, bool>, Action) AbstractValidator<DatiDocumento>.Unless(Func<DatiDocumento, ValidationContext<DatiDocumento>, bool>, Action) AbstractValidator<DatiDocumento>.WhenAsync(Func<DatiDocumento, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.WhenAsync(Func<DatiDocumento, ValidationContext<DatiDocumento>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.UnlessAsync(Func<DatiDocumento, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.UnlessAsync(Func<DatiDocumento, ValidationContext<DatiDocumento>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.Include(IValidator<DatiDocumento>) AbstractValidator<DatiDocumento>.Include<TValidator>(Func<DatiDocumento, TValidator>) AbstractValidator<DatiDocumento>.GetEnumerator() AbstractValidator<DatiDocumento>.EnsureInstanceNotNull(object) AbstractValidator<DatiDocumento>.PreValidate(ValidationContext<DatiDocumento>, ValidationResult) AbstractValidator<DatiDocumento>.RaiseValidationException(ValidationContext<DatiDocumento>, ValidationResult) AbstractValidator<DatiDocumento>.CascadeMode AbstractValidator<DatiDocumento>.ClassLevelCascadeMode AbstractValidator<DatiDocumento>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/FatturaElettronica.Validators.DatiDDTValidator.html": {
    "href": "api/FatturaElettronica.Validators.DatiDDTValidator.html",
    "title": "Class DatiDDTValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiDDTValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DatiDDTValidator : AbstractValidator<DatiDDT>, IValidator<DatiDDT>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiDDT> DatiDDTValidator Implements IValidator<DatiDDT> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiDDT>.Validate(DatiDDT) AbstractValidator<DatiDDT>.ValidateAsync(DatiDDT, CancellationToken) AbstractValidator<DatiDDT>.Validate(ValidationContext<DatiDDT>) AbstractValidator<DatiDDT>.ValidateAsync(ValidationContext<DatiDDT>, CancellationToken) AbstractValidator<DatiDDT>.CreateDescriptor() AbstractValidator<DatiDDT>.RuleFor<TProperty>(Expression<Func<DatiDDT, TProperty>>) AbstractValidator<DatiDDT>.Transform<TProperty, TTransformed>(Expression<Func<DatiDDT, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiDDT>.Transform<TProperty, TTransformed>(Expression<Func<DatiDDT, TProperty>>, Func<DatiDDT, TProperty, TTransformed>) AbstractValidator<DatiDDT>.RuleForEach<TElement>(Expression<Func<DatiDDT, IEnumerable<TElement>>>) AbstractValidator<DatiDDT>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiDDT, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiDDT>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiDDT, IEnumerable<TElement>>>, Func<DatiDDT, TElement, TTransformed>) AbstractValidator<DatiDDT>.RuleSet(string, Action) AbstractValidator<DatiDDT>.When(Func<DatiDDT, bool>, Action) AbstractValidator<DatiDDT>.When(Func<DatiDDT, ValidationContext<DatiDDT>, bool>, Action) AbstractValidator<DatiDDT>.Unless(Func<DatiDDT, bool>, Action) AbstractValidator<DatiDDT>.Unless(Func<DatiDDT, ValidationContext<DatiDDT>, bool>, Action) AbstractValidator<DatiDDT>.WhenAsync(Func<DatiDDT, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDDT>.WhenAsync(Func<DatiDDT, ValidationContext<DatiDDT>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDDT>.UnlessAsync(Func<DatiDDT, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDDT>.UnlessAsync(Func<DatiDDT, ValidationContext<DatiDDT>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDDT>.Include(IValidator<DatiDDT>) AbstractValidator<DatiDDT>.Include<TValidator>(Func<DatiDDT, TValidator>) AbstractValidator<DatiDDT>.GetEnumerator() AbstractValidator<DatiDDT>.EnsureInstanceNotNull(object) AbstractValidator<DatiDDT>.PreValidate(ValidationContext<DatiDDT>, ValidationResult) AbstractValidator<DatiDDT>.RaiseValidationException(ValidationContext<DatiDDT>, ValidationResult) AbstractValidator<DatiDDT>.CascadeMode AbstractValidator<DatiDDT>.ClassLevelCascadeMode AbstractValidator<DatiDDT>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiDDTValidator() public DatiDDTValidator()"
  },
  "api/FatturaElettronica.Validators.DatiDocumentoValidator.html": {
    "href": "api/FatturaElettronica.Validators.DatiDocumentoValidator.html",
    "title": "Class DatiDocumentoValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiDocumentoValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DatiDocumentoValidator : AbstractValidator<DatiDocumento>, IValidator<DatiDocumento>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiDocumento> DatiDocumentoValidator Implements IValidator<DatiDocumento> IValidator IEnumerable<IValidationRule> IEnumerable Derived DatiContrattoValidator DatiConvenzioneValidator DatiFattureCollegateValidator DatiOrdineAcquistoValidator DatiRicezioneValidator Inherited Members AbstractValidator<DatiDocumento>.Validate(DatiDocumento) AbstractValidator<DatiDocumento>.ValidateAsync(DatiDocumento, CancellationToken) AbstractValidator<DatiDocumento>.Validate(ValidationContext<DatiDocumento>) AbstractValidator<DatiDocumento>.ValidateAsync(ValidationContext<DatiDocumento>, CancellationToken) AbstractValidator<DatiDocumento>.CreateDescriptor() AbstractValidator<DatiDocumento>.RuleFor<TProperty>(Expression<Func<DatiDocumento, TProperty>>) AbstractValidator<DatiDocumento>.Transform<TProperty, TTransformed>(Expression<Func<DatiDocumento, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiDocumento>.Transform<TProperty, TTransformed>(Expression<Func<DatiDocumento, TProperty>>, Func<DatiDocumento, TProperty, TTransformed>) AbstractValidator<DatiDocumento>.RuleForEach<TElement>(Expression<Func<DatiDocumento, IEnumerable<TElement>>>) AbstractValidator<DatiDocumento>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiDocumento, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiDocumento>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiDocumento, IEnumerable<TElement>>>, Func<DatiDocumento, TElement, TTransformed>) AbstractValidator<DatiDocumento>.RuleSet(string, Action) AbstractValidator<DatiDocumento>.When(Func<DatiDocumento, bool>, Action) AbstractValidator<DatiDocumento>.When(Func<DatiDocumento, ValidationContext<DatiDocumento>, bool>, Action) AbstractValidator<DatiDocumento>.Unless(Func<DatiDocumento, bool>, Action) AbstractValidator<DatiDocumento>.Unless(Func<DatiDocumento, ValidationContext<DatiDocumento>, bool>, Action) AbstractValidator<DatiDocumento>.WhenAsync(Func<DatiDocumento, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.WhenAsync(Func<DatiDocumento, ValidationContext<DatiDocumento>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.UnlessAsync(Func<DatiDocumento, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.UnlessAsync(Func<DatiDocumento, ValidationContext<DatiDocumento>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.Include(IValidator<DatiDocumento>) AbstractValidator<DatiDocumento>.Include<TValidator>(Func<DatiDocumento, TValidator>) AbstractValidator<DatiDocumento>.GetEnumerator() AbstractValidator<DatiDocumento>.EnsureInstanceNotNull(object) AbstractValidator<DatiDocumento>.PreValidate(ValidationContext<DatiDocumento>, ValidationResult) AbstractValidator<DatiDocumento>.RaiseValidationException(ValidationContext<DatiDocumento>, ValidationResult) AbstractValidator<DatiDocumento>.CascadeMode AbstractValidator<DatiDocumento>.ClassLevelCascadeMode AbstractValidator<DatiDocumento>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiDocumentoValidator() protected DatiDocumentoValidator()"
  },
  "api/FatturaElettronica.Validators.DatiFattureCollegateValidator.html": {
    "href": "api/FatturaElettronica.Validators.DatiFattureCollegateValidator.html",
    "title": "Class DatiFattureCollegateValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiFattureCollegateValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DatiFattureCollegateValidator : DatiDocumentoValidator, IValidator<DatiDocumento>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiDocumento> DatiDocumentoValidator DatiFattureCollegateValidator Implements IValidator<DatiDocumento> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiDocumento>.Validate(DatiDocumento) AbstractValidator<DatiDocumento>.ValidateAsync(DatiDocumento, CancellationToken) AbstractValidator<DatiDocumento>.Validate(ValidationContext<DatiDocumento>) AbstractValidator<DatiDocumento>.ValidateAsync(ValidationContext<DatiDocumento>, CancellationToken) AbstractValidator<DatiDocumento>.CreateDescriptor() AbstractValidator<DatiDocumento>.RuleFor<TProperty>(Expression<Func<DatiDocumento, TProperty>>) AbstractValidator<DatiDocumento>.Transform<TProperty, TTransformed>(Expression<Func<DatiDocumento, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiDocumento>.Transform<TProperty, TTransformed>(Expression<Func<DatiDocumento, TProperty>>, Func<DatiDocumento, TProperty, TTransformed>) AbstractValidator<DatiDocumento>.RuleForEach<TElement>(Expression<Func<DatiDocumento, IEnumerable<TElement>>>) AbstractValidator<DatiDocumento>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiDocumento, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiDocumento>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiDocumento, IEnumerable<TElement>>>, Func<DatiDocumento, TElement, TTransformed>) AbstractValidator<DatiDocumento>.RuleSet(string, Action) AbstractValidator<DatiDocumento>.When(Func<DatiDocumento, bool>, Action) AbstractValidator<DatiDocumento>.When(Func<DatiDocumento, ValidationContext<DatiDocumento>, bool>, Action) AbstractValidator<DatiDocumento>.Unless(Func<DatiDocumento, bool>, Action) AbstractValidator<DatiDocumento>.Unless(Func<DatiDocumento, ValidationContext<DatiDocumento>, bool>, Action) AbstractValidator<DatiDocumento>.WhenAsync(Func<DatiDocumento, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.WhenAsync(Func<DatiDocumento, ValidationContext<DatiDocumento>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.UnlessAsync(Func<DatiDocumento, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.UnlessAsync(Func<DatiDocumento, ValidationContext<DatiDocumento>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.Include(IValidator<DatiDocumento>) AbstractValidator<DatiDocumento>.Include<TValidator>(Func<DatiDocumento, TValidator>) AbstractValidator<DatiDocumento>.GetEnumerator() AbstractValidator<DatiDocumento>.EnsureInstanceNotNull(object) AbstractValidator<DatiDocumento>.PreValidate(ValidationContext<DatiDocumento>, ValidationResult) AbstractValidator<DatiDocumento>.RaiseValidationException(ValidationContext<DatiDocumento>, ValidationResult) AbstractValidator<DatiDocumento>.CascadeMode AbstractValidator<DatiDocumento>.ClassLevelCascadeMode AbstractValidator<DatiDocumento>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/FatturaElettronica.Validators.DatiGeneraliDocumentoValidator.html": {
    "href": "api/FatturaElettronica.Validators.DatiGeneraliDocumentoValidator.html",
    "title": "Class DatiGeneraliDocumentoValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiGeneraliDocumentoValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DatiGeneraliDocumentoValidator : AbstractValidator<DatiGeneraliDocumento>, IValidator<DatiGeneraliDocumento>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiGeneraliDocumento> DatiGeneraliDocumentoValidator Implements IValidator<DatiGeneraliDocumento> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiGeneraliDocumento>.Validate(DatiGeneraliDocumento) AbstractValidator<DatiGeneraliDocumento>.ValidateAsync(DatiGeneraliDocumento, CancellationToken) AbstractValidator<DatiGeneraliDocumento>.Validate(ValidationContext<DatiGeneraliDocumento>) AbstractValidator<DatiGeneraliDocumento>.ValidateAsync(ValidationContext<DatiGeneraliDocumento>, CancellationToken) AbstractValidator<DatiGeneraliDocumento>.CreateDescriptor() AbstractValidator<DatiGeneraliDocumento>.RuleFor<TProperty>(Expression<Func<DatiGeneraliDocumento, TProperty>>) AbstractValidator<DatiGeneraliDocumento>.Transform<TProperty, TTransformed>(Expression<Func<DatiGeneraliDocumento, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiGeneraliDocumento>.Transform<TProperty, TTransformed>(Expression<Func<DatiGeneraliDocumento, TProperty>>, Func<DatiGeneraliDocumento, TProperty, TTransformed>) AbstractValidator<DatiGeneraliDocumento>.RuleForEach<TElement>(Expression<Func<DatiGeneraliDocumento, IEnumerable<TElement>>>) AbstractValidator<DatiGeneraliDocumento>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiGeneraliDocumento, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiGeneraliDocumento>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiGeneraliDocumento, IEnumerable<TElement>>>, Func<DatiGeneraliDocumento, TElement, TTransformed>) AbstractValidator<DatiGeneraliDocumento>.RuleSet(string, Action) AbstractValidator<DatiGeneraliDocumento>.When(Func<DatiGeneraliDocumento, bool>, Action) AbstractValidator<DatiGeneraliDocumento>.When(Func<DatiGeneraliDocumento, ValidationContext<DatiGeneraliDocumento>, bool>, Action) AbstractValidator<DatiGeneraliDocumento>.Unless(Func<DatiGeneraliDocumento, bool>, Action) AbstractValidator<DatiGeneraliDocumento>.Unless(Func<DatiGeneraliDocumento, ValidationContext<DatiGeneraliDocumento>, bool>, Action) AbstractValidator<DatiGeneraliDocumento>.WhenAsync(Func<DatiGeneraliDocumento, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiGeneraliDocumento>.WhenAsync(Func<DatiGeneraliDocumento, ValidationContext<DatiGeneraliDocumento>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiGeneraliDocumento>.UnlessAsync(Func<DatiGeneraliDocumento, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiGeneraliDocumento>.UnlessAsync(Func<DatiGeneraliDocumento, ValidationContext<DatiGeneraliDocumento>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiGeneraliDocumento>.Include(IValidator<DatiGeneraliDocumento>) AbstractValidator<DatiGeneraliDocumento>.Include<TValidator>(Func<DatiGeneraliDocumento, TValidator>) AbstractValidator<DatiGeneraliDocumento>.GetEnumerator() AbstractValidator<DatiGeneraliDocumento>.EnsureInstanceNotNull(object) AbstractValidator<DatiGeneraliDocumento>.PreValidate(ValidationContext<DatiGeneraliDocumento>, ValidationResult) AbstractValidator<DatiGeneraliDocumento>.RaiseValidationException(ValidationContext<DatiGeneraliDocumento>, ValidationResult) AbstractValidator<DatiGeneraliDocumento>.CascadeMode AbstractValidator<DatiGeneraliDocumento>.ClassLevelCascadeMode AbstractValidator<DatiGeneraliDocumento>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiGeneraliDocumentoValidator() public DatiGeneraliDocumentoValidator()"
  },
  "api/FatturaElettronica.Validators.DatiGeneraliValidator.html": {
    "href": "api/FatturaElettronica.Validators.DatiGeneraliValidator.html",
    "title": "Class DatiGeneraliValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiGeneraliValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DatiGeneraliValidator : AbstractValidator<DatiGenerali>, IValidator<DatiGenerali>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiGenerali> DatiGeneraliValidator Implements IValidator<DatiGenerali> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiGenerali>.Validate(DatiGenerali) AbstractValidator<DatiGenerali>.ValidateAsync(DatiGenerali, CancellationToken) AbstractValidator<DatiGenerali>.Validate(ValidationContext<DatiGenerali>) AbstractValidator<DatiGenerali>.ValidateAsync(ValidationContext<DatiGenerali>, CancellationToken) AbstractValidator<DatiGenerali>.CreateDescriptor() AbstractValidator<DatiGenerali>.RuleFor<TProperty>(Expression<Func<DatiGenerali, TProperty>>) AbstractValidator<DatiGenerali>.Transform<TProperty, TTransformed>(Expression<Func<DatiGenerali, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiGenerali>.Transform<TProperty, TTransformed>(Expression<Func<DatiGenerali, TProperty>>, Func<DatiGenerali, TProperty, TTransformed>) AbstractValidator<DatiGenerali>.RuleForEach<TElement>(Expression<Func<DatiGenerali, IEnumerable<TElement>>>) AbstractValidator<DatiGenerali>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiGenerali, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiGenerali>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiGenerali, IEnumerable<TElement>>>, Func<DatiGenerali, TElement, TTransformed>) AbstractValidator<DatiGenerali>.RuleSet(string, Action) AbstractValidator<DatiGenerali>.When(Func<DatiGenerali, bool>, Action) AbstractValidator<DatiGenerali>.When(Func<DatiGenerali, ValidationContext<DatiGenerali>, bool>, Action) AbstractValidator<DatiGenerali>.Unless(Func<DatiGenerali, bool>, Action) AbstractValidator<DatiGenerali>.Unless(Func<DatiGenerali, ValidationContext<DatiGenerali>, bool>, Action) AbstractValidator<DatiGenerali>.WhenAsync(Func<DatiGenerali, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiGenerali>.WhenAsync(Func<DatiGenerali, ValidationContext<DatiGenerali>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiGenerali>.UnlessAsync(Func<DatiGenerali, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiGenerali>.UnlessAsync(Func<DatiGenerali, ValidationContext<DatiGenerali>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiGenerali>.Include(IValidator<DatiGenerali>) AbstractValidator<DatiGenerali>.Include<TValidator>(Func<DatiGenerali, TValidator>) AbstractValidator<DatiGenerali>.GetEnumerator() AbstractValidator<DatiGenerali>.EnsureInstanceNotNull(object) AbstractValidator<DatiGenerali>.PreValidate(ValidationContext<DatiGenerali>, ValidationResult) AbstractValidator<DatiGenerali>.RaiseValidationException(ValidationContext<DatiGenerali>, ValidationResult) AbstractValidator<DatiGenerali>.CascadeMode AbstractValidator<DatiGenerali>.ClassLevelCascadeMode AbstractValidator<DatiGenerali>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiGeneraliValidator() public DatiGeneraliValidator()"
  },
  "api/FatturaElettronica.Validators.DatiOrdineAcquistoValidator.html": {
    "href": "api/FatturaElettronica.Validators.DatiOrdineAcquistoValidator.html",
    "title": "Class DatiOrdineAcquistoValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiOrdineAcquistoValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DatiOrdineAcquistoValidator : DatiDocumentoValidator, IValidator<DatiDocumento>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiDocumento> DatiDocumentoValidator DatiOrdineAcquistoValidator Implements IValidator<DatiDocumento> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiDocumento>.Validate(DatiDocumento) AbstractValidator<DatiDocumento>.ValidateAsync(DatiDocumento, CancellationToken) AbstractValidator<DatiDocumento>.Validate(ValidationContext<DatiDocumento>) AbstractValidator<DatiDocumento>.ValidateAsync(ValidationContext<DatiDocumento>, CancellationToken) AbstractValidator<DatiDocumento>.CreateDescriptor() AbstractValidator<DatiDocumento>.RuleFor<TProperty>(Expression<Func<DatiDocumento, TProperty>>) AbstractValidator<DatiDocumento>.Transform<TProperty, TTransformed>(Expression<Func<DatiDocumento, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiDocumento>.Transform<TProperty, TTransformed>(Expression<Func<DatiDocumento, TProperty>>, Func<DatiDocumento, TProperty, TTransformed>) AbstractValidator<DatiDocumento>.RuleForEach<TElement>(Expression<Func<DatiDocumento, IEnumerable<TElement>>>) AbstractValidator<DatiDocumento>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiDocumento, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiDocumento>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiDocumento, IEnumerable<TElement>>>, Func<DatiDocumento, TElement, TTransformed>) AbstractValidator<DatiDocumento>.RuleSet(string, Action) AbstractValidator<DatiDocumento>.When(Func<DatiDocumento, bool>, Action) AbstractValidator<DatiDocumento>.When(Func<DatiDocumento, ValidationContext<DatiDocumento>, bool>, Action) AbstractValidator<DatiDocumento>.Unless(Func<DatiDocumento, bool>, Action) AbstractValidator<DatiDocumento>.Unless(Func<DatiDocumento, ValidationContext<DatiDocumento>, bool>, Action) AbstractValidator<DatiDocumento>.WhenAsync(Func<DatiDocumento, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.WhenAsync(Func<DatiDocumento, ValidationContext<DatiDocumento>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.UnlessAsync(Func<DatiDocumento, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.UnlessAsync(Func<DatiDocumento, ValidationContext<DatiDocumento>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.Include(IValidator<DatiDocumento>) AbstractValidator<DatiDocumento>.Include<TValidator>(Func<DatiDocumento, TValidator>) AbstractValidator<DatiDocumento>.GetEnumerator() AbstractValidator<DatiDocumento>.EnsureInstanceNotNull(object) AbstractValidator<DatiDocumento>.PreValidate(ValidationContext<DatiDocumento>, ValidationResult) AbstractValidator<DatiDocumento>.RaiseValidationException(ValidationContext<DatiDocumento>, ValidationResult) AbstractValidator<DatiDocumento>.CascadeMode AbstractValidator<DatiDocumento>.ClassLevelCascadeMode AbstractValidator<DatiDocumento>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/FatturaElettronica.Validators.DatiPagamentoValidator.html": {
    "href": "api/FatturaElettronica.Validators.DatiPagamentoValidator.html",
    "title": "Class DatiPagamentoValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiPagamentoValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DatiPagamentoValidator : AbstractValidator<DatiPagamento>, IValidator<DatiPagamento>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiPagamento> DatiPagamentoValidator Implements IValidator<DatiPagamento> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiPagamento>.Validate(DatiPagamento) AbstractValidator<DatiPagamento>.ValidateAsync(DatiPagamento, CancellationToken) AbstractValidator<DatiPagamento>.Validate(ValidationContext<DatiPagamento>) AbstractValidator<DatiPagamento>.ValidateAsync(ValidationContext<DatiPagamento>, CancellationToken) AbstractValidator<DatiPagamento>.CreateDescriptor() AbstractValidator<DatiPagamento>.RuleFor<TProperty>(Expression<Func<DatiPagamento, TProperty>>) AbstractValidator<DatiPagamento>.Transform<TProperty, TTransformed>(Expression<Func<DatiPagamento, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiPagamento>.Transform<TProperty, TTransformed>(Expression<Func<DatiPagamento, TProperty>>, Func<DatiPagamento, TProperty, TTransformed>) AbstractValidator<DatiPagamento>.RuleForEach<TElement>(Expression<Func<DatiPagamento, IEnumerable<TElement>>>) AbstractValidator<DatiPagamento>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiPagamento, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiPagamento>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiPagamento, IEnumerable<TElement>>>, Func<DatiPagamento, TElement, TTransformed>) AbstractValidator<DatiPagamento>.RuleSet(string, Action) AbstractValidator<DatiPagamento>.When(Func<DatiPagamento, bool>, Action) AbstractValidator<DatiPagamento>.When(Func<DatiPagamento, ValidationContext<DatiPagamento>, bool>, Action) AbstractValidator<DatiPagamento>.Unless(Func<DatiPagamento, bool>, Action) AbstractValidator<DatiPagamento>.Unless(Func<DatiPagamento, ValidationContext<DatiPagamento>, bool>, Action) AbstractValidator<DatiPagamento>.WhenAsync(Func<DatiPagamento, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiPagamento>.WhenAsync(Func<DatiPagamento, ValidationContext<DatiPagamento>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiPagamento>.UnlessAsync(Func<DatiPagamento, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiPagamento>.UnlessAsync(Func<DatiPagamento, ValidationContext<DatiPagamento>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiPagamento>.Include(IValidator<DatiPagamento>) AbstractValidator<DatiPagamento>.Include<TValidator>(Func<DatiPagamento, TValidator>) AbstractValidator<DatiPagamento>.GetEnumerator() AbstractValidator<DatiPagamento>.EnsureInstanceNotNull(object) AbstractValidator<DatiPagamento>.PreValidate(ValidationContext<DatiPagamento>, ValidationResult) AbstractValidator<DatiPagamento>.RaiseValidationException(ValidationContext<DatiPagamento>, ValidationResult) AbstractValidator<DatiPagamento>.CascadeMode AbstractValidator<DatiPagamento>.ClassLevelCascadeMode AbstractValidator<DatiPagamento>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiPagamentoValidator() public DatiPagamentoValidator()"
  },
  "api/FatturaElettronica.Validators.DatiRicezioneValidator.html": {
    "href": "api/FatturaElettronica.Validators.DatiRicezioneValidator.html",
    "title": "Class DatiRicezioneValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiRicezioneValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DatiRicezioneValidator : DatiDocumentoValidator, IValidator<DatiDocumento>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiDocumento> DatiDocumentoValidator DatiRicezioneValidator Implements IValidator<DatiDocumento> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiDocumento>.Validate(DatiDocumento) AbstractValidator<DatiDocumento>.ValidateAsync(DatiDocumento, CancellationToken) AbstractValidator<DatiDocumento>.Validate(ValidationContext<DatiDocumento>) AbstractValidator<DatiDocumento>.ValidateAsync(ValidationContext<DatiDocumento>, CancellationToken) AbstractValidator<DatiDocumento>.CreateDescriptor() AbstractValidator<DatiDocumento>.RuleFor<TProperty>(Expression<Func<DatiDocumento, TProperty>>) AbstractValidator<DatiDocumento>.Transform<TProperty, TTransformed>(Expression<Func<DatiDocumento, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiDocumento>.Transform<TProperty, TTransformed>(Expression<Func<DatiDocumento, TProperty>>, Func<DatiDocumento, TProperty, TTransformed>) AbstractValidator<DatiDocumento>.RuleForEach<TElement>(Expression<Func<DatiDocumento, IEnumerable<TElement>>>) AbstractValidator<DatiDocumento>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiDocumento, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiDocumento>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiDocumento, IEnumerable<TElement>>>, Func<DatiDocumento, TElement, TTransformed>) AbstractValidator<DatiDocumento>.RuleSet(string, Action) AbstractValidator<DatiDocumento>.When(Func<DatiDocumento, bool>, Action) AbstractValidator<DatiDocumento>.When(Func<DatiDocumento, ValidationContext<DatiDocumento>, bool>, Action) AbstractValidator<DatiDocumento>.Unless(Func<DatiDocumento, bool>, Action) AbstractValidator<DatiDocumento>.Unless(Func<DatiDocumento, ValidationContext<DatiDocumento>, bool>, Action) AbstractValidator<DatiDocumento>.WhenAsync(Func<DatiDocumento, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.WhenAsync(Func<DatiDocumento, ValidationContext<DatiDocumento>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.UnlessAsync(Func<DatiDocumento, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.UnlessAsync(Func<DatiDocumento, ValidationContext<DatiDocumento>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiDocumento>.Include(IValidator<DatiDocumento>) AbstractValidator<DatiDocumento>.Include<TValidator>(Func<DatiDocumento, TValidator>) AbstractValidator<DatiDocumento>.GetEnumerator() AbstractValidator<DatiDocumento>.EnsureInstanceNotNull(object) AbstractValidator<DatiDocumento>.PreValidate(ValidationContext<DatiDocumento>, ValidationResult) AbstractValidator<DatiDocumento>.RaiseValidationException(ValidationContext<DatiDocumento>, ValidationResult) AbstractValidator<DatiDocumento>.CascadeMode AbstractValidator<DatiDocumento>.ClassLevelCascadeMode AbstractValidator<DatiDocumento>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/FatturaElettronica.Validators.DatiRiepilogoValidator.html": {
    "href": "api/FatturaElettronica.Validators.DatiRiepilogoValidator.html",
    "title": "Class DatiRiepilogoValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiRiepilogoValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DatiRiepilogoValidator : AbstractValidator<DatiRiepilogo>, IValidator<DatiRiepilogo>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiRiepilogo> DatiRiepilogoValidator Implements IValidator<DatiRiepilogo> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiRiepilogo>.Validate(DatiRiepilogo) AbstractValidator<DatiRiepilogo>.ValidateAsync(DatiRiepilogo, CancellationToken) AbstractValidator<DatiRiepilogo>.Validate(ValidationContext<DatiRiepilogo>) AbstractValidator<DatiRiepilogo>.ValidateAsync(ValidationContext<DatiRiepilogo>, CancellationToken) AbstractValidator<DatiRiepilogo>.CreateDescriptor() AbstractValidator<DatiRiepilogo>.RuleFor<TProperty>(Expression<Func<DatiRiepilogo, TProperty>>) AbstractValidator<DatiRiepilogo>.Transform<TProperty, TTransformed>(Expression<Func<DatiRiepilogo, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiRiepilogo>.Transform<TProperty, TTransformed>(Expression<Func<DatiRiepilogo, TProperty>>, Func<DatiRiepilogo, TProperty, TTransformed>) AbstractValidator<DatiRiepilogo>.RuleForEach<TElement>(Expression<Func<DatiRiepilogo, IEnumerable<TElement>>>) AbstractValidator<DatiRiepilogo>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiRiepilogo, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiRiepilogo>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiRiepilogo, IEnumerable<TElement>>>, Func<DatiRiepilogo, TElement, TTransformed>) AbstractValidator<DatiRiepilogo>.RuleSet(string, Action) AbstractValidator<DatiRiepilogo>.When(Func<DatiRiepilogo, bool>, Action) AbstractValidator<DatiRiepilogo>.When(Func<DatiRiepilogo, ValidationContext<DatiRiepilogo>, bool>, Action) AbstractValidator<DatiRiepilogo>.Unless(Func<DatiRiepilogo, bool>, Action) AbstractValidator<DatiRiepilogo>.Unless(Func<DatiRiepilogo, ValidationContext<DatiRiepilogo>, bool>, Action) AbstractValidator<DatiRiepilogo>.WhenAsync(Func<DatiRiepilogo, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiRiepilogo>.WhenAsync(Func<DatiRiepilogo, ValidationContext<DatiRiepilogo>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiRiepilogo>.UnlessAsync(Func<DatiRiepilogo, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiRiepilogo>.UnlessAsync(Func<DatiRiepilogo, ValidationContext<DatiRiepilogo>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiRiepilogo>.Include(IValidator<DatiRiepilogo>) AbstractValidator<DatiRiepilogo>.Include<TValidator>(Func<DatiRiepilogo, TValidator>) AbstractValidator<DatiRiepilogo>.GetEnumerator() AbstractValidator<DatiRiepilogo>.EnsureInstanceNotNull(object) AbstractValidator<DatiRiepilogo>.PreValidate(ValidationContext<DatiRiepilogo>, ValidationResult) AbstractValidator<DatiRiepilogo>.RaiseValidationException(ValidationContext<DatiRiepilogo>, ValidationResult) AbstractValidator<DatiRiepilogo>.CascadeMode AbstractValidator<DatiRiepilogo>.ClassLevelCascadeMode AbstractValidator<DatiRiepilogo>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiRiepilogoValidator() public DatiRiepilogoValidator()"
  },
  "api/FatturaElettronica.Validators.DatiRitenutaValidator.html": {
    "href": "api/FatturaElettronica.Validators.DatiRitenutaValidator.html",
    "title": "Class DatiRitenutaValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiRitenutaValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DatiRitenutaValidator : AbstractValidator<DatiRitenuta>, IValidator<DatiRitenuta>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiRitenuta> DatiRitenutaValidator Implements IValidator<DatiRitenuta> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiRitenuta>.Validate(DatiRitenuta) AbstractValidator<DatiRitenuta>.ValidateAsync(DatiRitenuta, CancellationToken) AbstractValidator<DatiRitenuta>.Validate(ValidationContext<DatiRitenuta>) AbstractValidator<DatiRitenuta>.ValidateAsync(ValidationContext<DatiRitenuta>, CancellationToken) AbstractValidator<DatiRitenuta>.CreateDescriptor() AbstractValidator<DatiRitenuta>.RuleFor<TProperty>(Expression<Func<DatiRitenuta, TProperty>>) AbstractValidator<DatiRitenuta>.Transform<TProperty, TTransformed>(Expression<Func<DatiRitenuta, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiRitenuta>.Transform<TProperty, TTransformed>(Expression<Func<DatiRitenuta, TProperty>>, Func<DatiRitenuta, TProperty, TTransformed>) AbstractValidator<DatiRitenuta>.RuleForEach<TElement>(Expression<Func<DatiRitenuta, IEnumerable<TElement>>>) AbstractValidator<DatiRitenuta>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiRitenuta, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiRitenuta>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiRitenuta, IEnumerable<TElement>>>, Func<DatiRitenuta, TElement, TTransformed>) AbstractValidator<DatiRitenuta>.RuleSet(string, Action) AbstractValidator<DatiRitenuta>.When(Func<DatiRitenuta, bool>, Action) AbstractValidator<DatiRitenuta>.When(Func<DatiRitenuta, ValidationContext<DatiRitenuta>, bool>, Action) AbstractValidator<DatiRitenuta>.Unless(Func<DatiRitenuta, bool>, Action) AbstractValidator<DatiRitenuta>.Unless(Func<DatiRitenuta, ValidationContext<DatiRitenuta>, bool>, Action) AbstractValidator<DatiRitenuta>.WhenAsync(Func<DatiRitenuta, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiRitenuta>.WhenAsync(Func<DatiRitenuta, ValidationContext<DatiRitenuta>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiRitenuta>.UnlessAsync(Func<DatiRitenuta, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiRitenuta>.UnlessAsync(Func<DatiRitenuta, ValidationContext<DatiRitenuta>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiRitenuta>.Include(IValidator<DatiRitenuta>) AbstractValidator<DatiRitenuta>.Include<TValidator>(Func<DatiRitenuta, TValidator>) AbstractValidator<DatiRitenuta>.GetEnumerator() AbstractValidator<DatiRitenuta>.EnsureInstanceNotNull(object) AbstractValidator<DatiRitenuta>.PreValidate(ValidationContext<DatiRitenuta>, ValidationResult) AbstractValidator<DatiRitenuta>.RaiseValidationException(ValidationContext<DatiRitenuta>, ValidationResult) AbstractValidator<DatiRitenuta>.CascadeMode AbstractValidator<DatiRitenuta>.ClassLevelCascadeMode AbstractValidator<DatiRitenuta>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiRitenutaValidator() public DatiRitenutaValidator()"
  },
  "api/FatturaElettronica.Validators.DatiTrasmissioneValidator.html": {
    "href": "api/FatturaElettronica.Validators.DatiTrasmissioneValidator.html",
    "title": "Class DatiTrasmissioneValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiTrasmissioneValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DatiTrasmissioneValidator : AbstractValidator<DatiTrasmissione>, IValidator<DatiTrasmissione>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiTrasmissione> DatiTrasmissioneValidator Implements IValidator<DatiTrasmissione> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiTrasmissione>.Validate(DatiTrasmissione) AbstractValidator<DatiTrasmissione>.ValidateAsync(DatiTrasmissione, CancellationToken) AbstractValidator<DatiTrasmissione>.Validate(ValidationContext<DatiTrasmissione>) AbstractValidator<DatiTrasmissione>.ValidateAsync(ValidationContext<DatiTrasmissione>, CancellationToken) AbstractValidator<DatiTrasmissione>.CreateDescriptor() AbstractValidator<DatiTrasmissione>.RuleFor<TProperty>(Expression<Func<DatiTrasmissione, TProperty>>) AbstractValidator<DatiTrasmissione>.Transform<TProperty, TTransformed>(Expression<Func<DatiTrasmissione, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiTrasmissione>.Transform<TProperty, TTransformed>(Expression<Func<DatiTrasmissione, TProperty>>, Func<DatiTrasmissione, TProperty, TTransformed>) AbstractValidator<DatiTrasmissione>.RuleForEach<TElement>(Expression<Func<DatiTrasmissione, IEnumerable<TElement>>>) AbstractValidator<DatiTrasmissione>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiTrasmissione, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiTrasmissione>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiTrasmissione, IEnumerable<TElement>>>, Func<DatiTrasmissione, TElement, TTransformed>) AbstractValidator<DatiTrasmissione>.RuleSet(string, Action) AbstractValidator<DatiTrasmissione>.When(Func<DatiTrasmissione, bool>, Action) AbstractValidator<DatiTrasmissione>.When(Func<DatiTrasmissione, ValidationContext<DatiTrasmissione>, bool>, Action) AbstractValidator<DatiTrasmissione>.Unless(Func<DatiTrasmissione, bool>, Action) AbstractValidator<DatiTrasmissione>.Unless(Func<DatiTrasmissione, ValidationContext<DatiTrasmissione>, bool>, Action) AbstractValidator<DatiTrasmissione>.WhenAsync(Func<DatiTrasmissione, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiTrasmissione>.WhenAsync(Func<DatiTrasmissione, ValidationContext<DatiTrasmissione>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiTrasmissione>.UnlessAsync(Func<DatiTrasmissione, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiTrasmissione>.UnlessAsync(Func<DatiTrasmissione, ValidationContext<DatiTrasmissione>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiTrasmissione>.Include(IValidator<DatiTrasmissione>) AbstractValidator<DatiTrasmissione>.Include<TValidator>(Func<DatiTrasmissione, TValidator>) AbstractValidator<DatiTrasmissione>.GetEnumerator() AbstractValidator<DatiTrasmissione>.EnsureInstanceNotNull(object) AbstractValidator<DatiTrasmissione>.PreValidate(ValidationContext<DatiTrasmissione>, ValidationResult) AbstractValidator<DatiTrasmissione>.RaiseValidationException(ValidationContext<DatiTrasmissione>, ValidationResult) AbstractValidator<DatiTrasmissione>.CascadeMode AbstractValidator<DatiTrasmissione>.ClassLevelCascadeMode AbstractValidator<DatiTrasmissione>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiTrasmissioneValidator() public DatiTrasmissioneValidator()"
  },
  "api/FatturaElettronica.Validators.DatiTrasportoValidator.html": {
    "href": "api/FatturaElettronica.Validators.DatiTrasportoValidator.html",
    "title": "Class DatiTrasportoValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiTrasportoValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DatiTrasportoValidator : AbstractValidator<DatiTrasporto>, IValidator<DatiTrasporto>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiTrasporto> DatiTrasportoValidator Implements IValidator<DatiTrasporto> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiTrasporto>.Validate(DatiTrasporto) AbstractValidator<DatiTrasporto>.ValidateAsync(DatiTrasporto, CancellationToken) AbstractValidator<DatiTrasporto>.Validate(ValidationContext<DatiTrasporto>) AbstractValidator<DatiTrasporto>.ValidateAsync(ValidationContext<DatiTrasporto>, CancellationToken) AbstractValidator<DatiTrasporto>.CreateDescriptor() AbstractValidator<DatiTrasporto>.RuleFor<TProperty>(Expression<Func<DatiTrasporto, TProperty>>) AbstractValidator<DatiTrasporto>.Transform<TProperty, TTransformed>(Expression<Func<DatiTrasporto, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiTrasporto>.Transform<TProperty, TTransformed>(Expression<Func<DatiTrasporto, TProperty>>, Func<DatiTrasporto, TProperty, TTransformed>) AbstractValidator<DatiTrasporto>.RuleForEach<TElement>(Expression<Func<DatiTrasporto, IEnumerable<TElement>>>) AbstractValidator<DatiTrasporto>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiTrasporto, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiTrasporto>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiTrasporto, IEnumerable<TElement>>>, Func<DatiTrasporto, TElement, TTransformed>) AbstractValidator<DatiTrasporto>.RuleSet(string, Action) AbstractValidator<DatiTrasporto>.When(Func<DatiTrasporto, bool>, Action) AbstractValidator<DatiTrasporto>.When(Func<DatiTrasporto, ValidationContext<DatiTrasporto>, bool>, Action) AbstractValidator<DatiTrasporto>.Unless(Func<DatiTrasporto, bool>, Action) AbstractValidator<DatiTrasporto>.Unless(Func<DatiTrasporto, ValidationContext<DatiTrasporto>, bool>, Action) AbstractValidator<DatiTrasporto>.WhenAsync(Func<DatiTrasporto, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiTrasporto>.WhenAsync(Func<DatiTrasporto, ValidationContext<DatiTrasporto>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiTrasporto>.UnlessAsync(Func<DatiTrasporto, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiTrasporto>.UnlessAsync(Func<DatiTrasporto, ValidationContext<DatiTrasporto>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiTrasporto>.Include(IValidator<DatiTrasporto>) AbstractValidator<DatiTrasporto>.Include<TValidator>(Func<DatiTrasporto, TValidator>) AbstractValidator<DatiTrasporto>.GetEnumerator() AbstractValidator<DatiTrasporto>.EnsureInstanceNotNull(object) AbstractValidator<DatiTrasporto>.PreValidate(ValidationContext<DatiTrasporto>, ValidationResult) AbstractValidator<DatiTrasporto>.RaiseValidationException(ValidationContext<DatiTrasporto>, ValidationResult) AbstractValidator<DatiTrasporto>.CascadeMode AbstractValidator<DatiTrasporto>.ClassLevelCascadeMode AbstractValidator<DatiTrasporto>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiTrasportoValidator() public DatiTrasportoValidator()"
  },
  "api/FatturaElettronica.Validators.DatiVeicoliValidator.html": {
    "href": "api/FatturaElettronica.Validators.DatiVeicoliValidator.html",
    "title": "Class DatiVeicoliValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiVeicoliValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DatiVeicoliValidator : AbstractValidator<DatiVeicoli>, IValidator<DatiVeicoli>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiVeicoli> DatiVeicoliValidator Implements IValidator<DatiVeicoli> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiVeicoli>.Validate(DatiVeicoli) AbstractValidator<DatiVeicoli>.ValidateAsync(DatiVeicoli, CancellationToken) AbstractValidator<DatiVeicoli>.Validate(ValidationContext<DatiVeicoli>) AbstractValidator<DatiVeicoli>.ValidateAsync(ValidationContext<DatiVeicoli>, CancellationToken) AbstractValidator<DatiVeicoli>.CreateDescriptor() AbstractValidator<DatiVeicoli>.RuleFor<TProperty>(Expression<Func<DatiVeicoli, TProperty>>) AbstractValidator<DatiVeicoli>.Transform<TProperty, TTransformed>(Expression<Func<DatiVeicoli, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiVeicoli>.Transform<TProperty, TTransformed>(Expression<Func<DatiVeicoli, TProperty>>, Func<DatiVeicoli, TProperty, TTransformed>) AbstractValidator<DatiVeicoli>.RuleForEach<TElement>(Expression<Func<DatiVeicoli, IEnumerable<TElement>>>) AbstractValidator<DatiVeicoli>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiVeicoli, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiVeicoli>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiVeicoli, IEnumerable<TElement>>>, Func<DatiVeicoli, TElement, TTransformed>) AbstractValidator<DatiVeicoli>.RuleSet(string, Action) AbstractValidator<DatiVeicoli>.When(Func<DatiVeicoli, bool>, Action) AbstractValidator<DatiVeicoli>.When(Func<DatiVeicoli, ValidationContext<DatiVeicoli>, bool>, Action) AbstractValidator<DatiVeicoli>.Unless(Func<DatiVeicoli, bool>, Action) AbstractValidator<DatiVeicoli>.Unless(Func<DatiVeicoli, ValidationContext<DatiVeicoli>, bool>, Action) AbstractValidator<DatiVeicoli>.WhenAsync(Func<DatiVeicoli, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiVeicoli>.WhenAsync(Func<DatiVeicoli, ValidationContext<DatiVeicoli>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiVeicoli>.UnlessAsync(Func<DatiVeicoli, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiVeicoli>.UnlessAsync(Func<DatiVeicoli, ValidationContext<DatiVeicoli>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiVeicoli>.Include(IValidator<DatiVeicoli>) AbstractValidator<DatiVeicoli>.Include<TValidator>(Func<DatiVeicoli, TValidator>) AbstractValidator<DatiVeicoli>.GetEnumerator() AbstractValidator<DatiVeicoli>.EnsureInstanceNotNull(object) AbstractValidator<DatiVeicoli>.PreValidate(ValidationContext<DatiVeicoli>, ValidationResult) AbstractValidator<DatiVeicoli>.RaiseValidationException(ValidationContext<DatiVeicoli>, ValidationResult) AbstractValidator<DatiVeicoli>.CascadeMode AbstractValidator<DatiVeicoli>.ClassLevelCascadeMode AbstractValidator<DatiVeicoli>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiVeicoliValidator() public DatiVeicoliValidator()"
  },
  "api/FatturaElettronica.Validators.DenominazioneNomeCognomeValidator-1.html": {
    "href": "api/FatturaElettronica.Validators.DenominazioneNomeCognomeValidator-1.html",
    "title": "Class DenominazioneNomeCognomeValidator<T> | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DenominazioneNomeCognomeValidator<T> Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public abstract class DenominazioneNomeCognomeValidator<T> : AbstractValidator<T>, IValidator<T>, IValidator, IEnumerable<IValidationRule>, IEnumerable where T : DenominazioneNomeCognome Type Parameters T Inheritance object AbstractValidator<T> DenominazioneNomeCognomeValidator<T> Implements IValidator<T> IValidator IEnumerable<IValidationRule> IEnumerable Derived AnagraficaValidator RappresentanteFiscaleCessionarioCommittenteValidator Inherited Members AbstractValidator<T>.Validate(T) AbstractValidator<T>.ValidateAsync(T, CancellationToken) AbstractValidator<T>.Validate(ValidationContext<T>) AbstractValidator<T>.ValidateAsync(ValidationContext<T>, CancellationToken) AbstractValidator<T>.CreateDescriptor() AbstractValidator<T>.RuleFor<TProperty>(Expression<Func<T, TProperty>>) AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<T, TProperty, TTransformed>) AbstractValidator<T>.RuleForEach<TElement>(Expression<Func<T, IEnumerable<TElement>>>) AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<T, TElement, TTransformed>) AbstractValidator<T>.RuleSet(string, Action) AbstractValidator<T>.When(Func<T, bool>, Action) AbstractValidator<T>.When(Func<T, ValidationContext<T>, bool>, Action) AbstractValidator<T>.Unless(Func<T, bool>, Action) AbstractValidator<T>.Unless(Func<T, ValidationContext<T>, bool>, Action) AbstractValidator<T>.WhenAsync(Func<T, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.WhenAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.UnlessAsync(Func<T, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.UnlessAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.Include(IValidator<T>) AbstractValidator<T>.Include<TValidator>(Func<T, TValidator>) AbstractValidator<T>.GetEnumerator() AbstractValidator<T>.EnsureInstanceNotNull(object) AbstractValidator<T>.PreValidate(ValidationContext<T>, ValidationResult) AbstractValidator<T>.RaiseValidationException(ValidationContext<T>, ValidationResult) AbstractValidator<T>.CascadeMode AbstractValidator<T>.ClassLevelCascadeMode AbstractValidator<T>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DenominazioneNomeCognomeValidator() protected DenominazioneNomeCognomeValidator()"
  },
  "api/FatturaElettronica.Validators.DettaglioLineeValidator.html": {
    "href": "api/FatturaElettronica.Validators.DettaglioLineeValidator.html",
    "title": "Class DettaglioLineeValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DettaglioLineeValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DettaglioLineeValidator : AbstractValidator<DettaglioLinee>, IValidator<DettaglioLinee>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DettaglioLinee> DettaglioLineeValidator Implements IValidator<DettaglioLinee> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DettaglioLinee>.Validate(DettaglioLinee) AbstractValidator<DettaglioLinee>.ValidateAsync(DettaglioLinee, CancellationToken) AbstractValidator<DettaglioLinee>.Validate(ValidationContext<DettaglioLinee>) AbstractValidator<DettaglioLinee>.ValidateAsync(ValidationContext<DettaglioLinee>, CancellationToken) AbstractValidator<DettaglioLinee>.CreateDescriptor() AbstractValidator<DettaglioLinee>.RuleFor<TProperty>(Expression<Func<DettaglioLinee, TProperty>>) AbstractValidator<DettaglioLinee>.Transform<TProperty, TTransformed>(Expression<Func<DettaglioLinee, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DettaglioLinee>.Transform<TProperty, TTransformed>(Expression<Func<DettaglioLinee, TProperty>>, Func<DettaglioLinee, TProperty, TTransformed>) AbstractValidator<DettaglioLinee>.RuleForEach<TElement>(Expression<Func<DettaglioLinee, IEnumerable<TElement>>>) AbstractValidator<DettaglioLinee>.TransformForEach<TElement, TTransformed>(Expression<Func<DettaglioLinee, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DettaglioLinee>.TransformForEach<TElement, TTransformed>(Expression<Func<DettaglioLinee, IEnumerable<TElement>>>, Func<DettaglioLinee, TElement, TTransformed>) AbstractValidator<DettaglioLinee>.RuleSet(string, Action) AbstractValidator<DettaglioLinee>.When(Func<DettaglioLinee, bool>, Action) AbstractValidator<DettaglioLinee>.When(Func<DettaglioLinee, ValidationContext<DettaglioLinee>, bool>, Action) AbstractValidator<DettaglioLinee>.Unless(Func<DettaglioLinee, bool>, Action) AbstractValidator<DettaglioLinee>.Unless(Func<DettaglioLinee, ValidationContext<DettaglioLinee>, bool>, Action) AbstractValidator<DettaglioLinee>.WhenAsync(Func<DettaglioLinee, CancellationToken, Task<bool>>, Action) AbstractValidator<DettaglioLinee>.WhenAsync(Func<DettaglioLinee, ValidationContext<DettaglioLinee>, CancellationToken, Task<bool>>, Action) AbstractValidator<DettaglioLinee>.UnlessAsync(Func<DettaglioLinee, CancellationToken, Task<bool>>, Action) AbstractValidator<DettaglioLinee>.UnlessAsync(Func<DettaglioLinee, ValidationContext<DettaglioLinee>, CancellationToken, Task<bool>>, Action) AbstractValidator<DettaglioLinee>.Include(IValidator<DettaglioLinee>) AbstractValidator<DettaglioLinee>.Include<TValidator>(Func<DettaglioLinee, TValidator>) AbstractValidator<DettaglioLinee>.GetEnumerator() AbstractValidator<DettaglioLinee>.EnsureInstanceNotNull(object) AbstractValidator<DettaglioLinee>.PreValidate(ValidationContext<DettaglioLinee>, ValidationResult) AbstractValidator<DettaglioLinee>.RaiseValidationException(ValidationContext<DettaglioLinee>, ValidationResult) AbstractValidator<DettaglioLinee>.CascadeMode AbstractValidator<DettaglioLinee>.ClassLevelCascadeMode AbstractValidator<DettaglioLinee>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DettaglioLineeValidator() public DettaglioLineeValidator()"
  },
  "api/FatturaElettronica.Validators.DettaglioPagamentoValidator.html": {
    "href": "api/FatturaElettronica.Validators.DettaglioPagamentoValidator.html",
    "title": "Class DettaglioPagamentoValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DettaglioPagamentoValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class DettaglioPagamentoValidator : AbstractValidator<DettaglioPagamento>, IValidator<DettaglioPagamento>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DettaglioPagamento> DettaglioPagamentoValidator Implements IValidator<DettaglioPagamento> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DettaglioPagamento>.Validate(DettaglioPagamento) AbstractValidator<DettaglioPagamento>.ValidateAsync(DettaglioPagamento, CancellationToken) AbstractValidator<DettaglioPagamento>.Validate(ValidationContext<DettaglioPagamento>) AbstractValidator<DettaglioPagamento>.ValidateAsync(ValidationContext<DettaglioPagamento>, CancellationToken) AbstractValidator<DettaglioPagamento>.CreateDescriptor() AbstractValidator<DettaglioPagamento>.RuleFor<TProperty>(Expression<Func<DettaglioPagamento, TProperty>>) AbstractValidator<DettaglioPagamento>.Transform<TProperty, TTransformed>(Expression<Func<DettaglioPagamento, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DettaglioPagamento>.Transform<TProperty, TTransformed>(Expression<Func<DettaglioPagamento, TProperty>>, Func<DettaglioPagamento, TProperty, TTransformed>) AbstractValidator<DettaglioPagamento>.RuleForEach<TElement>(Expression<Func<DettaglioPagamento, IEnumerable<TElement>>>) AbstractValidator<DettaglioPagamento>.TransformForEach<TElement, TTransformed>(Expression<Func<DettaglioPagamento, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DettaglioPagamento>.TransformForEach<TElement, TTransformed>(Expression<Func<DettaglioPagamento, IEnumerable<TElement>>>, Func<DettaglioPagamento, TElement, TTransformed>) AbstractValidator<DettaglioPagamento>.RuleSet(string, Action) AbstractValidator<DettaglioPagamento>.When(Func<DettaglioPagamento, bool>, Action) AbstractValidator<DettaglioPagamento>.When(Func<DettaglioPagamento, ValidationContext<DettaglioPagamento>, bool>, Action) AbstractValidator<DettaglioPagamento>.Unless(Func<DettaglioPagamento, bool>, Action) AbstractValidator<DettaglioPagamento>.Unless(Func<DettaglioPagamento, ValidationContext<DettaglioPagamento>, bool>, Action) AbstractValidator<DettaglioPagamento>.WhenAsync(Func<DettaglioPagamento, CancellationToken, Task<bool>>, Action) AbstractValidator<DettaglioPagamento>.WhenAsync(Func<DettaglioPagamento, ValidationContext<DettaglioPagamento>, CancellationToken, Task<bool>>, Action) AbstractValidator<DettaglioPagamento>.UnlessAsync(Func<DettaglioPagamento, CancellationToken, Task<bool>>, Action) AbstractValidator<DettaglioPagamento>.UnlessAsync(Func<DettaglioPagamento, ValidationContext<DettaglioPagamento>, CancellationToken, Task<bool>>, Action) AbstractValidator<DettaglioPagamento>.Include(IValidator<DettaglioPagamento>) AbstractValidator<DettaglioPagamento>.Include<TValidator>(Func<DettaglioPagamento, TValidator>) AbstractValidator<DettaglioPagamento>.GetEnumerator() AbstractValidator<DettaglioPagamento>.EnsureInstanceNotNull(object) AbstractValidator<DettaglioPagamento>.PreValidate(ValidationContext<DettaglioPagamento>, ValidationResult) AbstractValidator<DettaglioPagamento>.RaiseValidationException(ValidationContext<DettaglioPagamento>, ValidationResult) AbstractValidator<DettaglioPagamento>.CascadeMode AbstractValidator<DettaglioPagamento>.ClassLevelCascadeMode AbstractValidator<DettaglioPagamento>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DettaglioPagamentoValidator() public DettaglioPagamentoValidator()"
  },
  "api/FatturaElettronica.Validators.FatturaElettronicaBodyValidator.html": {
    "href": "api/FatturaElettronica.Validators.FatturaElettronicaBodyValidator.html",
    "title": "Class FatturaElettronicaBodyValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class FatturaElettronicaBodyValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class FatturaElettronicaBodyValidator : AbstractValidator<FatturaElettronicaBody>, IValidator<FatturaElettronicaBody>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<FatturaElettronicaBody> FatturaElettronicaBodyValidator Implements IValidator<FatturaElettronicaBody> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<FatturaElettronicaBody>.Validate(FatturaElettronicaBody) AbstractValidator<FatturaElettronicaBody>.ValidateAsync(FatturaElettronicaBody, CancellationToken) AbstractValidator<FatturaElettronicaBody>.Validate(ValidationContext<FatturaElettronicaBody>) AbstractValidator<FatturaElettronicaBody>.ValidateAsync(ValidationContext<FatturaElettronicaBody>, CancellationToken) AbstractValidator<FatturaElettronicaBody>.CreateDescriptor() AbstractValidator<FatturaElettronicaBody>.RuleFor<TProperty>(Expression<Func<FatturaElettronicaBody, TProperty>>) AbstractValidator<FatturaElettronicaBody>.Transform<TProperty, TTransformed>(Expression<Func<FatturaElettronicaBody, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<FatturaElettronicaBody>.Transform<TProperty, TTransformed>(Expression<Func<FatturaElettronicaBody, TProperty>>, Func<FatturaElettronicaBody, TProperty, TTransformed>) AbstractValidator<FatturaElettronicaBody>.RuleForEach<TElement>(Expression<Func<FatturaElettronicaBody, IEnumerable<TElement>>>) AbstractValidator<FatturaElettronicaBody>.TransformForEach<TElement, TTransformed>(Expression<Func<FatturaElettronicaBody, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<FatturaElettronicaBody>.TransformForEach<TElement, TTransformed>(Expression<Func<FatturaElettronicaBody, IEnumerable<TElement>>>, Func<FatturaElettronicaBody, TElement, TTransformed>) AbstractValidator<FatturaElettronicaBody>.RuleSet(string, Action) AbstractValidator<FatturaElettronicaBody>.When(Func<FatturaElettronicaBody, bool>, Action) AbstractValidator<FatturaElettronicaBody>.When(Func<FatturaElettronicaBody, ValidationContext<FatturaElettronicaBody>, bool>, Action) AbstractValidator<FatturaElettronicaBody>.Unless(Func<FatturaElettronicaBody, bool>, Action) AbstractValidator<FatturaElettronicaBody>.Unless(Func<FatturaElettronicaBody, ValidationContext<FatturaElettronicaBody>, bool>, Action) AbstractValidator<FatturaElettronicaBody>.WhenAsync(Func<FatturaElettronicaBody, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaElettronicaBody>.WhenAsync(Func<FatturaElettronicaBody, ValidationContext<FatturaElettronicaBody>, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaElettronicaBody>.UnlessAsync(Func<FatturaElettronicaBody, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaElettronicaBody>.UnlessAsync(Func<FatturaElettronicaBody, ValidationContext<FatturaElettronicaBody>, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaElettronicaBody>.Include(IValidator<FatturaElettronicaBody>) AbstractValidator<FatturaElettronicaBody>.Include<TValidator>(Func<FatturaElettronicaBody, TValidator>) AbstractValidator<FatturaElettronicaBody>.GetEnumerator() AbstractValidator<FatturaElettronicaBody>.EnsureInstanceNotNull(object) AbstractValidator<FatturaElettronicaBody>.PreValidate(ValidationContext<FatturaElettronicaBody>, ValidationResult) AbstractValidator<FatturaElettronicaBody>.RaiseValidationException(ValidationContext<FatturaElettronicaBody>, ValidationResult) AbstractValidator<FatturaElettronicaBody>.CascadeMode AbstractValidator<FatturaElettronicaBody>.ClassLevelCascadeMode AbstractValidator<FatturaElettronicaBody>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FatturaElettronicaBodyValidator() public FatturaElettronicaBodyValidator()"
  },
  "api/FatturaElettronica.Validators.FatturaElettronicaHeaderValidator.html": {
    "href": "api/FatturaElettronica.Validators.FatturaElettronicaHeaderValidator.html",
    "title": "Class FatturaElettronicaHeaderValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class FatturaElettronicaHeaderValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class FatturaElettronicaHeaderValidator : AbstractValidator<FatturaElettronicaHeader>, IValidator<FatturaElettronicaHeader>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<FatturaElettronicaHeader> FatturaElettronicaHeaderValidator Implements IValidator<FatturaElettronicaHeader> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<FatturaElettronicaHeader>.Validate(FatturaElettronicaHeader) AbstractValidator<FatturaElettronicaHeader>.ValidateAsync(FatturaElettronicaHeader, CancellationToken) AbstractValidator<FatturaElettronicaHeader>.Validate(ValidationContext<FatturaElettronicaHeader>) AbstractValidator<FatturaElettronicaHeader>.ValidateAsync(ValidationContext<FatturaElettronicaHeader>, CancellationToken) AbstractValidator<FatturaElettronicaHeader>.CreateDescriptor() AbstractValidator<FatturaElettronicaHeader>.RuleFor<TProperty>(Expression<Func<FatturaElettronicaHeader, TProperty>>) AbstractValidator<FatturaElettronicaHeader>.Transform<TProperty, TTransformed>(Expression<Func<FatturaElettronicaHeader, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<FatturaElettronicaHeader>.Transform<TProperty, TTransformed>(Expression<Func<FatturaElettronicaHeader, TProperty>>, Func<FatturaElettronicaHeader, TProperty, TTransformed>) AbstractValidator<FatturaElettronicaHeader>.RuleForEach<TElement>(Expression<Func<FatturaElettronicaHeader, IEnumerable<TElement>>>) AbstractValidator<FatturaElettronicaHeader>.TransformForEach<TElement, TTransformed>(Expression<Func<FatturaElettronicaHeader, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<FatturaElettronicaHeader>.TransformForEach<TElement, TTransformed>(Expression<Func<FatturaElettronicaHeader, IEnumerable<TElement>>>, Func<FatturaElettronicaHeader, TElement, TTransformed>) AbstractValidator<FatturaElettronicaHeader>.RuleSet(string, Action) AbstractValidator<FatturaElettronicaHeader>.When(Func<FatturaElettronicaHeader, bool>, Action) AbstractValidator<FatturaElettronicaHeader>.When(Func<FatturaElettronicaHeader, ValidationContext<FatturaElettronicaHeader>, bool>, Action) AbstractValidator<FatturaElettronicaHeader>.Unless(Func<FatturaElettronicaHeader, bool>, Action) AbstractValidator<FatturaElettronicaHeader>.Unless(Func<FatturaElettronicaHeader, ValidationContext<FatturaElettronicaHeader>, bool>, Action) AbstractValidator<FatturaElettronicaHeader>.WhenAsync(Func<FatturaElettronicaHeader, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaElettronicaHeader>.WhenAsync(Func<FatturaElettronicaHeader, ValidationContext<FatturaElettronicaHeader>, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaElettronicaHeader>.UnlessAsync(Func<FatturaElettronicaHeader, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaElettronicaHeader>.UnlessAsync(Func<FatturaElettronicaHeader, ValidationContext<FatturaElettronicaHeader>, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaElettronicaHeader>.Include(IValidator<FatturaElettronicaHeader>) AbstractValidator<FatturaElettronicaHeader>.Include<TValidator>(Func<FatturaElettronicaHeader, TValidator>) AbstractValidator<FatturaElettronicaHeader>.GetEnumerator() AbstractValidator<FatturaElettronicaHeader>.EnsureInstanceNotNull(object) AbstractValidator<FatturaElettronicaHeader>.PreValidate(ValidationContext<FatturaElettronicaHeader>, ValidationResult) AbstractValidator<FatturaElettronicaHeader>.RaiseValidationException(ValidationContext<FatturaElettronicaHeader>, ValidationResult) AbstractValidator<FatturaElettronicaHeader>.CascadeMode AbstractValidator<FatturaElettronicaHeader>.ClassLevelCascadeMode AbstractValidator<FatturaElettronicaHeader>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FatturaElettronicaHeaderValidator() public FatturaElettronicaHeaderValidator()"
  },
  "api/FatturaElettronica.Validators.FatturaOrdinariaValidator.html": {
    "href": "api/FatturaElettronica.Validators.FatturaOrdinariaValidator.html",
    "title": "Class FatturaOrdinariaValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class FatturaOrdinariaValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class FatturaOrdinariaValidator : AbstractValidator<FatturaOrdinaria>, IValidator<FatturaOrdinaria>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<FatturaOrdinaria> FatturaOrdinariaValidator Implements IValidator<FatturaOrdinaria> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<FatturaOrdinaria>.Validate(FatturaOrdinaria) AbstractValidator<FatturaOrdinaria>.ValidateAsync(FatturaOrdinaria, CancellationToken) AbstractValidator<FatturaOrdinaria>.Validate(ValidationContext<FatturaOrdinaria>) AbstractValidator<FatturaOrdinaria>.ValidateAsync(ValidationContext<FatturaOrdinaria>, CancellationToken) AbstractValidator<FatturaOrdinaria>.CreateDescriptor() AbstractValidator<FatturaOrdinaria>.RuleFor<TProperty>(Expression<Func<FatturaOrdinaria, TProperty>>) AbstractValidator<FatturaOrdinaria>.Transform<TProperty, TTransformed>(Expression<Func<FatturaOrdinaria, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<FatturaOrdinaria>.Transform<TProperty, TTransformed>(Expression<Func<FatturaOrdinaria, TProperty>>, Func<FatturaOrdinaria, TProperty, TTransformed>) AbstractValidator<FatturaOrdinaria>.RuleForEach<TElement>(Expression<Func<FatturaOrdinaria, IEnumerable<TElement>>>) AbstractValidator<FatturaOrdinaria>.TransformForEach<TElement, TTransformed>(Expression<Func<FatturaOrdinaria, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<FatturaOrdinaria>.TransformForEach<TElement, TTransformed>(Expression<Func<FatturaOrdinaria, IEnumerable<TElement>>>, Func<FatturaOrdinaria, TElement, TTransformed>) AbstractValidator<FatturaOrdinaria>.RuleSet(string, Action) AbstractValidator<FatturaOrdinaria>.When(Func<FatturaOrdinaria, bool>, Action) AbstractValidator<FatturaOrdinaria>.When(Func<FatturaOrdinaria, ValidationContext<FatturaOrdinaria>, bool>, Action) AbstractValidator<FatturaOrdinaria>.Unless(Func<FatturaOrdinaria, bool>, Action) AbstractValidator<FatturaOrdinaria>.Unless(Func<FatturaOrdinaria, ValidationContext<FatturaOrdinaria>, bool>, Action) AbstractValidator<FatturaOrdinaria>.WhenAsync(Func<FatturaOrdinaria, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaOrdinaria>.WhenAsync(Func<FatturaOrdinaria, ValidationContext<FatturaOrdinaria>, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaOrdinaria>.UnlessAsync(Func<FatturaOrdinaria, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaOrdinaria>.UnlessAsync(Func<FatturaOrdinaria, ValidationContext<FatturaOrdinaria>, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaOrdinaria>.Include(IValidator<FatturaOrdinaria>) AbstractValidator<FatturaOrdinaria>.Include<TValidator>(Func<FatturaOrdinaria, TValidator>) AbstractValidator<FatturaOrdinaria>.GetEnumerator() AbstractValidator<FatturaOrdinaria>.EnsureInstanceNotNull(object) AbstractValidator<FatturaOrdinaria>.PreValidate(ValidationContext<FatturaOrdinaria>, ValidationResult) AbstractValidator<FatturaOrdinaria>.RaiseValidationException(ValidationContext<FatturaOrdinaria>, ValidationResult) AbstractValidator<FatturaOrdinaria>.CascadeMode AbstractValidator<FatturaOrdinaria>.ClassLevelCascadeMode AbstractValidator<FatturaOrdinaria>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FatturaOrdinariaValidator() public FatturaOrdinariaValidator()"
  },
  "api/FatturaElettronica.Validators.FatturaPrincipaleValidator.html": {
    "href": "api/FatturaElettronica.Validators.FatturaPrincipaleValidator.html",
    "title": "Class FatturaPrincipaleValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class FatturaPrincipaleValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class FatturaPrincipaleValidator : AbstractValidator<FatturaPrincipale>, IValidator<FatturaPrincipale>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<FatturaPrincipale> FatturaPrincipaleValidator Implements IValidator<FatturaPrincipale> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<FatturaPrincipale>.Validate(FatturaPrincipale) AbstractValidator<FatturaPrincipale>.ValidateAsync(FatturaPrincipale, CancellationToken) AbstractValidator<FatturaPrincipale>.Validate(ValidationContext<FatturaPrincipale>) AbstractValidator<FatturaPrincipale>.ValidateAsync(ValidationContext<FatturaPrincipale>, CancellationToken) AbstractValidator<FatturaPrincipale>.CreateDescriptor() AbstractValidator<FatturaPrincipale>.RuleFor<TProperty>(Expression<Func<FatturaPrincipale, TProperty>>) AbstractValidator<FatturaPrincipale>.Transform<TProperty, TTransformed>(Expression<Func<FatturaPrincipale, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<FatturaPrincipale>.Transform<TProperty, TTransformed>(Expression<Func<FatturaPrincipale, TProperty>>, Func<FatturaPrincipale, TProperty, TTransformed>) AbstractValidator<FatturaPrincipale>.RuleForEach<TElement>(Expression<Func<FatturaPrincipale, IEnumerable<TElement>>>) AbstractValidator<FatturaPrincipale>.TransformForEach<TElement, TTransformed>(Expression<Func<FatturaPrincipale, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<FatturaPrincipale>.TransformForEach<TElement, TTransformed>(Expression<Func<FatturaPrincipale, IEnumerable<TElement>>>, Func<FatturaPrincipale, TElement, TTransformed>) AbstractValidator<FatturaPrincipale>.RuleSet(string, Action) AbstractValidator<FatturaPrincipale>.When(Func<FatturaPrincipale, bool>, Action) AbstractValidator<FatturaPrincipale>.When(Func<FatturaPrincipale, ValidationContext<FatturaPrincipale>, bool>, Action) AbstractValidator<FatturaPrincipale>.Unless(Func<FatturaPrincipale, bool>, Action) AbstractValidator<FatturaPrincipale>.Unless(Func<FatturaPrincipale, ValidationContext<FatturaPrincipale>, bool>, Action) AbstractValidator<FatturaPrincipale>.WhenAsync(Func<FatturaPrincipale, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaPrincipale>.WhenAsync(Func<FatturaPrincipale, ValidationContext<FatturaPrincipale>, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaPrincipale>.UnlessAsync(Func<FatturaPrincipale, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaPrincipale>.UnlessAsync(Func<FatturaPrincipale, ValidationContext<FatturaPrincipale>, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaPrincipale>.Include(IValidator<FatturaPrincipale>) AbstractValidator<FatturaPrincipale>.Include<TValidator>(Func<FatturaPrincipale, TValidator>) AbstractValidator<FatturaPrincipale>.GetEnumerator() AbstractValidator<FatturaPrincipale>.EnsureInstanceNotNull(object) AbstractValidator<FatturaPrincipale>.PreValidate(ValidationContext<FatturaPrincipale>, ValidationResult) AbstractValidator<FatturaPrincipale>.RaiseValidationException(ValidationContext<FatturaPrincipale>, ValidationResult) AbstractValidator<FatturaPrincipale>.CascadeMode AbstractValidator<FatturaPrincipale>.ClassLevelCascadeMode AbstractValidator<FatturaPrincipale>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FatturaPrincipaleValidator() public FatturaPrincipaleValidator()"
  },
  "api/FatturaElettronica.Validators.html": {
    "href": "api/FatturaElettronica.Validators.html",
    "title": "Namespace FatturaElettronica.Validators | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Validators Classes AllegatiValidator AltriDatiGestionaliValidator AnagraficaValidator BasicLatinValidator<T, TProperty> CausaleValidator CedentePrestatoreValidator CessionarioCommittenteValidator CodiceArticoloValidator ContattiTrasmittenteValidator ContattiValidator DatiAnagraficiCedentePrestatoreValidator DatiAnagraficiCessionarioCommittenteValidator DatiAnagraficiRappresentanteFiscaleValidator DatiAnagraficiTerzoIntermediarioValidator DatiAnagraficiVettoreValidator DatiBeniServiziValidator DatiBolloValidator DatiCassaPrevidenzialeValidator DatiContrattoValidator DatiConvenzioneValidator DatiDDTValidator DatiDocumentoValidator DatiFattureCollegateValidator DatiGeneraliDocumentoValidator DatiGeneraliValidator DatiOrdineAcquistoValidator DatiPagamentoValidator DatiRicezioneValidator DatiRiepilogoValidator DatiRitenutaValidator DatiTrasmissioneValidator DatiTrasportoValidator DatiVeicoliValidator DenominazioneNomeCognomeValidator<T> DettaglioLineeValidator DettaglioPagamentoValidator FatturaElettronicaBodyValidator FatturaElettronicaHeaderValidator FatturaOrdinariaValidator FatturaPrincipaleValidator IdFiscaleIVAValidator IdTrasmittenteValidator IndirizzoResaValidator IsValidValidator<T, TProperty, TTabella> IscrizioneREAValidator Latin1SupplementValidator<T, TProperty> LatinBaseValidator<T, TProperty> LocalitàBaseValidator<T> MyValidatorExtensions RappresentanteFiscaleCessionarioCommittenteValidator RappresentanteFiscaleValidator ScontoMaggiorazioneValidator SedeCedentePrestatoreValidator SedeCessionarioCommittenteValidator StabileOrganizzazioneValidator TerzoIntermediarioOSoggettoEmittenteValidator Enums Charsets"
  },
  "api/FatturaElettronica.Validators.IdFiscaleIVAValidator.html": {
    "href": "api/FatturaElettronica.Validators.IdFiscaleIVAValidator.html",
    "title": "Class IdFiscaleIVAValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class IdFiscaleIVAValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class IdFiscaleIVAValidator : AbstractValidator<IdFiscaleIVA>, IValidator<IdFiscaleIVA>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<IdFiscaleIVA> IdFiscaleIVAValidator Implements IValidator<IdFiscaleIVA> IValidator IEnumerable<IValidationRule> IEnumerable Derived IdTrasmittenteValidator Inherited Members AbstractValidator<IdFiscaleIVA>.Validate(IdFiscaleIVA) AbstractValidator<IdFiscaleIVA>.ValidateAsync(IdFiscaleIVA, CancellationToken) AbstractValidator<IdFiscaleIVA>.Validate(ValidationContext<IdFiscaleIVA>) AbstractValidator<IdFiscaleIVA>.ValidateAsync(ValidationContext<IdFiscaleIVA>, CancellationToken) AbstractValidator<IdFiscaleIVA>.CreateDescriptor() AbstractValidator<IdFiscaleIVA>.RuleFor<TProperty>(Expression<Func<IdFiscaleIVA, TProperty>>) AbstractValidator<IdFiscaleIVA>.Transform<TProperty, TTransformed>(Expression<Func<IdFiscaleIVA, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<IdFiscaleIVA>.Transform<TProperty, TTransformed>(Expression<Func<IdFiscaleIVA, TProperty>>, Func<IdFiscaleIVA, TProperty, TTransformed>) AbstractValidator<IdFiscaleIVA>.RuleForEach<TElement>(Expression<Func<IdFiscaleIVA, IEnumerable<TElement>>>) AbstractValidator<IdFiscaleIVA>.TransformForEach<TElement, TTransformed>(Expression<Func<IdFiscaleIVA, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<IdFiscaleIVA>.TransformForEach<TElement, TTransformed>(Expression<Func<IdFiscaleIVA, IEnumerable<TElement>>>, Func<IdFiscaleIVA, TElement, TTransformed>) AbstractValidator<IdFiscaleIVA>.RuleSet(string, Action) AbstractValidator<IdFiscaleIVA>.When(Func<IdFiscaleIVA, bool>, Action) AbstractValidator<IdFiscaleIVA>.When(Func<IdFiscaleIVA, ValidationContext<IdFiscaleIVA>, bool>, Action) AbstractValidator<IdFiscaleIVA>.Unless(Func<IdFiscaleIVA, bool>, Action) AbstractValidator<IdFiscaleIVA>.Unless(Func<IdFiscaleIVA, ValidationContext<IdFiscaleIVA>, bool>, Action) AbstractValidator<IdFiscaleIVA>.WhenAsync(Func<IdFiscaleIVA, CancellationToken, Task<bool>>, Action) AbstractValidator<IdFiscaleIVA>.WhenAsync(Func<IdFiscaleIVA, ValidationContext<IdFiscaleIVA>, CancellationToken, Task<bool>>, Action) AbstractValidator<IdFiscaleIVA>.UnlessAsync(Func<IdFiscaleIVA, CancellationToken, Task<bool>>, Action) AbstractValidator<IdFiscaleIVA>.UnlessAsync(Func<IdFiscaleIVA, ValidationContext<IdFiscaleIVA>, CancellationToken, Task<bool>>, Action) AbstractValidator<IdFiscaleIVA>.Include(IValidator<IdFiscaleIVA>) AbstractValidator<IdFiscaleIVA>.Include<TValidator>(Func<IdFiscaleIVA, TValidator>) AbstractValidator<IdFiscaleIVA>.GetEnumerator() AbstractValidator<IdFiscaleIVA>.EnsureInstanceNotNull(object) AbstractValidator<IdFiscaleIVA>.PreValidate(ValidationContext<IdFiscaleIVA>, ValidationResult) AbstractValidator<IdFiscaleIVA>.RaiseValidationException(ValidationContext<IdFiscaleIVA>, ValidationResult) AbstractValidator<IdFiscaleIVA>.CascadeMode AbstractValidator<IdFiscaleIVA>.ClassLevelCascadeMode AbstractValidator<IdFiscaleIVA>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors IdFiscaleIVAValidator() public IdFiscaleIVAValidator()"
  },
  "api/FatturaElettronica.Validators.IdTrasmittenteValidator.html": {
    "href": "api/FatturaElettronica.Validators.IdTrasmittenteValidator.html",
    "title": "Class IdTrasmittenteValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class IdTrasmittenteValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class IdTrasmittenteValidator : IdFiscaleIVAValidator, IValidator<IdFiscaleIVA>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<IdFiscaleIVA> IdFiscaleIVAValidator IdTrasmittenteValidator Implements IValidator<IdFiscaleIVA> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<IdFiscaleIVA>.Validate(IdFiscaleIVA) AbstractValidator<IdFiscaleIVA>.ValidateAsync(IdFiscaleIVA, CancellationToken) AbstractValidator<IdFiscaleIVA>.Validate(ValidationContext<IdFiscaleIVA>) AbstractValidator<IdFiscaleIVA>.ValidateAsync(ValidationContext<IdFiscaleIVA>, CancellationToken) AbstractValidator<IdFiscaleIVA>.CreateDescriptor() AbstractValidator<IdFiscaleIVA>.RuleFor<TProperty>(Expression<Func<IdFiscaleIVA, TProperty>>) AbstractValidator<IdFiscaleIVA>.Transform<TProperty, TTransformed>(Expression<Func<IdFiscaleIVA, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<IdFiscaleIVA>.Transform<TProperty, TTransformed>(Expression<Func<IdFiscaleIVA, TProperty>>, Func<IdFiscaleIVA, TProperty, TTransformed>) AbstractValidator<IdFiscaleIVA>.RuleForEach<TElement>(Expression<Func<IdFiscaleIVA, IEnumerable<TElement>>>) AbstractValidator<IdFiscaleIVA>.TransformForEach<TElement, TTransformed>(Expression<Func<IdFiscaleIVA, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<IdFiscaleIVA>.TransformForEach<TElement, TTransformed>(Expression<Func<IdFiscaleIVA, IEnumerable<TElement>>>, Func<IdFiscaleIVA, TElement, TTransformed>) AbstractValidator<IdFiscaleIVA>.RuleSet(string, Action) AbstractValidator<IdFiscaleIVA>.When(Func<IdFiscaleIVA, bool>, Action) AbstractValidator<IdFiscaleIVA>.When(Func<IdFiscaleIVA, ValidationContext<IdFiscaleIVA>, bool>, Action) AbstractValidator<IdFiscaleIVA>.Unless(Func<IdFiscaleIVA, bool>, Action) AbstractValidator<IdFiscaleIVA>.Unless(Func<IdFiscaleIVA, ValidationContext<IdFiscaleIVA>, bool>, Action) AbstractValidator<IdFiscaleIVA>.WhenAsync(Func<IdFiscaleIVA, CancellationToken, Task<bool>>, Action) AbstractValidator<IdFiscaleIVA>.WhenAsync(Func<IdFiscaleIVA, ValidationContext<IdFiscaleIVA>, CancellationToken, Task<bool>>, Action) AbstractValidator<IdFiscaleIVA>.UnlessAsync(Func<IdFiscaleIVA, CancellationToken, Task<bool>>, Action) AbstractValidator<IdFiscaleIVA>.UnlessAsync(Func<IdFiscaleIVA, ValidationContext<IdFiscaleIVA>, CancellationToken, Task<bool>>, Action) AbstractValidator<IdFiscaleIVA>.Include(IValidator<IdFiscaleIVA>) AbstractValidator<IdFiscaleIVA>.Include<TValidator>(Func<IdFiscaleIVA, TValidator>) AbstractValidator<IdFiscaleIVA>.GetEnumerator() AbstractValidator<IdFiscaleIVA>.EnsureInstanceNotNull(object) AbstractValidator<IdFiscaleIVA>.PreValidate(ValidationContext<IdFiscaleIVA>, ValidationResult) AbstractValidator<IdFiscaleIVA>.RaiseValidationException(ValidationContext<IdFiscaleIVA>, ValidationResult) AbstractValidator<IdFiscaleIVA>.CascadeMode AbstractValidator<IdFiscaleIVA>.ClassLevelCascadeMode AbstractValidator<IdFiscaleIVA>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/FatturaElettronica.Validators.IndirizzoResaValidator.html": {
    "href": "api/FatturaElettronica.Validators.IndirizzoResaValidator.html",
    "title": "Class IndirizzoResaValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class IndirizzoResaValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class IndirizzoResaValidator : LocalitàBaseValidator<IndirizzoResa>, IValidator<IndirizzoResa>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<IndirizzoResa> LocalitàBaseValidator<IndirizzoResa> IndirizzoResaValidator Implements IValidator<IndirizzoResa> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<IndirizzoResa>.Validate(IndirizzoResa) AbstractValidator<IndirizzoResa>.ValidateAsync(IndirizzoResa, CancellationToken) AbstractValidator<IndirizzoResa>.Validate(ValidationContext<IndirizzoResa>) AbstractValidator<IndirizzoResa>.ValidateAsync(ValidationContext<IndirizzoResa>, CancellationToken) AbstractValidator<IndirizzoResa>.CreateDescriptor() AbstractValidator<IndirizzoResa>.RuleFor<TProperty>(Expression<Func<IndirizzoResa, TProperty>>) AbstractValidator<IndirizzoResa>.Transform<TProperty, TTransformed>(Expression<Func<IndirizzoResa, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<IndirizzoResa>.Transform<TProperty, TTransformed>(Expression<Func<IndirizzoResa, TProperty>>, Func<IndirizzoResa, TProperty, TTransformed>) AbstractValidator<IndirizzoResa>.RuleForEach<TElement>(Expression<Func<IndirizzoResa, IEnumerable<TElement>>>) AbstractValidator<IndirizzoResa>.TransformForEach<TElement, TTransformed>(Expression<Func<IndirizzoResa, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<IndirizzoResa>.TransformForEach<TElement, TTransformed>(Expression<Func<IndirizzoResa, IEnumerable<TElement>>>, Func<IndirizzoResa, TElement, TTransformed>) AbstractValidator<IndirizzoResa>.RuleSet(string, Action) AbstractValidator<IndirizzoResa>.When(Func<IndirizzoResa, bool>, Action) AbstractValidator<IndirizzoResa>.When(Func<IndirizzoResa, ValidationContext<IndirizzoResa>, bool>, Action) AbstractValidator<IndirizzoResa>.Unless(Func<IndirizzoResa, bool>, Action) AbstractValidator<IndirizzoResa>.Unless(Func<IndirizzoResa, ValidationContext<IndirizzoResa>, bool>, Action) AbstractValidator<IndirizzoResa>.WhenAsync(Func<IndirizzoResa, CancellationToken, Task<bool>>, Action) AbstractValidator<IndirizzoResa>.WhenAsync(Func<IndirizzoResa, ValidationContext<IndirizzoResa>, CancellationToken, Task<bool>>, Action) AbstractValidator<IndirizzoResa>.UnlessAsync(Func<IndirizzoResa, CancellationToken, Task<bool>>, Action) AbstractValidator<IndirizzoResa>.UnlessAsync(Func<IndirizzoResa, ValidationContext<IndirizzoResa>, CancellationToken, Task<bool>>, Action) AbstractValidator<IndirizzoResa>.Include(IValidator<IndirizzoResa>) AbstractValidator<IndirizzoResa>.Include<TValidator>(Func<IndirizzoResa, TValidator>) AbstractValidator<IndirizzoResa>.GetEnumerator() AbstractValidator<IndirizzoResa>.EnsureInstanceNotNull(object) AbstractValidator<IndirizzoResa>.PreValidate(ValidationContext<IndirizzoResa>, ValidationResult) AbstractValidator<IndirizzoResa>.RaiseValidationException(ValidationContext<IndirizzoResa>, ValidationResult) AbstractValidator<IndirizzoResa>.CascadeMode AbstractValidator<IndirizzoResa>.ClassLevelCascadeMode AbstractValidator<IndirizzoResa>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/FatturaElettronica.Validators.IscrizioneREAValidator.html": {
    "href": "api/FatturaElettronica.Validators.IscrizioneREAValidator.html",
    "title": "Class IscrizioneREAValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class IscrizioneREAValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class IscrizioneREAValidator : AbstractValidator<IscrizioneREA>, IValidator<IscrizioneREA>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<IscrizioneREA> IscrizioneREAValidator Implements IValidator<IscrizioneREA> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<IscrizioneREA>.Validate(IscrizioneREA) AbstractValidator<IscrizioneREA>.ValidateAsync(IscrizioneREA, CancellationToken) AbstractValidator<IscrizioneREA>.Validate(ValidationContext<IscrizioneREA>) AbstractValidator<IscrizioneREA>.ValidateAsync(ValidationContext<IscrizioneREA>, CancellationToken) AbstractValidator<IscrizioneREA>.CreateDescriptor() AbstractValidator<IscrizioneREA>.RuleFor<TProperty>(Expression<Func<IscrizioneREA, TProperty>>) AbstractValidator<IscrizioneREA>.Transform<TProperty, TTransformed>(Expression<Func<IscrizioneREA, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<IscrizioneREA>.Transform<TProperty, TTransformed>(Expression<Func<IscrizioneREA, TProperty>>, Func<IscrizioneREA, TProperty, TTransformed>) AbstractValidator<IscrizioneREA>.RuleForEach<TElement>(Expression<Func<IscrizioneREA, IEnumerable<TElement>>>) AbstractValidator<IscrizioneREA>.TransformForEach<TElement, TTransformed>(Expression<Func<IscrizioneREA, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<IscrizioneREA>.TransformForEach<TElement, TTransformed>(Expression<Func<IscrizioneREA, IEnumerable<TElement>>>, Func<IscrizioneREA, TElement, TTransformed>) AbstractValidator<IscrizioneREA>.RuleSet(string, Action) AbstractValidator<IscrizioneREA>.When(Func<IscrizioneREA, bool>, Action) AbstractValidator<IscrizioneREA>.When(Func<IscrizioneREA, ValidationContext<IscrizioneREA>, bool>, Action) AbstractValidator<IscrizioneREA>.Unless(Func<IscrizioneREA, bool>, Action) AbstractValidator<IscrizioneREA>.Unless(Func<IscrizioneREA, ValidationContext<IscrizioneREA>, bool>, Action) AbstractValidator<IscrizioneREA>.WhenAsync(Func<IscrizioneREA, CancellationToken, Task<bool>>, Action) AbstractValidator<IscrizioneREA>.WhenAsync(Func<IscrizioneREA, ValidationContext<IscrizioneREA>, CancellationToken, Task<bool>>, Action) AbstractValidator<IscrizioneREA>.UnlessAsync(Func<IscrizioneREA, CancellationToken, Task<bool>>, Action) AbstractValidator<IscrizioneREA>.UnlessAsync(Func<IscrizioneREA, ValidationContext<IscrizioneREA>, CancellationToken, Task<bool>>, Action) AbstractValidator<IscrizioneREA>.Include(IValidator<IscrizioneREA>) AbstractValidator<IscrizioneREA>.Include<TValidator>(Func<IscrizioneREA, TValidator>) AbstractValidator<IscrizioneREA>.GetEnumerator() AbstractValidator<IscrizioneREA>.EnsureInstanceNotNull(object) AbstractValidator<IscrizioneREA>.PreValidate(ValidationContext<IscrizioneREA>, ValidationResult) AbstractValidator<IscrizioneREA>.RaiseValidationException(ValidationContext<IscrizioneREA>, ValidationResult) AbstractValidator<IscrizioneREA>.CascadeMode AbstractValidator<IscrizioneREA>.ClassLevelCascadeMode AbstractValidator<IscrizioneREA>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors IscrizioneREAValidator() public IscrizioneREAValidator()"
  },
  "api/FatturaElettronica.Validators.IsValidValidator-3.html": {
    "href": "api/FatturaElettronica.Validators.IsValidValidator-3.html",
    "title": "Class IsValidValidator<T, TProperty, TTabella> | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class IsValidValidator<T, TProperty, TTabella> Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class IsValidValidator<T, TProperty, TTabella> : PropertyValidator<T, TProperty>, IPropertyValidator<T, TProperty>, IPropertyValidator where TTabella : Tabella, new() Type Parameters T TProperty TTabella Inheritance object PropertyValidator<T, TProperty> IsValidValidator<T, TProperty, TTabella> Implements IPropertyValidator<T, TProperty> IPropertyValidator Inherited Members PropertyValidator<T, TProperty>.GetDefaultMessageTemplate(string) PropertyValidator<T, TProperty>.Localized(string, string) PropertyValidator<T, TProperty>.IsValid(ValidationContext<T>, TProperty) PropertyValidator<T, TProperty>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name The name of the validator. This is usually the type name without any generic parameters. This is used as the default Error Code for the validator. public override string Name { get; } Property Value string Methods GetDefaultMessageTemplate(string) Returns the default error message template for this validator, when not overridden. protected override string GetDefaultMessageTemplate(string errorCode) Parameters errorCode string The currently configured error code for the validator. Returns string IsValid(ValidationContext<T>, TProperty) Validates a specific property value. public override bool IsValid(ValidationContext<T> context, TProperty value) Parameters context ValidationContext<T> The validation context. The parent object can be obtained from here. value TProperty The current property value to validate Returns bool True if valid, otherwise false."
  },
  "api/FatturaElettronica.Validators.Latin1SupplementValidator-2.html": {
    "href": "api/FatturaElettronica.Validators.Latin1SupplementValidator-2.html",
    "title": "Class Latin1SupplementValidator<T, TProperty> | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class Latin1SupplementValidator<T, TProperty> Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class Latin1SupplementValidator<T, TProperty> : LatinBaseValidator<T, TProperty>, IPropertyValidator<T, TProperty>, IPropertyValidator Type Parameters T TProperty Inheritance object PropertyValidator<T, TProperty> LatinBaseValidator<T, TProperty> Latin1SupplementValidator<T, TProperty> Implements IPropertyValidator<T, TProperty> IPropertyValidator Inherited Members LatinBaseValidator<T, TProperty>.GetDefaultMessageTemplate(string) LatinBaseValidator<T, TProperty>.IsValid(ValidationContext<T>, TProperty) LatinBaseValidator<T, TProperty>.Name PropertyValidator<T, TProperty>.GetDefaultMessageTemplate(string) PropertyValidator<T, TProperty>.Localized(string, string) PropertyValidator<T, TProperty>.IsValid(ValidationContext<T>, TProperty) PropertyValidator<T, TProperty>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Latin1SupplementValidator() public Latin1SupplementValidator()"
  },
  "api/FatturaElettronica.Validators.LatinBaseValidator-2.html": {
    "href": "api/FatturaElettronica.Validators.LatinBaseValidator-2.html",
    "title": "Class LatinBaseValidator<T, TProperty> | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class LatinBaseValidator<T, TProperty> Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public abstract class LatinBaseValidator<T, TProperty> : PropertyValidator<T, TProperty>, IPropertyValidator<T, TProperty>, IPropertyValidator Type Parameters T TProperty Inheritance object PropertyValidator<T, TProperty> LatinBaseValidator<T, TProperty> Implements IPropertyValidator<T, TProperty> IPropertyValidator Derived BasicLatinValidator<T, TProperty> Latin1SupplementValidator<T, TProperty> Inherited Members PropertyValidator<T, TProperty>.GetDefaultMessageTemplate(string) PropertyValidator<T, TProperty>.Localized(string, string) PropertyValidator<T, TProperty>.IsValid(ValidationContext<T>, TProperty) PropertyValidator<T, TProperty>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LatinBaseValidator(Charsets) protected LatinBaseValidator(Charsets charset) Parameters charset Charsets Properties Name The name of the validator. This is usually the type name without any generic parameters. This is used as the default Error Code for the validator. public override string Name { get; } Property Value string Methods GetDefaultMessageTemplate(string) Returns the default error message template for this validator, when not overridden. protected override string GetDefaultMessageTemplate(string errorCode) Parameters errorCode string The currently configured error code for the validator. Returns string IsValid(ValidationContext<T>, TProperty) Validates a specific property value. public override bool IsValid(ValidationContext<T> context, TProperty value) Parameters context ValidationContext<T> The validation context. The parent object can be obtained from here. value TProperty The current property value to validate Returns bool True if valid, otherwise false."
  },
  "api/FatturaElettronica.Validators.LocalitàBaseValidator-1.html": {
    "href": "api/FatturaElettronica.Validators.LocalitàBaseValidator-1.html",
    "title": "Class LocalitàBaseValidator<T> | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class LocalitàBaseValidator<T> Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public abstract class LocalitàBaseValidator<T> : AbstractValidator<T>, IValidator<T>, IValidator, IEnumerable<IValidationRule>, IEnumerable where T : Località Type Parameters T Inheritance object AbstractValidator<T> LocalitàBaseValidator<T> Implements IValidator<T> IValidator IEnumerable<IValidationRule> IEnumerable Derived IndirizzoResaValidator SedeCedentePrestatoreValidator SedeCessionarioCommittenteValidator SedeCedentePrestatoreValidator SedeCessionarioCommittenteValidator StabileOrganizzazioneValidator StabileOrganizzazioneValidator Inherited Members AbstractValidator<T>.Validate(T) AbstractValidator<T>.ValidateAsync(T, CancellationToken) AbstractValidator<T>.Validate(ValidationContext<T>) AbstractValidator<T>.ValidateAsync(ValidationContext<T>, CancellationToken) AbstractValidator<T>.CreateDescriptor() AbstractValidator<T>.RuleFor<TProperty>(Expression<Func<T, TProperty>>) AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<T, TProperty, TTransformed>) AbstractValidator<T>.RuleForEach<TElement>(Expression<Func<T, IEnumerable<TElement>>>) AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<T, TElement, TTransformed>) AbstractValidator<T>.RuleSet(string, Action) AbstractValidator<T>.When(Func<T, bool>, Action) AbstractValidator<T>.When(Func<T, ValidationContext<T>, bool>, Action) AbstractValidator<T>.Unless(Func<T, bool>, Action) AbstractValidator<T>.Unless(Func<T, ValidationContext<T>, bool>, Action) AbstractValidator<T>.WhenAsync(Func<T, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.WhenAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.UnlessAsync(Func<T, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.UnlessAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.Include(IValidator<T>) AbstractValidator<T>.Include<TValidator>(Func<T, TValidator>) AbstractValidator<T>.GetEnumerator() AbstractValidator<T>.EnsureInstanceNotNull(object) AbstractValidator<T>.PreValidate(ValidationContext<T>, ValidationResult) AbstractValidator<T>.RaiseValidationException(ValidationContext<T>, ValidationResult) AbstractValidator<T>.CascadeMode AbstractValidator<T>.ClassLevelCascadeMode AbstractValidator<T>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LocalitàBaseValidator() protected LocalitàBaseValidator()"
  },
  "api/FatturaElettronica.Validators.MyValidatorExtensions.html": {
    "href": "api/FatturaElettronica.Validators.MyValidatorExtensions.html",
    "title": "Class MyValidatorExtensions | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class MyValidatorExtensions Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public static class MyValidatorExtensions Inheritance object MyValidatorExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BasicLatinValidator<T, TElement>(IRuleBuilder<T, TElement>) public static IRuleBuilderOptions<T, TElement> BasicLatinValidator<T, TElement>(this IRuleBuilder<T, TElement> ruleBuilder) Parameters ruleBuilder IRuleBuilder<T, TElement> Returns IRuleBuilderOptions<T, TElement> Type Parameters T TElement Latin1SupplementValidator<T, TElement>(IRuleBuilder<T, TElement>) public static IRuleBuilderOptions<T, TElement> Latin1SupplementValidator<T, TElement>(this IRuleBuilder<T, TElement> ruleBuilder) Parameters ruleBuilder IRuleBuilder<T, TElement> Returns IRuleBuilderOptions<T, TElement> Type Parameters T TElement"
  },
  "api/FatturaElettronica.Validators.RappresentanteFiscaleCessionarioCommittenteValidator.html": {
    "href": "api/FatturaElettronica.Validators.RappresentanteFiscaleCessionarioCommittenteValidator.html",
    "title": "Class RappresentanteFiscaleCessionarioCommittenteValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class RappresentanteFiscaleCessionarioCommittenteValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class RappresentanteFiscaleCessionarioCommittenteValidator : DenominazioneNomeCognomeValidator<RappresentanteFiscaleCessionarioCommittente>, IValidator<RappresentanteFiscaleCessionarioCommittente>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<RappresentanteFiscaleCessionarioCommittente> DenominazioneNomeCognomeValidator<RappresentanteFiscaleCessionarioCommittente> RappresentanteFiscaleCessionarioCommittenteValidator Implements IValidator<RappresentanteFiscaleCessionarioCommittente> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.Validate(RappresentanteFiscaleCessionarioCommittente) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.ValidateAsync(RappresentanteFiscaleCessionarioCommittente, CancellationToken) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.Validate(ValidationContext<RappresentanteFiscaleCessionarioCommittente>) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.ValidateAsync(ValidationContext<RappresentanteFiscaleCessionarioCommittente>, CancellationToken) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.CreateDescriptor() AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.RuleFor<TProperty>(Expression<Func<RappresentanteFiscaleCessionarioCommittente, TProperty>>) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.Transform<TProperty, TTransformed>(Expression<Func<RappresentanteFiscaleCessionarioCommittente, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.Transform<TProperty, TTransformed>(Expression<Func<RappresentanteFiscaleCessionarioCommittente, TProperty>>, Func<RappresentanteFiscaleCessionarioCommittente, TProperty, TTransformed>) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.RuleForEach<TElement>(Expression<Func<RappresentanteFiscaleCessionarioCommittente, IEnumerable<TElement>>>) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.TransformForEach<TElement, TTransformed>(Expression<Func<RappresentanteFiscaleCessionarioCommittente, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.TransformForEach<TElement, TTransformed>(Expression<Func<RappresentanteFiscaleCessionarioCommittente, IEnumerable<TElement>>>, Func<RappresentanteFiscaleCessionarioCommittente, TElement, TTransformed>) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.RuleSet(string, Action) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.When(Func<RappresentanteFiscaleCessionarioCommittente, bool>, Action) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.When(Func<RappresentanteFiscaleCessionarioCommittente, ValidationContext<RappresentanteFiscaleCessionarioCommittente>, bool>, Action) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.Unless(Func<RappresentanteFiscaleCessionarioCommittente, bool>, Action) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.Unless(Func<RappresentanteFiscaleCessionarioCommittente, ValidationContext<RappresentanteFiscaleCessionarioCommittente>, bool>, Action) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.WhenAsync(Func<RappresentanteFiscaleCessionarioCommittente, CancellationToken, Task<bool>>, Action) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.WhenAsync(Func<RappresentanteFiscaleCessionarioCommittente, ValidationContext<RappresentanteFiscaleCessionarioCommittente>, CancellationToken, Task<bool>>, Action) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.UnlessAsync(Func<RappresentanteFiscaleCessionarioCommittente, CancellationToken, Task<bool>>, Action) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.UnlessAsync(Func<RappresentanteFiscaleCessionarioCommittente, ValidationContext<RappresentanteFiscaleCessionarioCommittente>, CancellationToken, Task<bool>>, Action) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.Include(IValidator<RappresentanteFiscaleCessionarioCommittente>) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.Include<TValidator>(Func<RappresentanteFiscaleCessionarioCommittente, TValidator>) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.GetEnumerator() AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.EnsureInstanceNotNull(object) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.PreValidate(ValidationContext<RappresentanteFiscaleCessionarioCommittente>, ValidationResult) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.RaiseValidationException(ValidationContext<RappresentanteFiscaleCessionarioCommittente>, ValidationResult) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.CascadeMode AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.ClassLevelCascadeMode AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RappresentanteFiscaleCessionarioCommittenteValidator() public RappresentanteFiscaleCessionarioCommittenteValidator()"
  },
  "api/FatturaElettronica.Validators.RappresentanteFiscaleValidator.html": {
    "href": "api/FatturaElettronica.Validators.RappresentanteFiscaleValidator.html",
    "title": "Class RappresentanteFiscaleValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class RappresentanteFiscaleValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class RappresentanteFiscaleValidator : AbstractValidator<RappresentanteFiscale>, IValidator<RappresentanteFiscale>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<RappresentanteFiscale> RappresentanteFiscaleValidator Implements IValidator<RappresentanteFiscale> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<RappresentanteFiscale>.Validate(RappresentanteFiscale) AbstractValidator<RappresentanteFiscale>.ValidateAsync(RappresentanteFiscale, CancellationToken) AbstractValidator<RappresentanteFiscale>.Validate(ValidationContext<RappresentanteFiscale>) AbstractValidator<RappresentanteFiscale>.ValidateAsync(ValidationContext<RappresentanteFiscale>, CancellationToken) AbstractValidator<RappresentanteFiscale>.CreateDescriptor() AbstractValidator<RappresentanteFiscale>.RuleFor<TProperty>(Expression<Func<RappresentanteFiscale, TProperty>>) AbstractValidator<RappresentanteFiscale>.Transform<TProperty, TTransformed>(Expression<Func<RappresentanteFiscale, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<RappresentanteFiscale>.Transform<TProperty, TTransformed>(Expression<Func<RappresentanteFiscale, TProperty>>, Func<RappresentanteFiscale, TProperty, TTransformed>) AbstractValidator<RappresentanteFiscale>.RuleForEach<TElement>(Expression<Func<RappresentanteFiscale, IEnumerable<TElement>>>) AbstractValidator<RappresentanteFiscale>.TransformForEach<TElement, TTransformed>(Expression<Func<RappresentanteFiscale, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<RappresentanteFiscale>.TransformForEach<TElement, TTransformed>(Expression<Func<RappresentanteFiscale, IEnumerable<TElement>>>, Func<RappresentanteFiscale, TElement, TTransformed>) AbstractValidator<RappresentanteFiscale>.RuleSet(string, Action) AbstractValidator<RappresentanteFiscale>.When(Func<RappresentanteFiscale, bool>, Action) AbstractValidator<RappresentanteFiscale>.When(Func<RappresentanteFiscale, ValidationContext<RappresentanteFiscale>, bool>, Action) AbstractValidator<RappresentanteFiscale>.Unless(Func<RappresentanteFiscale, bool>, Action) AbstractValidator<RappresentanteFiscale>.Unless(Func<RappresentanteFiscale, ValidationContext<RappresentanteFiscale>, bool>, Action) AbstractValidator<RappresentanteFiscale>.WhenAsync(Func<RappresentanteFiscale, CancellationToken, Task<bool>>, Action) AbstractValidator<RappresentanteFiscale>.WhenAsync(Func<RappresentanteFiscale, ValidationContext<RappresentanteFiscale>, CancellationToken, Task<bool>>, Action) AbstractValidator<RappresentanteFiscale>.UnlessAsync(Func<RappresentanteFiscale, CancellationToken, Task<bool>>, Action) AbstractValidator<RappresentanteFiscale>.UnlessAsync(Func<RappresentanteFiscale, ValidationContext<RappresentanteFiscale>, CancellationToken, Task<bool>>, Action) AbstractValidator<RappresentanteFiscale>.Include(IValidator<RappresentanteFiscale>) AbstractValidator<RappresentanteFiscale>.Include<TValidator>(Func<RappresentanteFiscale, TValidator>) AbstractValidator<RappresentanteFiscale>.GetEnumerator() AbstractValidator<RappresentanteFiscale>.EnsureInstanceNotNull(object) AbstractValidator<RappresentanteFiscale>.PreValidate(ValidationContext<RappresentanteFiscale>, ValidationResult) AbstractValidator<RappresentanteFiscale>.RaiseValidationException(ValidationContext<RappresentanteFiscale>, ValidationResult) AbstractValidator<RappresentanteFiscale>.CascadeMode AbstractValidator<RappresentanteFiscale>.ClassLevelCascadeMode AbstractValidator<RappresentanteFiscale>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RappresentanteFiscaleValidator() public RappresentanteFiscaleValidator()"
  },
  "api/FatturaElettronica.Validators.ScontoMaggiorazioneValidator.html": {
    "href": "api/FatturaElettronica.Validators.ScontoMaggiorazioneValidator.html",
    "title": "Class ScontoMaggiorazioneValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class ScontoMaggiorazioneValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class ScontoMaggiorazioneValidator : AbstractValidator<ScontoMaggiorazione>, IValidator<ScontoMaggiorazione>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<ScontoMaggiorazione> ScontoMaggiorazioneValidator Implements IValidator<ScontoMaggiorazione> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<ScontoMaggiorazione>.Validate(ScontoMaggiorazione) AbstractValidator<ScontoMaggiorazione>.ValidateAsync(ScontoMaggiorazione, CancellationToken) AbstractValidator<ScontoMaggiorazione>.Validate(ValidationContext<ScontoMaggiorazione>) AbstractValidator<ScontoMaggiorazione>.ValidateAsync(ValidationContext<ScontoMaggiorazione>, CancellationToken) AbstractValidator<ScontoMaggiorazione>.CreateDescriptor() AbstractValidator<ScontoMaggiorazione>.RuleFor<TProperty>(Expression<Func<ScontoMaggiorazione, TProperty>>) AbstractValidator<ScontoMaggiorazione>.Transform<TProperty, TTransformed>(Expression<Func<ScontoMaggiorazione, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<ScontoMaggiorazione>.Transform<TProperty, TTransformed>(Expression<Func<ScontoMaggiorazione, TProperty>>, Func<ScontoMaggiorazione, TProperty, TTransformed>) AbstractValidator<ScontoMaggiorazione>.RuleForEach<TElement>(Expression<Func<ScontoMaggiorazione, IEnumerable<TElement>>>) AbstractValidator<ScontoMaggiorazione>.TransformForEach<TElement, TTransformed>(Expression<Func<ScontoMaggiorazione, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<ScontoMaggiorazione>.TransformForEach<TElement, TTransformed>(Expression<Func<ScontoMaggiorazione, IEnumerable<TElement>>>, Func<ScontoMaggiorazione, TElement, TTransformed>) AbstractValidator<ScontoMaggiorazione>.RuleSet(string, Action) AbstractValidator<ScontoMaggiorazione>.When(Func<ScontoMaggiorazione, bool>, Action) AbstractValidator<ScontoMaggiorazione>.When(Func<ScontoMaggiorazione, ValidationContext<ScontoMaggiorazione>, bool>, Action) AbstractValidator<ScontoMaggiorazione>.Unless(Func<ScontoMaggiorazione, bool>, Action) AbstractValidator<ScontoMaggiorazione>.Unless(Func<ScontoMaggiorazione, ValidationContext<ScontoMaggiorazione>, bool>, Action) AbstractValidator<ScontoMaggiorazione>.WhenAsync(Func<ScontoMaggiorazione, CancellationToken, Task<bool>>, Action) AbstractValidator<ScontoMaggiorazione>.WhenAsync(Func<ScontoMaggiorazione, ValidationContext<ScontoMaggiorazione>, CancellationToken, Task<bool>>, Action) AbstractValidator<ScontoMaggiorazione>.UnlessAsync(Func<ScontoMaggiorazione, CancellationToken, Task<bool>>, Action) AbstractValidator<ScontoMaggiorazione>.UnlessAsync(Func<ScontoMaggiorazione, ValidationContext<ScontoMaggiorazione>, CancellationToken, Task<bool>>, Action) AbstractValidator<ScontoMaggiorazione>.Include(IValidator<ScontoMaggiorazione>) AbstractValidator<ScontoMaggiorazione>.Include<TValidator>(Func<ScontoMaggiorazione, TValidator>) AbstractValidator<ScontoMaggiorazione>.GetEnumerator() AbstractValidator<ScontoMaggiorazione>.EnsureInstanceNotNull(object) AbstractValidator<ScontoMaggiorazione>.PreValidate(ValidationContext<ScontoMaggiorazione>, ValidationResult) AbstractValidator<ScontoMaggiorazione>.RaiseValidationException(ValidationContext<ScontoMaggiorazione>, ValidationResult) AbstractValidator<ScontoMaggiorazione>.CascadeMode AbstractValidator<ScontoMaggiorazione>.ClassLevelCascadeMode AbstractValidator<ScontoMaggiorazione>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ScontoMaggiorazioneValidator() public ScontoMaggiorazioneValidator()"
  },
  "api/FatturaElettronica.Validators.SedeCedentePrestatoreValidator.html": {
    "href": "api/FatturaElettronica.Validators.SedeCedentePrestatoreValidator.html",
    "title": "Class SedeCedentePrestatoreValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class SedeCedentePrestatoreValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class SedeCedentePrestatoreValidator : LocalitàBaseValidator<SedeCedentePrestatore>, IValidator<SedeCedentePrestatore>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<SedeCedentePrestatore> LocalitàBaseValidator<SedeCedentePrestatore> SedeCedentePrestatoreValidator Implements IValidator<SedeCedentePrestatore> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<SedeCedentePrestatore>.Validate(SedeCedentePrestatore) AbstractValidator<SedeCedentePrestatore>.ValidateAsync(SedeCedentePrestatore, CancellationToken) AbstractValidator<SedeCedentePrestatore>.Validate(ValidationContext<SedeCedentePrestatore>) AbstractValidator<SedeCedentePrestatore>.ValidateAsync(ValidationContext<SedeCedentePrestatore>, CancellationToken) AbstractValidator<SedeCedentePrestatore>.CreateDescriptor() AbstractValidator<SedeCedentePrestatore>.RuleFor<TProperty>(Expression<Func<SedeCedentePrestatore, TProperty>>) AbstractValidator<SedeCedentePrestatore>.Transform<TProperty, TTransformed>(Expression<Func<SedeCedentePrestatore, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<SedeCedentePrestatore>.Transform<TProperty, TTransformed>(Expression<Func<SedeCedentePrestatore, TProperty>>, Func<SedeCedentePrestatore, TProperty, TTransformed>) AbstractValidator<SedeCedentePrestatore>.RuleForEach<TElement>(Expression<Func<SedeCedentePrestatore, IEnumerable<TElement>>>) AbstractValidator<SedeCedentePrestatore>.TransformForEach<TElement, TTransformed>(Expression<Func<SedeCedentePrestatore, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<SedeCedentePrestatore>.TransformForEach<TElement, TTransformed>(Expression<Func<SedeCedentePrestatore, IEnumerable<TElement>>>, Func<SedeCedentePrestatore, TElement, TTransformed>) AbstractValidator<SedeCedentePrestatore>.RuleSet(string, Action) AbstractValidator<SedeCedentePrestatore>.When(Func<SedeCedentePrestatore, bool>, Action) AbstractValidator<SedeCedentePrestatore>.When(Func<SedeCedentePrestatore, ValidationContext<SedeCedentePrestatore>, bool>, Action) AbstractValidator<SedeCedentePrestatore>.Unless(Func<SedeCedentePrestatore, bool>, Action) AbstractValidator<SedeCedentePrestatore>.Unless(Func<SedeCedentePrestatore, ValidationContext<SedeCedentePrestatore>, bool>, Action) AbstractValidator<SedeCedentePrestatore>.WhenAsync(Func<SedeCedentePrestatore, CancellationToken, Task<bool>>, Action) AbstractValidator<SedeCedentePrestatore>.WhenAsync(Func<SedeCedentePrestatore, ValidationContext<SedeCedentePrestatore>, CancellationToken, Task<bool>>, Action) AbstractValidator<SedeCedentePrestatore>.UnlessAsync(Func<SedeCedentePrestatore, CancellationToken, Task<bool>>, Action) AbstractValidator<SedeCedentePrestatore>.UnlessAsync(Func<SedeCedentePrestatore, ValidationContext<SedeCedentePrestatore>, CancellationToken, Task<bool>>, Action) AbstractValidator<SedeCedentePrestatore>.Include(IValidator<SedeCedentePrestatore>) AbstractValidator<SedeCedentePrestatore>.Include<TValidator>(Func<SedeCedentePrestatore, TValidator>) AbstractValidator<SedeCedentePrestatore>.GetEnumerator() AbstractValidator<SedeCedentePrestatore>.EnsureInstanceNotNull(object) AbstractValidator<SedeCedentePrestatore>.PreValidate(ValidationContext<SedeCedentePrestatore>, ValidationResult) AbstractValidator<SedeCedentePrestatore>.RaiseValidationException(ValidationContext<SedeCedentePrestatore>, ValidationResult) AbstractValidator<SedeCedentePrestatore>.CascadeMode AbstractValidator<SedeCedentePrestatore>.ClassLevelCascadeMode AbstractValidator<SedeCedentePrestatore>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/FatturaElettronica.Validators.SedeCessionarioCommittenteValidator.html": {
    "href": "api/FatturaElettronica.Validators.SedeCessionarioCommittenteValidator.html",
    "title": "Class SedeCessionarioCommittenteValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class SedeCessionarioCommittenteValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class SedeCessionarioCommittenteValidator : LocalitàBaseValidator<SedeCessionarioCommittente>, IValidator<SedeCessionarioCommittente>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<SedeCessionarioCommittente> LocalitàBaseValidator<SedeCessionarioCommittente> SedeCessionarioCommittenteValidator Implements IValidator<SedeCessionarioCommittente> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<SedeCessionarioCommittente>.Validate(SedeCessionarioCommittente) AbstractValidator<SedeCessionarioCommittente>.ValidateAsync(SedeCessionarioCommittente, CancellationToken) AbstractValidator<SedeCessionarioCommittente>.Validate(ValidationContext<SedeCessionarioCommittente>) AbstractValidator<SedeCessionarioCommittente>.ValidateAsync(ValidationContext<SedeCessionarioCommittente>, CancellationToken) AbstractValidator<SedeCessionarioCommittente>.CreateDescriptor() AbstractValidator<SedeCessionarioCommittente>.RuleFor<TProperty>(Expression<Func<SedeCessionarioCommittente, TProperty>>) AbstractValidator<SedeCessionarioCommittente>.Transform<TProperty, TTransformed>(Expression<Func<SedeCessionarioCommittente, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<SedeCessionarioCommittente>.Transform<TProperty, TTransformed>(Expression<Func<SedeCessionarioCommittente, TProperty>>, Func<SedeCessionarioCommittente, TProperty, TTransformed>) AbstractValidator<SedeCessionarioCommittente>.RuleForEach<TElement>(Expression<Func<SedeCessionarioCommittente, IEnumerable<TElement>>>) AbstractValidator<SedeCessionarioCommittente>.TransformForEach<TElement, TTransformed>(Expression<Func<SedeCessionarioCommittente, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<SedeCessionarioCommittente>.TransformForEach<TElement, TTransformed>(Expression<Func<SedeCessionarioCommittente, IEnumerable<TElement>>>, Func<SedeCessionarioCommittente, TElement, TTransformed>) AbstractValidator<SedeCessionarioCommittente>.RuleSet(string, Action) AbstractValidator<SedeCessionarioCommittente>.When(Func<SedeCessionarioCommittente, bool>, Action) AbstractValidator<SedeCessionarioCommittente>.When(Func<SedeCessionarioCommittente, ValidationContext<SedeCessionarioCommittente>, bool>, Action) AbstractValidator<SedeCessionarioCommittente>.Unless(Func<SedeCessionarioCommittente, bool>, Action) AbstractValidator<SedeCessionarioCommittente>.Unless(Func<SedeCessionarioCommittente, ValidationContext<SedeCessionarioCommittente>, bool>, Action) AbstractValidator<SedeCessionarioCommittente>.WhenAsync(Func<SedeCessionarioCommittente, CancellationToken, Task<bool>>, Action) AbstractValidator<SedeCessionarioCommittente>.WhenAsync(Func<SedeCessionarioCommittente, ValidationContext<SedeCessionarioCommittente>, CancellationToken, Task<bool>>, Action) AbstractValidator<SedeCessionarioCommittente>.UnlessAsync(Func<SedeCessionarioCommittente, CancellationToken, Task<bool>>, Action) AbstractValidator<SedeCessionarioCommittente>.UnlessAsync(Func<SedeCessionarioCommittente, ValidationContext<SedeCessionarioCommittente>, CancellationToken, Task<bool>>, Action) AbstractValidator<SedeCessionarioCommittente>.Include(IValidator<SedeCessionarioCommittente>) AbstractValidator<SedeCessionarioCommittente>.Include<TValidator>(Func<SedeCessionarioCommittente, TValidator>) AbstractValidator<SedeCessionarioCommittente>.GetEnumerator() AbstractValidator<SedeCessionarioCommittente>.EnsureInstanceNotNull(object) AbstractValidator<SedeCessionarioCommittente>.PreValidate(ValidationContext<SedeCessionarioCommittente>, ValidationResult) AbstractValidator<SedeCessionarioCommittente>.RaiseValidationException(ValidationContext<SedeCessionarioCommittente>, ValidationResult) AbstractValidator<SedeCessionarioCommittente>.CascadeMode AbstractValidator<SedeCessionarioCommittente>.ClassLevelCascadeMode AbstractValidator<SedeCessionarioCommittente>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/FatturaElettronica.Validators.Semplificata.AllegatiValidator.html": {
    "href": "api/FatturaElettronica.Validators.Semplificata.AllegatiValidator.html",
    "title": "Class AllegatiValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class AllegatiValidator Namespace FatturaElettronica.Validators.Semplificata Assembly FatturaElettronica.dll public class AllegatiValidator : AbstractValidator<Allegati>, IValidator<Allegati>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<Allegati> AllegatiValidator Implements IValidator<Allegati> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<Allegati>.Validate(Allegati) AbstractValidator<Allegati>.ValidateAsync(Allegati, CancellationToken) AbstractValidator<Allegati>.Validate(ValidationContext<Allegati>) AbstractValidator<Allegati>.ValidateAsync(ValidationContext<Allegati>, CancellationToken) AbstractValidator<Allegati>.CreateDescriptor() AbstractValidator<Allegati>.RuleFor<TProperty>(Expression<Func<Allegati, TProperty>>) AbstractValidator<Allegati>.Transform<TProperty, TTransformed>(Expression<Func<Allegati, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<Allegati>.Transform<TProperty, TTransformed>(Expression<Func<Allegati, TProperty>>, Func<Allegati, TProperty, TTransformed>) AbstractValidator<Allegati>.RuleForEach<TElement>(Expression<Func<Allegati, IEnumerable<TElement>>>) AbstractValidator<Allegati>.TransformForEach<TElement, TTransformed>(Expression<Func<Allegati, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<Allegati>.TransformForEach<TElement, TTransformed>(Expression<Func<Allegati, IEnumerable<TElement>>>, Func<Allegati, TElement, TTransformed>) AbstractValidator<Allegati>.RuleSet(string, Action) AbstractValidator<Allegati>.When(Func<Allegati, bool>, Action) AbstractValidator<Allegati>.When(Func<Allegati, ValidationContext<Allegati>, bool>, Action) AbstractValidator<Allegati>.Unless(Func<Allegati, bool>, Action) AbstractValidator<Allegati>.Unless(Func<Allegati, ValidationContext<Allegati>, bool>, Action) AbstractValidator<Allegati>.WhenAsync(Func<Allegati, CancellationToken, Task<bool>>, Action) AbstractValidator<Allegati>.WhenAsync(Func<Allegati, ValidationContext<Allegati>, CancellationToken, Task<bool>>, Action) AbstractValidator<Allegati>.UnlessAsync(Func<Allegati, CancellationToken, Task<bool>>, Action) AbstractValidator<Allegati>.UnlessAsync(Func<Allegati, ValidationContext<Allegati>, CancellationToken, Task<bool>>, Action) AbstractValidator<Allegati>.Include(IValidator<Allegati>) AbstractValidator<Allegati>.Include<TValidator>(Func<Allegati, TValidator>) AbstractValidator<Allegati>.GetEnumerator() AbstractValidator<Allegati>.EnsureInstanceNotNull(object) AbstractValidator<Allegati>.PreValidate(ValidationContext<Allegati>, ValidationResult) AbstractValidator<Allegati>.RaiseValidationException(ValidationContext<Allegati>, ValidationResult) AbstractValidator<Allegati>.CascadeMode AbstractValidator<Allegati>.ClassLevelCascadeMode AbstractValidator<Allegati>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AllegatiValidator() public AllegatiValidator()"
  },
  "api/FatturaElettronica.Validators.Semplificata.AltriDatiIdentificativiValidator.html": {
    "href": "api/FatturaElettronica.Validators.Semplificata.AltriDatiIdentificativiValidator.html",
    "title": "Class AltriDatiIdentificativiValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class AltriDatiIdentificativiValidator Namespace FatturaElettronica.Validators.Semplificata Assembly FatturaElettronica.dll public class AltriDatiIdentificativiValidator : AbstractValidator<AltriDatiIdentificativi>, IValidator<AltriDatiIdentificativi>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<AltriDatiIdentificativi> AltriDatiIdentificativiValidator Implements IValidator<AltriDatiIdentificativi> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<AltriDatiIdentificativi>.Validate(AltriDatiIdentificativi) AbstractValidator<AltriDatiIdentificativi>.ValidateAsync(AltriDatiIdentificativi, CancellationToken) AbstractValidator<AltriDatiIdentificativi>.Validate(ValidationContext<AltriDatiIdentificativi>) AbstractValidator<AltriDatiIdentificativi>.ValidateAsync(ValidationContext<AltriDatiIdentificativi>, CancellationToken) AbstractValidator<AltriDatiIdentificativi>.CreateDescriptor() AbstractValidator<AltriDatiIdentificativi>.RuleFor<TProperty>(Expression<Func<AltriDatiIdentificativi, TProperty>>) AbstractValidator<AltriDatiIdentificativi>.Transform<TProperty, TTransformed>(Expression<Func<AltriDatiIdentificativi, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<AltriDatiIdentificativi>.Transform<TProperty, TTransformed>(Expression<Func<AltriDatiIdentificativi, TProperty>>, Func<AltriDatiIdentificativi, TProperty, TTransformed>) AbstractValidator<AltriDatiIdentificativi>.RuleForEach<TElement>(Expression<Func<AltriDatiIdentificativi, IEnumerable<TElement>>>) AbstractValidator<AltriDatiIdentificativi>.TransformForEach<TElement, TTransformed>(Expression<Func<AltriDatiIdentificativi, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<AltriDatiIdentificativi>.TransformForEach<TElement, TTransformed>(Expression<Func<AltriDatiIdentificativi, IEnumerable<TElement>>>, Func<AltriDatiIdentificativi, TElement, TTransformed>) AbstractValidator<AltriDatiIdentificativi>.RuleSet(string, Action) AbstractValidator<AltriDatiIdentificativi>.When(Func<AltriDatiIdentificativi, bool>, Action) AbstractValidator<AltriDatiIdentificativi>.When(Func<AltriDatiIdentificativi, ValidationContext<AltriDatiIdentificativi>, bool>, Action) AbstractValidator<AltriDatiIdentificativi>.Unless(Func<AltriDatiIdentificativi, bool>, Action) AbstractValidator<AltriDatiIdentificativi>.Unless(Func<AltriDatiIdentificativi, ValidationContext<AltriDatiIdentificativi>, bool>, Action) AbstractValidator<AltriDatiIdentificativi>.WhenAsync(Func<AltriDatiIdentificativi, CancellationToken, Task<bool>>, Action) AbstractValidator<AltriDatiIdentificativi>.WhenAsync(Func<AltriDatiIdentificativi, ValidationContext<AltriDatiIdentificativi>, CancellationToken, Task<bool>>, Action) AbstractValidator<AltriDatiIdentificativi>.UnlessAsync(Func<AltriDatiIdentificativi, CancellationToken, Task<bool>>, Action) AbstractValidator<AltriDatiIdentificativi>.UnlessAsync(Func<AltriDatiIdentificativi, ValidationContext<AltriDatiIdentificativi>, CancellationToken, Task<bool>>, Action) AbstractValidator<AltriDatiIdentificativi>.Include(IValidator<AltriDatiIdentificativi>) AbstractValidator<AltriDatiIdentificativi>.Include<TValidator>(Func<AltriDatiIdentificativi, TValidator>) AbstractValidator<AltriDatiIdentificativi>.GetEnumerator() AbstractValidator<AltriDatiIdentificativi>.EnsureInstanceNotNull(object) AbstractValidator<AltriDatiIdentificativi>.PreValidate(ValidationContext<AltriDatiIdentificativi>, ValidationResult) AbstractValidator<AltriDatiIdentificativi>.RaiseValidationException(ValidationContext<AltriDatiIdentificativi>, ValidationResult) AbstractValidator<AltriDatiIdentificativi>.CascadeMode AbstractValidator<AltriDatiIdentificativi>.ClassLevelCascadeMode AbstractValidator<AltriDatiIdentificativi>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AltriDatiIdentificativiValidator() public AltriDatiIdentificativiValidator()"
  },
  "api/FatturaElettronica.Validators.Semplificata.CedentePrestatoreValidator.html": {
    "href": "api/FatturaElettronica.Validators.Semplificata.CedentePrestatoreValidator.html",
    "title": "Class CedentePrestatoreValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class CedentePrestatoreValidator Namespace FatturaElettronica.Validators.Semplificata Assembly FatturaElettronica.dll public class CedentePrestatoreValidator : AbstractValidator<CedentePrestatore>, IValidator<CedentePrestatore>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<CedentePrestatore> CedentePrestatoreValidator Implements IValidator<CedentePrestatore> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<CedentePrestatore>.Validate(CedentePrestatore) AbstractValidator<CedentePrestatore>.ValidateAsync(CedentePrestatore, CancellationToken) AbstractValidator<CedentePrestatore>.Validate(ValidationContext<CedentePrestatore>) AbstractValidator<CedentePrestatore>.ValidateAsync(ValidationContext<CedentePrestatore>, CancellationToken) AbstractValidator<CedentePrestatore>.CreateDescriptor() AbstractValidator<CedentePrestatore>.RuleFor<TProperty>(Expression<Func<CedentePrestatore, TProperty>>) AbstractValidator<CedentePrestatore>.Transform<TProperty, TTransformed>(Expression<Func<CedentePrestatore, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<CedentePrestatore>.Transform<TProperty, TTransformed>(Expression<Func<CedentePrestatore, TProperty>>, Func<CedentePrestatore, TProperty, TTransformed>) AbstractValidator<CedentePrestatore>.RuleForEach<TElement>(Expression<Func<CedentePrestatore, IEnumerable<TElement>>>) AbstractValidator<CedentePrestatore>.TransformForEach<TElement, TTransformed>(Expression<Func<CedentePrestatore, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<CedentePrestatore>.TransformForEach<TElement, TTransformed>(Expression<Func<CedentePrestatore, IEnumerable<TElement>>>, Func<CedentePrestatore, TElement, TTransformed>) AbstractValidator<CedentePrestatore>.RuleSet(string, Action) AbstractValidator<CedentePrestatore>.When(Func<CedentePrestatore, bool>, Action) AbstractValidator<CedentePrestatore>.When(Func<CedentePrestatore, ValidationContext<CedentePrestatore>, bool>, Action) AbstractValidator<CedentePrestatore>.Unless(Func<CedentePrestatore, bool>, Action) AbstractValidator<CedentePrestatore>.Unless(Func<CedentePrestatore, ValidationContext<CedentePrestatore>, bool>, Action) AbstractValidator<CedentePrestatore>.WhenAsync(Func<CedentePrestatore, CancellationToken, Task<bool>>, Action) AbstractValidator<CedentePrestatore>.WhenAsync(Func<CedentePrestatore, ValidationContext<CedentePrestatore>, CancellationToken, Task<bool>>, Action) AbstractValidator<CedentePrestatore>.UnlessAsync(Func<CedentePrestatore, CancellationToken, Task<bool>>, Action) AbstractValidator<CedentePrestatore>.UnlessAsync(Func<CedentePrestatore, ValidationContext<CedentePrestatore>, CancellationToken, Task<bool>>, Action) AbstractValidator<CedentePrestatore>.Include(IValidator<CedentePrestatore>) AbstractValidator<CedentePrestatore>.Include<TValidator>(Func<CedentePrestatore, TValidator>) AbstractValidator<CedentePrestatore>.GetEnumerator() AbstractValidator<CedentePrestatore>.EnsureInstanceNotNull(object) AbstractValidator<CedentePrestatore>.PreValidate(ValidationContext<CedentePrestatore>, ValidationResult) AbstractValidator<CedentePrestatore>.RaiseValidationException(ValidationContext<CedentePrestatore>, ValidationResult) AbstractValidator<CedentePrestatore>.CascadeMode AbstractValidator<CedentePrestatore>.ClassLevelCascadeMode AbstractValidator<CedentePrestatore>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CedentePrestatoreValidator() public CedentePrestatoreValidator()"
  },
  "api/FatturaElettronica.Validators.Semplificata.CessionarioCommittenteValidator.html": {
    "href": "api/FatturaElettronica.Validators.Semplificata.CessionarioCommittenteValidator.html",
    "title": "Class CessionarioCommittenteValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class CessionarioCommittenteValidator Namespace FatturaElettronica.Validators.Semplificata Assembly FatturaElettronica.dll public class CessionarioCommittenteValidator : AbstractValidator<CessionarioCommittente>, IValidator<CessionarioCommittente>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<CessionarioCommittente> CessionarioCommittenteValidator Implements IValidator<CessionarioCommittente> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<CessionarioCommittente>.Validate(CessionarioCommittente) AbstractValidator<CessionarioCommittente>.ValidateAsync(CessionarioCommittente, CancellationToken) AbstractValidator<CessionarioCommittente>.Validate(ValidationContext<CessionarioCommittente>) AbstractValidator<CessionarioCommittente>.ValidateAsync(ValidationContext<CessionarioCommittente>, CancellationToken) AbstractValidator<CessionarioCommittente>.CreateDescriptor() AbstractValidator<CessionarioCommittente>.RuleFor<TProperty>(Expression<Func<CessionarioCommittente, TProperty>>) AbstractValidator<CessionarioCommittente>.Transform<TProperty, TTransformed>(Expression<Func<CessionarioCommittente, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<CessionarioCommittente>.Transform<TProperty, TTransformed>(Expression<Func<CessionarioCommittente, TProperty>>, Func<CessionarioCommittente, TProperty, TTransformed>) AbstractValidator<CessionarioCommittente>.RuleForEach<TElement>(Expression<Func<CessionarioCommittente, IEnumerable<TElement>>>) AbstractValidator<CessionarioCommittente>.TransformForEach<TElement, TTransformed>(Expression<Func<CessionarioCommittente, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<CessionarioCommittente>.TransformForEach<TElement, TTransformed>(Expression<Func<CessionarioCommittente, IEnumerable<TElement>>>, Func<CessionarioCommittente, TElement, TTransformed>) AbstractValidator<CessionarioCommittente>.RuleSet(string, Action) AbstractValidator<CessionarioCommittente>.When(Func<CessionarioCommittente, bool>, Action) AbstractValidator<CessionarioCommittente>.When(Func<CessionarioCommittente, ValidationContext<CessionarioCommittente>, bool>, Action) AbstractValidator<CessionarioCommittente>.Unless(Func<CessionarioCommittente, bool>, Action) AbstractValidator<CessionarioCommittente>.Unless(Func<CessionarioCommittente, ValidationContext<CessionarioCommittente>, bool>, Action) AbstractValidator<CessionarioCommittente>.WhenAsync(Func<CessionarioCommittente, CancellationToken, Task<bool>>, Action) AbstractValidator<CessionarioCommittente>.WhenAsync(Func<CessionarioCommittente, ValidationContext<CessionarioCommittente>, CancellationToken, Task<bool>>, Action) AbstractValidator<CessionarioCommittente>.UnlessAsync(Func<CessionarioCommittente, CancellationToken, Task<bool>>, Action) AbstractValidator<CessionarioCommittente>.UnlessAsync(Func<CessionarioCommittente, ValidationContext<CessionarioCommittente>, CancellationToken, Task<bool>>, Action) AbstractValidator<CessionarioCommittente>.Include(IValidator<CessionarioCommittente>) AbstractValidator<CessionarioCommittente>.Include<TValidator>(Func<CessionarioCommittente, TValidator>) AbstractValidator<CessionarioCommittente>.GetEnumerator() AbstractValidator<CessionarioCommittente>.EnsureInstanceNotNull(object) AbstractValidator<CessionarioCommittente>.PreValidate(ValidationContext<CessionarioCommittente>, ValidationResult) AbstractValidator<CessionarioCommittente>.RaiseValidationException(ValidationContext<CessionarioCommittente>, ValidationResult) AbstractValidator<CessionarioCommittente>.CascadeMode AbstractValidator<CessionarioCommittente>.ClassLevelCascadeMode AbstractValidator<CessionarioCommittente>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CessionarioCommittenteValidator() public CessionarioCommittenteValidator()"
  },
  "api/FatturaElettronica.Validators.Semplificata.DatiBeniServiziValidator.html": {
    "href": "api/FatturaElettronica.Validators.Semplificata.DatiBeniServiziValidator.html",
    "title": "Class DatiBeniServiziValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiBeniServiziValidator Namespace FatturaElettronica.Validators.Semplificata Assembly FatturaElettronica.dll public class DatiBeniServiziValidator : AbstractValidator<DatiBeniServizi>, IValidator<DatiBeniServizi>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiBeniServizi> DatiBeniServiziValidator Implements IValidator<DatiBeniServizi> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiBeniServizi>.Validate(DatiBeniServizi) AbstractValidator<DatiBeniServizi>.ValidateAsync(DatiBeniServizi, CancellationToken) AbstractValidator<DatiBeniServizi>.Validate(ValidationContext<DatiBeniServizi>) AbstractValidator<DatiBeniServizi>.ValidateAsync(ValidationContext<DatiBeniServizi>, CancellationToken) AbstractValidator<DatiBeniServizi>.CreateDescriptor() AbstractValidator<DatiBeniServizi>.RuleFor<TProperty>(Expression<Func<DatiBeniServizi, TProperty>>) AbstractValidator<DatiBeniServizi>.Transform<TProperty, TTransformed>(Expression<Func<DatiBeniServizi, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiBeniServizi>.Transform<TProperty, TTransformed>(Expression<Func<DatiBeniServizi, TProperty>>, Func<DatiBeniServizi, TProperty, TTransformed>) AbstractValidator<DatiBeniServizi>.RuleForEach<TElement>(Expression<Func<DatiBeniServizi, IEnumerable<TElement>>>) AbstractValidator<DatiBeniServizi>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiBeniServizi, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiBeniServizi>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiBeniServizi, IEnumerable<TElement>>>, Func<DatiBeniServizi, TElement, TTransformed>) AbstractValidator<DatiBeniServizi>.RuleSet(string, Action) AbstractValidator<DatiBeniServizi>.When(Func<DatiBeniServizi, bool>, Action) AbstractValidator<DatiBeniServizi>.When(Func<DatiBeniServizi, ValidationContext<DatiBeniServizi>, bool>, Action) AbstractValidator<DatiBeniServizi>.Unless(Func<DatiBeniServizi, bool>, Action) AbstractValidator<DatiBeniServizi>.Unless(Func<DatiBeniServizi, ValidationContext<DatiBeniServizi>, bool>, Action) AbstractValidator<DatiBeniServizi>.WhenAsync(Func<DatiBeniServizi, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiBeniServizi>.WhenAsync(Func<DatiBeniServizi, ValidationContext<DatiBeniServizi>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiBeniServizi>.UnlessAsync(Func<DatiBeniServizi, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiBeniServizi>.UnlessAsync(Func<DatiBeniServizi, ValidationContext<DatiBeniServizi>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiBeniServizi>.Include(IValidator<DatiBeniServizi>) AbstractValidator<DatiBeniServizi>.Include<TValidator>(Func<DatiBeniServizi, TValidator>) AbstractValidator<DatiBeniServizi>.GetEnumerator() AbstractValidator<DatiBeniServizi>.EnsureInstanceNotNull(object) AbstractValidator<DatiBeniServizi>.PreValidate(ValidationContext<DatiBeniServizi>, ValidationResult) AbstractValidator<DatiBeniServizi>.RaiseValidationException(ValidationContext<DatiBeniServizi>, ValidationResult) AbstractValidator<DatiBeniServizi>.CascadeMode AbstractValidator<DatiBeniServizi>.ClassLevelCascadeMode AbstractValidator<DatiBeniServizi>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiBeniServiziValidator() public DatiBeniServiziValidator()"
  },
  "api/FatturaElettronica.Validators.Semplificata.DatiFatturaRettificataValidator.html": {
    "href": "api/FatturaElettronica.Validators.Semplificata.DatiFatturaRettificataValidator.html",
    "title": "Class DatiFatturaRettificataValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiFatturaRettificataValidator Namespace FatturaElettronica.Validators.Semplificata Assembly FatturaElettronica.dll public class DatiFatturaRettificataValidator : AbstractValidator<DatiFatturaRettificata>, IValidator<DatiFatturaRettificata>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiFatturaRettificata> DatiFatturaRettificataValidator Implements IValidator<DatiFatturaRettificata> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiFatturaRettificata>.Validate(DatiFatturaRettificata) AbstractValidator<DatiFatturaRettificata>.ValidateAsync(DatiFatturaRettificata, CancellationToken) AbstractValidator<DatiFatturaRettificata>.Validate(ValidationContext<DatiFatturaRettificata>) AbstractValidator<DatiFatturaRettificata>.ValidateAsync(ValidationContext<DatiFatturaRettificata>, CancellationToken) AbstractValidator<DatiFatturaRettificata>.CreateDescriptor() AbstractValidator<DatiFatturaRettificata>.RuleFor<TProperty>(Expression<Func<DatiFatturaRettificata, TProperty>>) AbstractValidator<DatiFatturaRettificata>.Transform<TProperty, TTransformed>(Expression<Func<DatiFatturaRettificata, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiFatturaRettificata>.Transform<TProperty, TTransformed>(Expression<Func<DatiFatturaRettificata, TProperty>>, Func<DatiFatturaRettificata, TProperty, TTransformed>) AbstractValidator<DatiFatturaRettificata>.RuleForEach<TElement>(Expression<Func<DatiFatturaRettificata, IEnumerable<TElement>>>) AbstractValidator<DatiFatturaRettificata>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiFatturaRettificata, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiFatturaRettificata>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiFatturaRettificata, IEnumerable<TElement>>>, Func<DatiFatturaRettificata, TElement, TTransformed>) AbstractValidator<DatiFatturaRettificata>.RuleSet(string, Action) AbstractValidator<DatiFatturaRettificata>.When(Func<DatiFatturaRettificata, bool>, Action) AbstractValidator<DatiFatturaRettificata>.When(Func<DatiFatturaRettificata, ValidationContext<DatiFatturaRettificata>, bool>, Action) AbstractValidator<DatiFatturaRettificata>.Unless(Func<DatiFatturaRettificata, bool>, Action) AbstractValidator<DatiFatturaRettificata>.Unless(Func<DatiFatturaRettificata, ValidationContext<DatiFatturaRettificata>, bool>, Action) AbstractValidator<DatiFatturaRettificata>.WhenAsync(Func<DatiFatturaRettificata, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiFatturaRettificata>.WhenAsync(Func<DatiFatturaRettificata, ValidationContext<DatiFatturaRettificata>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiFatturaRettificata>.UnlessAsync(Func<DatiFatturaRettificata, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiFatturaRettificata>.UnlessAsync(Func<DatiFatturaRettificata, ValidationContext<DatiFatturaRettificata>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiFatturaRettificata>.Include(IValidator<DatiFatturaRettificata>) AbstractValidator<DatiFatturaRettificata>.Include<TValidator>(Func<DatiFatturaRettificata, TValidator>) AbstractValidator<DatiFatturaRettificata>.GetEnumerator() AbstractValidator<DatiFatturaRettificata>.EnsureInstanceNotNull(object) AbstractValidator<DatiFatturaRettificata>.PreValidate(ValidationContext<DatiFatturaRettificata>, ValidationResult) AbstractValidator<DatiFatturaRettificata>.RaiseValidationException(ValidationContext<DatiFatturaRettificata>, ValidationResult) AbstractValidator<DatiFatturaRettificata>.CascadeMode AbstractValidator<DatiFatturaRettificata>.ClassLevelCascadeMode AbstractValidator<DatiFatturaRettificata>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiFatturaRettificataValidator() public DatiFatturaRettificataValidator()"
  },
  "api/FatturaElettronica.Validators.Semplificata.DatiGeneraliDocumentoValidator.html": {
    "href": "api/FatturaElettronica.Validators.Semplificata.DatiGeneraliDocumentoValidator.html",
    "title": "Class DatiGeneraliDocumentoValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiGeneraliDocumentoValidator Namespace FatturaElettronica.Validators.Semplificata Assembly FatturaElettronica.dll public class DatiGeneraliDocumentoValidator : AbstractValidator<DatiGeneraliDocumento>, IValidator<DatiGeneraliDocumento>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiGeneraliDocumento> DatiGeneraliDocumentoValidator Implements IValidator<DatiGeneraliDocumento> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiGeneraliDocumento>.Validate(DatiGeneraliDocumento) AbstractValidator<DatiGeneraliDocumento>.ValidateAsync(DatiGeneraliDocumento, CancellationToken) AbstractValidator<DatiGeneraliDocumento>.Validate(ValidationContext<DatiGeneraliDocumento>) AbstractValidator<DatiGeneraliDocumento>.ValidateAsync(ValidationContext<DatiGeneraliDocumento>, CancellationToken) AbstractValidator<DatiGeneraliDocumento>.CreateDescriptor() AbstractValidator<DatiGeneraliDocumento>.RuleFor<TProperty>(Expression<Func<DatiGeneraliDocumento, TProperty>>) AbstractValidator<DatiGeneraliDocumento>.Transform<TProperty, TTransformed>(Expression<Func<DatiGeneraliDocumento, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiGeneraliDocumento>.Transform<TProperty, TTransformed>(Expression<Func<DatiGeneraliDocumento, TProperty>>, Func<DatiGeneraliDocumento, TProperty, TTransformed>) AbstractValidator<DatiGeneraliDocumento>.RuleForEach<TElement>(Expression<Func<DatiGeneraliDocumento, IEnumerable<TElement>>>) AbstractValidator<DatiGeneraliDocumento>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiGeneraliDocumento, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiGeneraliDocumento>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiGeneraliDocumento, IEnumerable<TElement>>>, Func<DatiGeneraliDocumento, TElement, TTransformed>) AbstractValidator<DatiGeneraliDocumento>.RuleSet(string, Action) AbstractValidator<DatiGeneraliDocumento>.When(Func<DatiGeneraliDocumento, bool>, Action) AbstractValidator<DatiGeneraliDocumento>.When(Func<DatiGeneraliDocumento, ValidationContext<DatiGeneraliDocumento>, bool>, Action) AbstractValidator<DatiGeneraliDocumento>.Unless(Func<DatiGeneraliDocumento, bool>, Action) AbstractValidator<DatiGeneraliDocumento>.Unless(Func<DatiGeneraliDocumento, ValidationContext<DatiGeneraliDocumento>, bool>, Action) AbstractValidator<DatiGeneraliDocumento>.WhenAsync(Func<DatiGeneraliDocumento, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiGeneraliDocumento>.WhenAsync(Func<DatiGeneraliDocumento, ValidationContext<DatiGeneraliDocumento>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiGeneraliDocumento>.UnlessAsync(Func<DatiGeneraliDocumento, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiGeneraliDocumento>.UnlessAsync(Func<DatiGeneraliDocumento, ValidationContext<DatiGeneraliDocumento>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiGeneraliDocumento>.Include(IValidator<DatiGeneraliDocumento>) AbstractValidator<DatiGeneraliDocumento>.Include<TValidator>(Func<DatiGeneraliDocumento, TValidator>) AbstractValidator<DatiGeneraliDocumento>.GetEnumerator() AbstractValidator<DatiGeneraliDocumento>.EnsureInstanceNotNull(object) AbstractValidator<DatiGeneraliDocumento>.PreValidate(ValidationContext<DatiGeneraliDocumento>, ValidationResult) AbstractValidator<DatiGeneraliDocumento>.RaiseValidationException(ValidationContext<DatiGeneraliDocumento>, ValidationResult) AbstractValidator<DatiGeneraliDocumento>.CascadeMode AbstractValidator<DatiGeneraliDocumento>.ClassLevelCascadeMode AbstractValidator<DatiGeneraliDocumento>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiGeneraliDocumentoValidator() public DatiGeneraliDocumentoValidator()"
  },
  "api/FatturaElettronica.Validators.Semplificata.DatiGeneraliValidator.html": {
    "href": "api/FatturaElettronica.Validators.Semplificata.DatiGeneraliValidator.html",
    "title": "Class DatiGeneraliValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiGeneraliValidator Namespace FatturaElettronica.Validators.Semplificata Assembly FatturaElettronica.dll public class DatiGeneraliValidator : AbstractValidator<DatiGenerali>, IValidator<DatiGenerali>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiGenerali> DatiGeneraliValidator Implements IValidator<DatiGenerali> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiGenerali>.Validate(DatiGenerali) AbstractValidator<DatiGenerali>.ValidateAsync(DatiGenerali, CancellationToken) AbstractValidator<DatiGenerali>.Validate(ValidationContext<DatiGenerali>) AbstractValidator<DatiGenerali>.ValidateAsync(ValidationContext<DatiGenerali>, CancellationToken) AbstractValidator<DatiGenerali>.CreateDescriptor() AbstractValidator<DatiGenerali>.RuleFor<TProperty>(Expression<Func<DatiGenerali, TProperty>>) AbstractValidator<DatiGenerali>.Transform<TProperty, TTransformed>(Expression<Func<DatiGenerali, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiGenerali>.Transform<TProperty, TTransformed>(Expression<Func<DatiGenerali, TProperty>>, Func<DatiGenerali, TProperty, TTransformed>) AbstractValidator<DatiGenerali>.RuleForEach<TElement>(Expression<Func<DatiGenerali, IEnumerable<TElement>>>) AbstractValidator<DatiGenerali>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiGenerali, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiGenerali>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiGenerali, IEnumerable<TElement>>>, Func<DatiGenerali, TElement, TTransformed>) AbstractValidator<DatiGenerali>.RuleSet(string, Action) AbstractValidator<DatiGenerali>.When(Func<DatiGenerali, bool>, Action) AbstractValidator<DatiGenerali>.When(Func<DatiGenerali, ValidationContext<DatiGenerali>, bool>, Action) AbstractValidator<DatiGenerali>.Unless(Func<DatiGenerali, bool>, Action) AbstractValidator<DatiGenerali>.Unless(Func<DatiGenerali, ValidationContext<DatiGenerali>, bool>, Action) AbstractValidator<DatiGenerali>.WhenAsync(Func<DatiGenerali, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiGenerali>.WhenAsync(Func<DatiGenerali, ValidationContext<DatiGenerali>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiGenerali>.UnlessAsync(Func<DatiGenerali, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiGenerali>.UnlessAsync(Func<DatiGenerali, ValidationContext<DatiGenerali>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiGenerali>.Include(IValidator<DatiGenerali>) AbstractValidator<DatiGenerali>.Include<TValidator>(Func<DatiGenerali, TValidator>) AbstractValidator<DatiGenerali>.GetEnumerator() AbstractValidator<DatiGenerali>.EnsureInstanceNotNull(object) AbstractValidator<DatiGenerali>.PreValidate(ValidationContext<DatiGenerali>, ValidationResult) AbstractValidator<DatiGenerali>.RaiseValidationException(ValidationContext<DatiGenerali>, ValidationResult) AbstractValidator<DatiGenerali>.CascadeMode AbstractValidator<DatiGenerali>.ClassLevelCascadeMode AbstractValidator<DatiGenerali>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiGeneraliValidator() public DatiGeneraliValidator()"
  },
  "api/FatturaElettronica.Validators.Semplificata.DatiIVAValidator.html": {
    "href": "api/FatturaElettronica.Validators.Semplificata.DatiIVAValidator.html",
    "title": "Class DatiIVAValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiIVAValidator Namespace FatturaElettronica.Validators.Semplificata Assembly FatturaElettronica.dll public class DatiIVAValidator : AbstractValidator<DatiIVA>, IValidator<DatiIVA>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiIVA> DatiIVAValidator Implements IValidator<DatiIVA> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiIVA>.Validate(DatiIVA) AbstractValidator<DatiIVA>.ValidateAsync(DatiIVA, CancellationToken) AbstractValidator<DatiIVA>.Validate(ValidationContext<DatiIVA>) AbstractValidator<DatiIVA>.ValidateAsync(ValidationContext<DatiIVA>, CancellationToken) AbstractValidator<DatiIVA>.CreateDescriptor() AbstractValidator<DatiIVA>.RuleFor<TProperty>(Expression<Func<DatiIVA, TProperty>>) AbstractValidator<DatiIVA>.Transform<TProperty, TTransformed>(Expression<Func<DatiIVA, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiIVA>.Transform<TProperty, TTransformed>(Expression<Func<DatiIVA, TProperty>>, Func<DatiIVA, TProperty, TTransformed>) AbstractValidator<DatiIVA>.RuleForEach<TElement>(Expression<Func<DatiIVA, IEnumerable<TElement>>>) AbstractValidator<DatiIVA>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiIVA, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiIVA>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiIVA, IEnumerable<TElement>>>, Func<DatiIVA, TElement, TTransformed>) AbstractValidator<DatiIVA>.RuleSet(string, Action) AbstractValidator<DatiIVA>.When(Func<DatiIVA, bool>, Action) AbstractValidator<DatiIVA>.When(Func<DatiIVA, ValidationContext<DatiIVA>, bool>, Action) AbstractValidator<DatiIVA>.Unless(Func<DatiIVA, bool>, Action) AbstractValidator<DatiIVA>.Unless(Func<DatiIVA, ValidationContext<DatiIVA>, bool>, Action) AbstractValidator<DatiIVA>.WhenAsync(Func<DatiIVA, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiIVA>.WhenAsync(Func<DatiIVA, ValidationContext<DatiIVA>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiIVA>.UnlessAsync(Func<DatiIVA, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiIVA>.UnlessAsync(Func<DatiIVA, ValidationContext<DatiIVA>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiIVA>.Include(IValidator<DatiIVA>) AbstractValidator<DatiIVA>.Include<TValidator>(Func<DatiIVA, TValidator>) AbstractValidator<DatiIVA>.GetEnumerator() AbstractValidator<DatiIVA>.EnsureInstanceNotNull(object) AbstractValidator<DatiIVA>.PreValidate(ValidationContext<DatiIVA>, ValidationResult) AbstractValidator<DatiIVA>.RaiseValidationException(ValidationContext<DatiIVA>, ValidationResult) AbstractValidator<DatiIVA>.CascadeMode AbstractValidator<DatiIVA>.ClassLevelCascadeMode AbstractValidator<DatiIVA>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiIVAValidator() public DatiIVAValidator()"
  },
  "api/FatturaElettronica.Validators.Semplificata.DatiTrasmissioneValidator.html": {
    "href": "api/FatturaElettronica.Validators.Semplificata.DatiTrasmissioneValidator.html",
    "title": "Class DatiTrasmissioneValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DatiTrasmissioneValidator Namespace FatturaElettronica.Validators.Semplificata Assembly FatturaElettronica.dll public class DatiTrasmissioneValidator : AbstractValidator<DatiTrasmissione>, IValidator<DatiTrasmissione>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DatiTrasmissione> DatiTrasmissioneValidator Implements IValidator<DatiTrasmissione> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DatiTrasmissione>.Validate(DatiTrasmissione) AbstractValidator<DatiTrasmissione>.ValidateAsync(DatiTrasmissione, CancellationToken) AbstractValidator<DatiTrasmissione>.Validate(ValidationContext<DatiTrasmissione>) AbstractValidator<DatiTrasmissione>.ValidateAsync(ValidationContext<DatiTrasmissione>, CancellationToken) AbstractValidator<DatiTrasmissione>.CreateDescriptor() AbstractValidator<DatiTrasmissione>.RuleFor<TProperty>(Expression<Func<DatiTrasmissione, TProperty>>) AbstractValidator<DatiTrasmissione>.Transform<TProperty, TTransformed>(Expression<Func<DatiTrasmissione, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DatiTrasmissione>.Transform<TProperty, TTransformed>(Expression<Func<DatiTrasmissione, TProperty>>, Func<DatiTrasmissione, TProperty, TTransformed>) AbstractValidator<DatiTrasmissione>.RuleForEach<TElement>(Expression<Func<DatiTrasmissione, IEnumerable<TElement>>>) AbstractValidator<DatiTrasmissione>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiTrasmissione, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DatiTrasmissione>.TransformForEach<TElement, TTransformed>(Expression<Func<DatiTrasmissione, IEnumerable<TElement>>>, Func<DatiTrasmissione, TElement, TTransformed>) AbstractValidator<DatiTrasmissione>.RuleSet(string, Action) AbstractValidator<DatiTrasmissione>.When(Func<DatiTrasmissione, bool>, Action) AbstractValidator<DatiTrasmissione>.When(Func<DatiTrasmissione, ValidationContext<DatiTrasmissione>, bool>, Action) AbstractValidator<DatiTrasmissione>.Unless(Func<DatiTrasmissione, bool>, Action) AbstractValidator<DatiTrasmissione>.Unless(Func<DatiTrasmissione, ValidationContext<DatiTrasmissione>, bool>, Action) AbstractValidator<DatiTrasmissione>.WhenAsync(Func<DatiTrasmissione, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiTrasmissione>.WhenAsync(Func<DatiTrasmissione, ValidationContext<DatiTrasmissione>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiTrasmissione>.UnlessAsync(Func<DatiTrasmissione, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiTrasmissione>.UnlessAsync(Func<DatiTrasmissione, ValidationContext<DatiTrasmissione>, CancellationToken, Task<bool>>, Action) AbstractValidator<DatiTrasmissione>.Include(IValidator<DatiTrasmissione>) AbstractValidator<DatiTrasmissione>.Include<TValidator>(Func<DatiTrasmissione, TValidator>) AbstractValidator<DatiTrasmissione>.GetEnumerator() AbstractValidator<DatiTrasmissione>.EnsureInstanceNotNull(object) AbstractValidator<DatiTrasmissione>.PreValidate(ValidationContext<DatiTrasmissione>, ValidationResult) AbstractValidator<DatiTrasmissione>.RaiseValidationException(ValidationContext<DatiTrasmissione>, ValidationResult) AbstractValidator<DatiTrasmissione>.CascadeMode AbstractValidator<DatiTrasmissione>.ClassLevelCascadeMode AbstractValidator<DatiTrasmissione>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DatiTrasmissioneValidator() public DatiTrasmissioneValidator()"
  },
  "api/FatturaElettronica.Validators.Semplificata.DenominazioneNomeCognomeValidator-1.html": {
    "href": "api/FatturaElettronica.Validators.Semplificata.DenominazioneNomeCognomeValidator-1.html",
    "title": "Class DenominazioneNomeCognomeValidator<T> | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class DenominazioneNomeCognomeValidator<T> Namespace FatturaElettronica.Validators.Semplificata Assembly FatturaElettronica.dll public abstract class DenominazioneNomeCognomeValidator<T> : AbstractValidator<T>, IValidator<T>, IValidator, IEnumerable<IValidationRule>, IEnumerable where T : DenominazioneNomeCognome Type Parameters T Inheritance object AbstractValidator<T> DenominazioneNomeCognomeValidator<T> Implements IValidator<T> IValidator IEnumerable<IValidationRule> IEnumerable Derived RappresentanteFiscaleCessionarioCommittenteValidator Inherited Members AbstractValidator<T>.Validate(T) AbstractValidator<T>.ValidateAsync(T, CancellationToken) AbstractValidator<T>.Validate(ValidationContext<T>) AbstractValidator<T>.ValidateAsync(ValidationContext<T>, CancellationToken) AbstractValidator<T>.CreateDescriptor() AbstractValidator<T>.RuleFor<TProperty>(Expression<Func<T, TProperty>>) AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<T, TProperty, TTransformed>) AbstractValidator<T>.RuleForEach<TElement>(Expression<Func<T, IEnumerable<TElement>>>) AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<T, TElement, TTransformed>) AbstractValidator<T>.RuleSet(string, Action) AbstractValidator<T>.When(Func<T, bool>, Action) AbstractValidator<T>.When(Func<T, ValidationContext<T>, bool>, Action) AbstractValidator<T>.Unless(Func<T, bool>, Action) AbstractValidator<T>.Unless(Func<T, ValidationContext<T>, bool>, Action) AbstractValidator<T>.WhenAsync(Func<T, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.WhenAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.UnlessAsync(Func<T, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.UnlessAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.Include(IValidator<T>) AbstractValidator<T>.Include<TValidator>(Func<T, TValidator>) AbstractValidator<T>.GetEnumerator() AbstractValidator<T>.EnsureInstanceNotNull(object) AbstractValidator<T>.PreValidate(ValidationContext<T>, ValidationResult) AbstractValidator<T>.RaiseValidationException(ValidationContext<T>, ValidationResult) AbstractValidator<T>.CascadeMode AbstractValidator<T>.ClassLevelCascadeMode AbstractValidator<T>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DenominazioneNomeCognomeValidator() protected DenominazioneNomeCognomeValidator()"
  },
  "api/FatturaElettronica.Validators.Semplificata.FatturaElettronicaBodyValidator.html": {
    "href": "api/FatturaElettronica.Validators.Semplificata.FatturaElettronicaBodyValidator.html",
    "title": "Class FatturaElettronicaBodyValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class FatturaElettronicaBodyValidator Namespace FatturaElettronica.Validators.Semplificata Assembly FatturaElettronica.dll public class FatturaElettronicaBodyValidator : AbstractValidator<FatturaElettronicaBody>, IValidator<FatturaElettronicaBody>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<FatturaElettronicaBody> FatturaElettronicaBodyValidator Implements IValidator<FatturaElettronicaBody> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<FatturaElettronicaBody>.Validate(FatturaElettronicaBody) AbstractValidator<FatturaElettronicaBody>.ValidateAsync(FatturaElettronicaBody, CancellationToken) AbstractValidator<FatturaElettronicaBody>.Validate(ValidationContext<FatturaElettronicaBody>) AbstractValidator<FatturaElettronicaBody>.ValidateAsync(ValidationContext<FatturaElettronicaBody>, CancellationToken) AbstractValidator<FatturaElettronicaBody>.CreateDescriptor() AbstractValidator<FatturaElettronicaBody>.RuleFor<TProperty>(Expression<Func<FatturaElettronicaBody, TProperty>>) AbstractValidator<FatturaElettronicaBody>.Transform<TProperty, TTransformed>(Expression<Func<FatturaElettronicaBody, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<FatturaElettronicaBody>.Transform<TProperty, TTransformed>(Expression<Func<FatturaElettronicaBody, TProperty>>, Func<FatturaElettronicaBody, TProperty, TTransformed>) AbstractValidator<FatturaElettronicaBody>.RuleForEach<TElement>(Expression<Func<FatturaElettronicaBody, IEnumerable<TElement>>>) AbstractValidator<FatturaElettronicaBody>.TransformForEach<TElement, TTransformed>(Expression<Func<FatturaElettronicaBody, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<FatturaElettronicaBody>.TransformForEach<TElement, TTransformed>(Expression<Func<FatturaElettronicaBody, IEnumerable<TElement>>>, Func<FatturaElettronicaBody, TElement, TTransformed>) AbstractValidator<FatturaElettronicaBody>.RuleSet(string, Action) AbstractValidator<FatturaElettronicaBody>.When(Func<FatturaElettronicaBody, bool>, Action) AbstractValidator<FatturaElettronicaBody>.When(Func<FatturaElettronicaBody, ValidationContext<FatturaElettronicaBody>, bool>, Action) AbstractValidator<FatturaElettronicaBody>.Unless(Func<FatturaElettronicaBody, bool>, Action) AbstractValidator<FatturaElettronicaBody>.Unless(Func<FatturaElettronicaBody, ValidationContext<FatturaElettronicaBody>, bool>, Action) AbstractValidator<FatturaElettronicaBody>.WhenAsync(Func<FatturaElettronicaBody, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaElettronicaBody>.WhenAsync(Func<FatturaElettronicaBody, ValidationContext<FatturaElettronicaBody>, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaElettronicaBody>.UnlessAsync(Func<FatturaElettronicaBody, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaElettronicaBody>.UnlessAsync(Func<FatturaElettronicaBody, ValidationContext<FatturaElettronicaBody>, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaElettronicaBody>.Include(IValidator<FatturaElettronicaBody>) AbstractValidator<FatturaElettronicaBody>.Include<TValidator>(Func<FatturaElettronicaBody, TValidator>) AbstractValidator<FatturaElettronicaBody>.GetEnumerator() AbstractValidator<FatturaElettronicaBody>.EnsureInstanceNotNull(object) AbstractValidator<FatturaElettronicaBody>.PreValidate(ValidationContext<FatturaElettronicaBody>, ValidationResult) AbstractValidator<FatturaElettronicaBody>.RaiseValidationException(ValidationContext<FatturaElettronicaBody>, ValidationResult) AbstractValidator<FatturaElettronicaBody>.CascadeMode AbstractValidator<FatturaElettronicaBody>.ClassLevelCascadeMode AbstractValidator<FatturaElettronicaBody>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FatturaElettronicaBodyValidator() public FatturaElettronicaBodyValidator()"
  },
  "api/FatturaElettronica.Validators.Semplificata.FatturaElettronicaHeaderValidator.html": {
    "href": "api/FatturaElettronica.Validators.Semplificata.FatturaElettronicaHeaderValidator.html",
    "title": "Class FatturaElettronicaHeaderValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class FatturaElettronicaHeaderValidator Namespace FatturaElettronica.Validators.Semplificata Assembly FatturaElettronica.dll public class FatturaElettronicaHeaderValidator : AbstractValidator<FatturaElettronicaHeader>, IValidator<FatturaElettronicaHeader>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<FatturaElettronicaHeader> FatturaElettronicaHeaderValidator Implements IValidator<FatturaElettronicaHeader> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<FatturaElettronicaHeader>.Validate(FatturaElettronicaHeader) AbstractValidator<FatturaElettronicaHeader>.ValidateAsync(FatturaElettronicaHeader, CancellationToken) AbstractValidator<FatturaElettronicaHeader>.Validate(ValidationContext<FatturaElettronicaHeader>) AbstractValidator<FatturaElettronicaHeader>.ValidateAsync(ValidationContext<FatturaElettronicaHeader>, CancellationToken) AbstractValidator<FatturaElettronicaHeader>.CreateDescriptor() AbstractValidator<FatturaElettronicaHeader>.RuleFor<TProperty>(Expression<Func<FatturaElettronicaHeader, TProperty>>) AbstractValidator<FatturaElettronicaHeader>.Transform<TProperty, TTransformed>(Expression<Func<FatturaElettronicaHeader, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<FatturaElettronicaHeader>.Transform<TProperty, TTransformed>(Expression<Func<FatturaElettronicaHeader, TProperty>>, Func<FatturaElettronicaHeader, TProperty, TTransformed>) AbstractValidator<FatturaElettronicaHeader>.RuleForEach<TElement>(Expression<Func<FatturaElettronicaHeader, IEnumerable<TElement>>>) AbstractValidator<FatturaElettronicaHeader>.TransformForEach<TElement, TTransformed>(Expression<Func<FatturaElettronicaHeader, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<FatturaElettronicaHeader>.TransformForEach<TElement, TTransformed>(Expression<Func<FatturaElettronicaHeader, IEnumerable<TElement>>>, Func<FatturaElettronicaHeader, TElement, TTransformed>) AbstractValidator<FatturaElettronicaHeader>.RuleSet(string, Action) AbstractValidator<FatturaElettronicaHeader>.When(Func<FatturaElettronicaHeader, bool>, Action) AbstractValidator<FatturaElettronicaHeader>.When(Func<FatturaElettronicaHeader, ValidationContext<FatturaElettronicaHeader>, bool>, Action) AbstractValidator<FatturaElettronicaHeader>.Unless(Func<FatturaElettronicaHeader, bool>, Action) AbstractValidator<FatturaElettronicaHeader>.Unless(Func<FatturaElettronicaHeader, ValidationContext<FatturaElettronicaHeader>, bool>, Action) AbstractValidator<FatturaElettronicaHeader>.WhenAsync(Func<FatturaElettronicaHeader, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaElettronicaHeader>.WhenAsync(Func<FatturaElettronicaHeader, ValidationContext<FatturaElettronicaHeader>, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaElettronicaHeader>.UnlessAsync(Func<FatturaElettronicaHeader, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaElettronicaHeader>.UnlessAsync(Func<FatturaElettronicaHeader, ValidationContext<FatturaElettronicaHeader>, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaElettronicaHeader>.Include(IValidator<FatturaElettronicaHeader>) AbstractValidator<FatturaElettronicaHeader>.Include<TValidator>(Func<FatturaElettronicaHeader, TValidator>) AbstractValidator<FatturaElettronicaHeader>.GetEnumerator() AbstractValidator<FatturaElettronicaHeader>.EnsureInstanceNotNull(object) AbstractValidator<FatturaElettronicaHeader>.PreValidate(ValidationContext<FatturaElettronicaHeader>, ValidationResult) AbstractValidator<FatturaElettronicaHeader>.RaiseValidationException(ValidationContext<FatturaElettronicaHeader>, ValidationResult) AbstractValidator<FatturaElettronicaHeader>.CascadeMode AbstractValidator<FatturaElettronicaHeader>.ClassLevelCascadeMode AbstractValidator<FatturaElettronicaHeader>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FatturaElettronicaHeaderValidator() public FatturaElettronicaHeaderValidator()"
  },
  "api/FatturaElettronica.Validators.Semplificata.FatturaSemplificataValidator.html": {
    "href": "api/FatturaElettronica.Validators.Semplificata.FatturaSemplificataValidator.html",
    "title": "Class FatturaSemplificataValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class FatturaSemplificataValidator Namespace FatturaElettronica.Validators.Semplificata Assembly FatturaElettronica.dll public class FatturaSemplificataValidator : AbstractValidator<FatturaSemplificata>, IValidator<FatturaSemplificata>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<FatturaSemplificata> FatturaSemplificataValidator Implements IValidator<FatturaSemplificata> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<FatturaSemplificata>.Validate(FatturaSemplificata) AbstractValidator<FatturaSemplificata>.ValidateAsync(FatturaSemplificata, CancellationToken) AbstractValidator<FatturaSemplificata>.Validate(ValidationContext<FatturaSemplificata>) AbstractValidator<FatturaSemplificata>.ValidateAsync(ValidationContext<FatturaSemplificata>, CancellationToken) AbstractValidator<FatturaSemplificata>.CreateDescriptor() AbstractValidator<FatturaSemplificata>.RuleFor<TProperty>(Expression<Func<FatturaSemplificata, TProperty>>) AbstractValidator<FatturaSemplificata>.Transform<TProperty, TTransformed>(Expression<Func<FatturaSemplificata, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<FatturaSemplificata>.Transform<TProperty, TTransformed>(Expression<Func<FatturaSemplificata, TProperty>>, Func<FatturaSemplificata, TProperty, TTransformed>) AbstractValidator<FatturaSemplificata>.RuleForEach<TElement>(Expression<Func<FatturaSemplificata, IEnumerable<TElement>>>) AbstractValidator<FatturaSemplificata>.TransformForEach<TElement, TTransformed>(Expression<Func<FatturaSemplificata, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<FatturaSemplificata>.TransformForEach<TElement, TTransformed>(Expression<Func<FatturaSemplificata, IEnumerable<TElement>>>, Func<FatturaSemplificata, TElement, TTransformed>) AbstractValidator<FatturaSemplificata>.RuleSet(string, Action) AbstractValidator<FatturaSemplificata>.When(Func<FatturaSemplificata, bool>, Action) AbstractValidator<FatturaSemplificata>.When(Func<FatturaSemplificata, ValidationContext<FatturaSemplificata>, bool>, Action) AbstractValidator<FatturaSemplificata>.Unless(Func<FatturaSemplificata, bool>, Action) AbstractValidator<FatturaSemplificata>.Unless(Func<FatturaSemplificata, ValidationContext<FatturaSemplificata>, bool>, Action) AbstractValidator<FatturaSemplificata>.WhenAsync(Func<FatturaSemplificata, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaSemplificata>.WhenAsync(Func<FatturaSemplificata, ValidationContext<FatturaSemplificata>, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaSemplificata>.UnlessAsync(Func<FatturaSemplificata, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaSemplificata>.UnlessAsync(Func<FatturaSemplificata, ValidationContext<FatturaSemplificata>, CancellationToken, Task<bool>>, Action) AbstractValidator<FatturaSemplificata>.Include(IValidator<FatturaSemplificata>) AbstractValidator<FatturaSemplificata>.Include<TValidator>(Func<FatturaSemplificata, TValidator>) AbstractValidator<FatturaSemplificata>.GetEnumerator() AbstractValidator<FatturaSemplificata>.EnsureInstanceNotNull(object) AbstractValidator<FatturaSemplificata>.PreValidate(ValidationContext<FatturaSemplificata>, ValidationResult) AbstractValidator<FatturaSemplificata>.RaiseValidationException(ValidationContext<FatturaSemplificata>, ValidationResult) AbstractValidator<FatturaSemplificata>.CascadeMode AbstractValidator<FatturaSemplificata>.ClassLevelCascadeMode AbstractValidator<FatturaSemplificata>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FatturaSemplificataValidator() public FatturaSemplificataValidator()"
  },
  "api/FatturaElettronica.Validators.Semplificata.html": {
    "href": "api/FatturaElettronica.Validators.Semplificata.html",
    "title": "Namespace FatturaElettronica.Validators.Semplificata | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Namespace FatturaElettronica.Validators.Semplificata Classes AllegatiValidator AltriDatiIdentificativiValidator CedentePrestatoreValidator CessionarioCommittenteValidator DatiBeniServiziValidator DatiFatturaRettificataValidator DatiGeneraliDocumentoValidator DatiGeneraliValidator DatiIVAValidator DatiTrasmissioneValidator DenominazioneNomeCognomeValidator<T> FatturaElettronicaBodyValidator FatturaElettronicaHeaderValidator FatturaSemplificataValidator IdentificativiFiscaliValidator IscrizioneREAValidator RappresentanteFiscaleCessionarioCommittenteValidator SedeCedentePrestatoreValidator SedeCessionarioCommittenteValidator StabileOrganizzazioneValidator"
  },
  "api/FatturaElettronica.Validators.Semplificata.IdentificativiFiscaliValidator.html": {
    "href": "api/FatturaElettronica.Validators.Semplificata.IdentificativiFiscaliValidator.html",
    "title": "Class IdentificativiFiscaliValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class IdentificativiFiscaliValidator Namespace FatturaElettronica.Validators.Semplificata Assembly FatturaElettronica.dll public class IdentificativiFiscaliValidator : AbstractValidator<IdentificativiFiscali>, IValidator<IdentificativiFiscali>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<IdentificativiFiscali> IdentificativiFiscaliValidator Implements IValidator<IdentificativiFiscali> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<IdentificativiFiscali>.Validate(IdentificativiFiscali) AbstractValidator<IdentificativiFiscali>.ValidateAsync(IdentificativiFiscali, CancellationToken) AbstractValidator<IdentificativiFiscali>.Validate(ValidationContext<IdentificativiFiscali>) AbstractValidator<IdentificativiFiscali>.ValidateAsync(ValidationContext<IdentificativiFiscali>, CancellationToken) AbstractValidator<IdentificativiFiscali>.CreateDescriptor() AbstractValidator<IdentificativiFiscali>.RuleFor<TProperty>(Expression<Func<IdentificativiFiscali, TProperty>>) AbstractValidator<IdentificativiFiscali>.Transform<TProperty, TTransformed>(Expression<Func<IdentificativiFiscali, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<IdentificativiFiscali>.Transform<TProperty, TTransformed>(Expression<Func<IdentificativiFiscali, TProperty>>, Func<IdentificativiFiscali, TProperty, TTransformed>) AbstractValidator<IdentificativiFiscali>.RuleForEach<TElement>(Expression<Func<IdentificativiFiscali, IEnumerable<TElement>>>) AbstractValidator<IdentificativiFiscali>.TransformForEach<TElement, TTransformed>(Expression<Func<IdentificativiFiscali, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<IdentificativiFiscali>.TransformForEach<TElement, TTransformed>(Expression<Func<IdentificativiFiscali, IEnumerable<TElement>>>, Func<IdentificativiFiscali, TElement, TTransformed>) AbstractValidator<IdentificativiFiscali>.RuleSet(string, Action) AbstractValidator<IdentificativiFiscali>.When(Func<IdentificativiFiscali, bool>, Action) AbstractValidator<IdentificativiFiscali>.When(Func<IdentificativiFiscali, ValidationContext<IdentificativiFiscali>, bool>, Action) AbstractValidator<IdentificativiFiscali>.Unless(Func<IdentificativiFiscali, bool>, Action) AbstractValidator<IdentificativiFiscali>.Unless(Func<IdentificativiFiscali, ValidationContext<IdentificativiFiscali>, bool>, Action) AbstractValidator<IdentificativiFiscali>.WhenAsync(Func<IdentificativiFiscali, CancellationToken, Task<bool>>, Action) AbstractValidator<IdentificativiFiscali>.WhenAsync(Func<IdentificativiFiscali, ValidationContext<IdentificativiFiscali>, CancellationToken, Task<bool>>, Action) AbstractValidator<IdentificativiFiscali>.UnlessAsync(Func<IdentificativiFiscali, CancellationToken, Task<bool>>, Action) AbstractValidator<IdentificativiFiscali>.UnlessAsync(Func<IdentificativiFiscali, ValidationContext<IdentificativiFiscali>, CancellationToken, Task<bool>>, Action) AbstractValidator<IdentificativiFiscali>.Include(IValidator<IdentificativiFiscali>) AbstractValidator<IdentificativiFiscali>.Include<TValidator>(Func<IdentificativiFiscali, TValidator>) AbstractValidator<IdentificativiFiscali>.GetEnumerator() AbstractValidator<IdentificativiFiscali>.EnsureInstanceNotNull(object) AbstractValidator<IdentificativiFiscali>.PreValidate(ValidationContext<IdentificativiFiscali>, ValidationResult) AbstractValidator<IdentificativiFiscali>.RaiseValidationException(ValidationContext<IdentificativiFiscali>, ValidationResult) AbstractValidator<IdentificativiFiscali>.CascadeMode AbstractValidator<IdentificativiFiscali>.ClassLevelCascadeMode AbstractValidator<IdentificativiFiscali>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors IdentificativiFiscaliValidator() public IdentificativiFiscaliValidator()"
  },
  "api/FatturaElettronica.Validators.Semplificata.IscrizioneREAValidator.html": {
    "href": "api/FatturaElettronica.Validators.Semplificata.IscrizioneREAValidator.html",
    "title": "Class IscrizioneREAValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class IscrizioneREAValidator Namespace FatturaElettronica.Validators.Semplificata Assembly FatturaElettronica.dll public class IscrizioneREAValidator : AbstractValidator<IscrizioneREA>, IValidator<IscrizioneREA>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<IscrizioneREA> IscrizioneREAValidator Implements IValidator<IscrizioneREA> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<IscrizioneREA>.Validate(IscrizioneREA) AbstractValidator<IscrizioneREA>.ValidateAsync(IscrizioneREA, CancellationToken) AbstractValidator<IscrizioneREA>.Validate(ValidationContext<IscrizioneREA>) AbstractValidator<IscrizioneREA>.ValidateAsync(ValidationContext<IscrizioneREA>, CancellationToken) AbstractValidator<IscrizioneREA>.CreateDescriptor() AbstractValidator<IscrizioneREA>.RuleFor<TProperty>(Expression<Func<IscrizioneREA, TProperty>>) AbstractValidator<IscrizioneREA>.Transform<TProperty, TTransformed>(Expression<Func<IscrizioneREA, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<IscrizioneREA>.Transform<TProperty, TTransformed>(Expression<Func<IscrizioneREA, TProperty>>, Func<IscrizioneREA, TProperty, TTransformed>) AbstractValidator<IscrizioneREA>.RuleForEach<TElement>(Expression<Func<IscrizioneREA, IEnumerable<TElement>>>) AbstractValidator<IscrizioneREA>.TransformForEach<TElement, TTransformed>(Expression<Func<IscrizioneREA, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<IscrizioneREA>.TransformForEach<TElement, TTransformed>(Expression<Func<IscrizioneREA, IEnumerable<TElement>>>, Func<IscrizioneREA, TElement, TTransformed>) AbstractValidator<IscrizioneREA>.RuleSet(string, Action) AbstractValidator<IscrizioneREA>.When(Func<IscrizioneREA, bool>, Action) AbstractValidator<IscrizioneREA>.When(Func<IscrizioneREA, ValidationContext<IscrizioneREA>, bool>, Action) AbstractValidator<IscrizioneREA>.Unless(Func<IscrizioneREA, bool>, Action) AbstractValidator<IscrizioneREA>.Unless(Func<IscrizioneREA, ValidationContext<IscrizioneREA>, bool>, Action) AbstractValidator<IscrizioneREA>.WhenAsync(Func<IscrizioneREA, CancellationToken, Task<bool>>, Action) AbstractValidator<IscrizioneREA>.WhenAsync(Func<IscrizioneREA, ValidationContext<IscrizioneREA>, CancellationToken, Task<bool>>, Action) AbstractValidator<IscrizioneREA>.UnlessAsync(Func<IscrizioneREA, CancellationToken, Task<bool>>, Action) AbstractValidator<IscrizioneREA>.UnlessAsync(Func<IscrizioneREA, ValidationContext<IscrizioneREA>, CancellationToken, Task<bool>>, Action) AbstractValidator<IscrizioneREA>.Include(IValidator<IscrizioneREA>) AbstractValidator<IscrizioneREA>.Include<TValidator>(Func<IscrizioneREA, TValidator>) AbstractValidator<IscrizioneREA>.GetEnumerator() AbstractValidator<IscrizioneREA>.EnsureInstanceNotNull(object) AbstractValidator<IscrizioneREA>.PreValidate(ValidationContext<IscrizioneREA>, ValidationResult) AbstractValidator<IscrizioneREA>.RaiseValidationException(ValidationContext<IscrizioneREA>, ValidationResult) AbstractValidator<IscrizioneREA>.CascadeMode AbstractValidator<IscrizioneREA>.ClassLevelCascadeMode AbstractValidator<IscrizioneREA>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors IscrizioneREAValidator() public IscrizioneREAValidator()"
  },
  "api/FatturaElettronica.Validators.Semplificata.RappresentanteFiscaleCessionarioCommittenteValidator.html": {
    "href": "api/FatturaElettronica.Validators.Semplificata.RappresentanteFiscaleCessionarioCommittenteValidator.html",
    "title": "Class RappresentanteFiscaleCessionarioCommittenteValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class RappresentanteFiscaleCessionarioCommittenteValidator Namespace FatturaElettronica.Validators.Semplificata Assembly FatturaElettronica.dll public class RappresentanteFiscaleCessionarioCommittenteValidator : DenominazioneNomeCognomeValidator<RappresentanteFiscaleCessionarioCommittente>, IValidator<RappresentanteFiscaleCessionarioCommittente>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<RappresentanteFiscaleCessionarioCommittente> DenominazioneNomeCognomeValidator<RappresentanteFiscaleCessionarioCommittente> RappresentanteFiscaleCessionarioCommittenteValidator Implements IValidator<RappresentanteFiscaleCessionarioCommittente> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.Validate(RappresentanteFiscaleCessionarioCommittente) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.ValidateAsync(RappresentanteFiscaleCessionarioCommittente, CancellationToken) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.Validate(ValidationContext<RappresentanteFiscaleCessionarioCommittente>) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.ValidateAsync(ValidationContext<RappresentanteFiscaleCessionarioCommittente>, CancellationToken) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.CreateDescriptor() AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.RuleFor<TProperty>(Expression<Func<RappresentanteFiscaleCessionarioCommittente, TProperty>>) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.Transform<TProperty, TTransformed>(Expression<Func<RappresentanteFiscaleCessionarioCommittente, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.Transform<TProperty, TTransformed>(Expression<Func<RappresentanteFiscaleCessionarioCommittente, TProperty>>, Func<RappresentanteFiscaleCessionarioCommittente, TProperty, TTransformed>) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.RuleForEach<TElement>(Expression<Func<RappresentanteFiscaleCessionarioCommittente, IEnumerable<TElement>>>) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.TransformForEach<TElement, TTransformed>(Expression<Func<RappresentanteFiscaleCessionarioCommittente, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.TransformForEach<TElement, TTransformed>(Expression<Func<RappresentanteFiscaleCessionarioCommittente, IEnumerable<TElement>>>, Func<RappresentanteFiscaleCessionarioCommittente, TElement, TTransformed>) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.RuleSet(string, Action) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.When(Func<RappresentanteFiscaleCessionarioCommittente, bool>, Action) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.When(Func<RappresentanteFiscaleCessionarioCommittente, ValidationContext<RappresentanteFiscaleCessionarioCommittente>, bool>, Action) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.Unless(Func<RappresentanteFiscaleCessionarioCommittente, bool>, Action) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.Unless(Func<RappresentanteFiscaleCessionarioCommittente, ValidationContext<RappresentanteFiscaleCessionarioCommittente>, bool>, Action) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.WhenAsync(Func<RappresentanteFiscaleCessionarioCommittente, CancellationToken, Task<bool>>, Action) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.WhenAsync(Func<RappresentanteFiscaleCessionarioCommittente, ValidationContext<RappresentanteFiscaleCessionarioCommittente>, CancellationToken, Task<bool>>, Action) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.UnlessAsync(Func<RappresentanteFiscaleCessionarioCommittente, CancellationToken, Task<bool>>, Action) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.UnlessAsync(Func<RappresentanteFiscaleCessionarioCommittente, ValidationContext<RappresentanteFiscaleCessionarioCommittente>, CancellationToken, Task<bool>>, Action) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.Include(IValidator<RappresentanteFiscaleCessionarioCommittente>) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.Include<TValidator>(Func<RappresentanteFiscaleCessionarioCommittente, TValidator>) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.GetEnumerator() AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.EnsureInstanceNotNull(object) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.PreValidate(ValidationContext<RappresentanteFiscaleCessionarioCommittente>, ValidationResult) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.RaiseValidationException(ValidationContext<RappresentanteFiscaleCessionarioCommittente>, ValidationResult) AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.CascadeMode AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.ClassLevelCascadeMode AbstractValidator<RappresentanteFiscaleCessionarioCommittente>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RappresentanteFiscaleCessionarioCommittenteValidator() public RappresentanteFiscaleCessionarioCommittenteValidator()"
  },
  "api/FatturaElettronica.Validators.Semplificata.SedeCedentePrestatoreValidator.html": {
    "href": "api/FatturaElettronica.Validators.Semplificata.SedeCedentePrestatoreValidator.html",
    "title": "Class SedeCedentePrestatoreValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class SedeCedentePrestatoreValidator Namespace FatturaElettronica.Validators.Semplificata Assembly FatturaElettronica.dll public class SedeCedentePrestatoreValidator : LocalitàBaseValidator<SedeCedentePrestatore>, IValidator<SedeCedentePrestatore>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<SedeCedentePrestatore> LocalitàBaseValidator<SedeCedentePrestatore> SedeCedentePrestatoreValidator Implements IValidator<SedeCedentePrestatore> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<SedeCedentePrestatore>.Validate(SedeCedentePrestatore) AbstractValidator<SedeCedentePrestatore>.ValidateAsync(SedeCedentePrestatore, CancellationToken) AbstractValidator<SedeCedentePrestatore>.Validate(ValidationContext<SedeCedentePrestatore>) AbstractValidator<SedeCedentePrestatore>.ValidateAsync(ValidationContext<SedeCedentePrestatore>, CancellationToken) AbstractValidator<SedeCedentePrestatore>.CreateDescriptor() AbstractValidator<SedeCedentePrestatore>.RuleFor<TProperty>(Expression<Func<SedeCedentePrestatore, TProperty>>) AbstractValidator<SedeCedentePrestatore>.Transform<TProperty, TTransformed>(Expression<Func<SedeCedentePrestatore, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<SedeCedentePrestatore>.Transform<TProperty, TTransformed>(Expression<Func<SedeCedentePrestatore, TProperty>>, Func<SedeCedentePrestatore, TProperty, TTransformed>) AbstractValidator<SedeCedentePrestatore>.RuleForEach<TElement>(Expression<Func<SedeCedentePrestatore, IEnumerable<TElement>>>) AbstractValidator<SedeCedentePrestatore>.TransformForEach<TElement, TTransformed>(Expression<Func<SedeCedentePrestatore, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<SedeCedentePrestatore>.TransformForEach<TElement, TTransformed>(Expression<Func<SedeCedentePrestatore, IEnumerable<TElement>>>, Func<SedeCedentePrestatore, TElement, TTransformed>) AbstractValidator<SedeCedentePrestatore>.RuleSet(string, Action) AbstractValidator<SedeCedentePrestatore>.When(Func<SedeCedentePrestatore, bool>, Action) AbstractValidator<SedeCedentePrestatore>.When(Func<SedeCedentePrestatore, ValidationContext<SedeCedentePrestatore>, bool>, Action) AbstractValidator<SedeCedentePrestatore>.Unless(Func<SedeCedentePrestatore, bool>, Action) AbstractValidator<SedeCedentePrestatore>.Unless(Func<SedeCedentePrestatore, ValidationContext<SedeCedentePrestatore>, bool>, Action) AbstractValidator<SedeCedentePrestatore>.WhenAsync(Func<SedeCedentePrestatore, CancellationToken, Task<bool>>, Action) AbstractValidator<SedeCedentePrestatore>.WhenAsync(Func<SedeCedentePrestatore, ValidationContext<SedeCedentePrestatore>, CancellationToken, Task<bool>>, Action) AbstractValidator<SedeCedentePrestatore>.UnlessAsync(Func<SedeCedentePrestatore, CancellationToken, Task<bool>>, Action) AbstractValidator<SedeCedentePrestatore>.UnlessAsync(Func<SedeCedentePrestatore, ValidationContext<SedeCedentePrestatore>, CancellationToken, Task<bool>>, Action) AbstractValidator<SedeCedentePrestatore>.Include(IValidator<SedeCedentePrestatore>) AbstractValidator<SedeCedentePrestatore>.Include<TValidator>(Func<SedeCedentePrestatore, TValidator>) AbstractValidator<SedeCedentePrestatore>.GetEnumerator() AbstractValidator<SedeCedentePrestatore>.EnsureInstanceNotNull(object) AbstractValidator<SedeCedentePrestatore>.PreValidate(ValidationContext<SedeCedentePrestatore>, ValidationResult) AbstractValidator<SedeCedentePrestatore>.RaiseValidationException(ValidationContext<SedeCedentePrestatore>, ValidationResult) AbstractValidator<SedeCedentePrestatore>.CascadeMode AbstractValidator<SedeCedentePrestatore>.ClassLevelCascadeMode AbstractValidator<SedeCedentePrestatore>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/FatturaElettronica.Validators.Semplificata.SedeCessionarioCommittenteValidator.html": {
    "href": "api/FatturaElettronica.Validators.Semplificata.SedeCessionarioCommittenteValidator.html",
    "title": "Class SedeCessionarioCommittenteValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class SedeCessionarioCommittenteValidator Namespace FatturaElettronica.Validators.Semplificata Assembly FatturaElettronica.dll public class SedeCessionarioCommittenteValidator : LocalitàBaseValidator<SedeCessionarioCommittente>, IValidator<SedeCessionarioCommittente>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<SedeCessionarioCommittente> LocalitàBaseValidator<SedeCessionarioCommittente> SedeCessionarioCommittenteValidator Implements IValidator<SedeCessionarioCommittente> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<SedeCessionarioCommittente>.Validate(SedeCessionarioCommittente) AbstractValidator<SedeCessionarioCommittente>.ValidateAsync(SedeCessionarioCommittente, CancellationToken) AbstractValidator<SedeCessionarioCommittente>.Validate(ValidationContext<SedeCessionarioCommittente>) AbstractValidator<SedeCessionarioCommittente>.ValidateAsync(ValidationContext<SedeCessionarioCommittente>, CancellationToken) AbstractValidator<SedeCessionarioCommittente>.CreateDescriptor() AbstractValidator<SedeCessionarioCommittente>.RuleFor<TProperty>(Expression<Func<SedeCessionarioCommittente, TProperty>>) AbstractValidator<SedeCessionarioCommittente>.Transform<TProperty, TTransformed>(Expression<Func<SedeCessionarioCommittente, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<SedeCessionarioCommittente>.Transform<TProperty, TTransformed>(Expression<Func<SedeCessionarioCommittente, TProperty>>, Func<SedeCessionarioCommittente, TProperty, TTransformed>) AbstractValidator<SedeCessionarioCommittente>.RuleForEach<TElement>(Expression<Func<SedeCessionarioCommittente, IEnumerable<TElement>>>) AbstractValidator<SedeCessionarioCommittente>.TransformForEach<TElement, TTransformed>(Expression<Func<SedeCessionarioCommittente, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<SedeCessionarioCommittente>.TransformForEach<TElement, TTransformed>(Expression<Func<SedeCessionarioCommittente, IEnumerable<TElement>>>, Func<SedeCessionarioCommittente, TElement, TTransformed>) AbstractValidator<SedeCessionarioCommittente>.RuleSet(string, Action) AbstractValidator<SedeCessionarioCommittente>.When(Func<SedeCessionarioCommittente, bool>, Action) AbstractValidator<SedeCessionarioCommittente>.When(Func<SedeCessionarioCommittente, ValidationContext<SedeCessionarioCommittente>, bool>, Action) AbstractValidator<SedeCessionarioCommittente>.Unless(Func<SedeCessionarioCommittente, bool>, Action) AbstractValidator<SedeCessionarioCommittente>.Unless(Func<SedeCessionarioCommittente, ValidationContext<SedeCessionarioCommittente>, bool>, Action) AbstractValidator<SedeCessionarioCommittente>.WhenAsync(Func<SedeCessionarioCommittente, CancellationToken, Task<bool>>, Action) AbstractValidator<SedeCessionarioCommittente>.WhenAsync(Func<SedeCessionarioCommittente, ValidationContext<SedeCessionarioCommittente>, CancellationToken, Task<bool>>, Action) AbstractValidator<SedeCessionarioCommittente>.UnlessAsync(Func<SedeCessionarioCommittente, CancellationToken, Task<bool>>, Action) AbstractValidator<SedeCessionarioCommittente>.UnlessAsync(Func<SedeCessionarioCommittente, ValidationContext<SedeCessionarioCommittente>, CancellationToken, Task<bool>>, Action) AbstractValidator<SedeCessionarioCommittente>.Include(IValidator<SedeCessionarioCommittente>) AbstractValidator<SedeCessionarioCommittente>.Include<TValidator>(Func<SedeCessionarioCommittente, TValidator>) AbstractValidator<SedeCessionarioCommittente>.GetEnumerator() AbstractValidator<SedeCessionarioCommittente>.EnsureInstanceNotNull(object) AbstractValidator<SedeCessionarioCommittente>.PreValidate(ValidationContext<SedeCessionarioCommittente>, ValidationResult) AbstractValidator<SedeCessionarioCommittente>.RaiseValidationException(ValidationContext<SedeCessionarioCommittente>, ValidationResult) AbstractValidator<SedeCessionarioCommittente>.CascadeMode AbstractValidator<SedeCessionarioCommittente>.ClassLevelCascadeMode AbstractValidator<SedeCessionarioCommittente>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/FatturaElettronica.Validators.Semplificata.StabileOrganizzazioneValidator.html": {
    "href": "api/FatturaElettronica.Validators.Semplificata.StabileOrganizzazioneValidator.html",
    "title": "Class StabileOrganizzazioneValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class StabileOrganizzazioneValidator Namespace FatturaElettronica.Validators.Semplificata Assembly FatturaElettronica.dll public class StabileOrganizzazioneValidator : LocalitàBaseValidator<StabileOrganizzazione>, IValidator<StabileOrganizzazione>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<StabileOrganizzazione> LocalitàBaseValidator<StabileOrganizzazione> StabileOrganizzazioneValidator Implements IValidator<StabileOrganizzazione> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<StabileOrganizzazione>.Validate(StabileOrganizzazione) AbstractValidator<StabileOrganizzazione>.ValidateAsync(StabileOrganizzazione, CancellationToken) AbstractValidator<StabileOrganizzazione>.Validate(ValidationContext<StabileOrganizzazione>) AbstractValidator<StabileOrganizzazione>.ValidateAsync(ValidationContext<StabileOrganizzazione>, CancellationToken) AbstractValidator<StabileOrganizzazione>.CreateDescriptor() AbstractValidator<StabileOrganizzazione>.RuleFor<TProperty>(Expression<Func<StabileOrganizzazione, TProperty>>) AbstractValidator<StabileOrganizzazione>.Transform<TProperty, TTransformed>(Expression<Func<StabileOrganizzazione, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<StabileOrganizzazione>.Transform<TProperty, TTransformed>(Expression<Func<StabileOrganizzazione, TProperty>>, Func<StabileOrganizzazione, TProperty, TTransformed>) AbstractValidator<StabileOrganizzazione>.RuleForEach<TElement>(Expression<Func<StabileOrganizzazione, IEnumerable<TElement>>>) AbstractValidator<StabileOrganizzazione>.TransformForEach<TElement, TTransformed>(Expression<Func<StabileOrganizzazione, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<StabileOrganizzazione>.TransformForEach<TElement, TTransformed>(Expression<Func<StabileOrganizzazione, IEnumerable<TElement>>>, Func<StabileOrganizzazione, TElement, TTransformed>) AbstractValidator<StabileOrganizzazione>.RuleSet(string, Action) AbstractValidator<StabileOrganizzazione>.When(Func<StabileOrganizzazione, bool>, Action) AbstractValidator<StabileOrganizzazione>.When(Func<StabileOrganizzazione, ValidationContext<StabileOrganizzazione>, bool>, Action) AbstractValidator<StabileOrganizzazione>.Unless(Func<StabileOrganizzazione, bool>, Action) AbstractValidator<StabileOrganizzazione>.Unless(Func<StabileOrganizzazione, ValidationContext<StabileOrganizzazione>, bool>, Action) AbstractValidator<StabileOrganizzazione>.WhenAsync(Func<StabileOrganizzazione, CancellationToken, Task<bool>>, Action) AbstractValidator<StabileOrganizzazione>.WhenAsync(Func<StabileOrganizzazione, ValidationContext<StabileOrganizzazione>, CancellationToken, Task<bool>>, Action) AbstractValidator<StabileOrganizzazione>.UnlessAsync(Func<StabileOrganizzazione, CancellationToken, Task<bool>>, Action) AbstractValidator<StabileOrganizzazione>.UnlessAsync(Func<StabileOrganizzazione, ValidationContext<StabileOrganizzazione>, CancellationToken, Task<bool>>, Action) AbstractValidator<StabileOrganizzazione>.Include(IValidator<StabileOrganizzazione>) AbstractValidator<StabileOrganizzazione>.Include<TValidator>(Func<StabileOrganizzazione, TValidator>) AbstractValidator<StabileOrganizzazione>.GetEnumerator() AbstractValidator<StabileOrganizzazione>.EnsureInstanceNotNull(object) AbstractValidator<StabileOrganizzazione>.PreValidate(ValidationContext<StabileOrganizzazione>, ValidationResult) AbstractValidator<StabileOrganizzazione>.RaiseValidationException(ValidationContext<StabileOrganizzazione>, ValidationResult) AbstractValidator<StabileOrganizzazione>.CascadeMode AbstractValidator<StabileOrganizzazione>.ClassLevelCascadeMode AbstractValidator<StabileOrganizzazione>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/FatturaElettronica.Validators.StabileOrganizzazioneValidator.html": {
    "href": "api/FatturaElettronica.Validators.StabileOrganizzazioneValidator.html",
    "title": "Class StabileOrganizzazioneValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class StabileOrganizzazioneValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class StabileOrganizzazioneValidator : LocalitàBaseValidator<StabileOrganizzazione>, IValidator<StabileOrganizzazione>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<StabileOrganizzazione> LocalitàBaseValidator<StabileOrganizzazione> StabileOrganizzazioneValidator Implements IValidator<StabileOrganizzazione> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<StabileOrganizzazione>.Validate(StabileOrganizzazione) AbstractValidator<StabileOrganizzazione>.ValidateAsync(StabileOrganizzazione, CancellationToken) AbstractValidator<StabileOrganizzazione>.Validate(ValidationContext<StabileOrganizzazione>) AbstractValidator<StabileOrganizzazione>.ValidateAsync(ValidationContext<StabileOrganizzazione>, CancellationToken) AbstractValidator<StabileOrganizzazione>.CreateDescriptor() AbstractValidator<StabileOrganizzazione>.RuleFor<TProperty>(Expression<Func<StabileOrganizzazione, TProperty>>) AbstractValidator<StabileOrganizzazione>.Transform<TProperty, TTransformed>(Expression<Func<StabileOrganizzazione, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<StabileOrganizzazione>.Transform<TProperty, TTransformed>(Expression<Func<StabileOrganizzazione, TProperty>>, Func<StabileOrganizzazione, TProperty, TTransformed>) AbstractValidator<StabileOrganizzazione>.RuleForEach<TElement>(Expression<Func<StabileOrganizzazione, IEnumerable<TElement>>>) AbstractValidator<StabileOrganizzazione>.TransformForEach<TElement, TTransformed>(Expression<Func<StabileOrganizzazione, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<StabileOrganizzazione>.TransformForEach<TElement, TTransformed>(Expression<Func<StabileOrganizzazione, IEnumerable<TElement>>>, Func<StabileOrganizzazione, TElement, TTransformed>) AbstractValidator<StabileOrganizzazione>.RuleSet(string, Action) AbstractValidator<StabileOrganizzazione>.When(Func<StabileOrganizzazione, bool>, Action) AbstractValidator<StabileOrganizzazione>.When(Func<StabileOrganizzazione, ValidationContext<StabileOrganizzazione>, bool>, Action) AbstractValidator<StabileOrganizzazione>.Unless(Func<StabileOrganizzazione, bool>, Action) AbstractValidator<StabileOrganizzazione>.Unless(Func<StabileOrganizzazione, ValidationContext<StabileOrganizzazione>, bool>, Action) AbstractValidator<StabileOrganizzazione>.WhenAsync(Func<StabileOrganizzazione, CancellationToken, Task<bool>>, Action) AbstractValidator<StabileOrganizzazione>.WhenAsync(Func<StabileOrganizzazione, ValidationContext<StabileOrganizzazione>, CancellationToken, Task<bool>>, Action) AbstractValidator<StabileOrganizzazione>.UnlessAsync(Func<StabileOrganizzazione, CancellationToken, Task<bool>>, Action) AbstractValidator<StabileOrganizzazione>.UnlessAsync(Func<StabileOrganizzazione, ValidationContext<StabileOrganizzazione>, CancellationToken, Task<bool>>, Action) AbstractValidator<StabileOrganizzazione>.Include(IValidator<StabileOrganizzazione>) AbstractValidator<StabileOrganizzazione>.Include<TValidator>(Func<StabileOrganizzazione, TValidator>) AbstractValidator<StabileOrganizzazione>.GetEnumerator() AbstractValidator<StabileOrganizzazione>.EnsureInstanceNotNull(object) AbstractValidator<StabileOrganizzazione>.PreValidate(ValidationContext<StabileOrganizzazione>, ValidationResult) AbstractValidator<StabileOrganizzazione>.RaiseValidationException(ValidationContext<StabileOrganizzazione>, ValidationResult) AbstractValidator<StabileOrganizzazione>.CascadeMode AbstractValidator<StabileOrganizzazione>.ClassLevelCascadeMode AbstractValidator<StabileOrganizzazione>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/FatturaElettronica.Validators.TerzoIntermediarioOSoggettoEmittenteValidator.html": {
    "href": "api/FatturaElettronica.Validators.TerzoIntermediarioOSoggettoEmittenteValidator.html",
    "title": "Class TerzoIntermediarioOSoggettoEmittenteValidator | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Class TerzoIntermediarioOSoggettoEmittenteValidator Namespace FatturaElettronica.Validators Assembly FatturaElettronica.dll public class TerzoIntermediarioOSoggettoEmittenteValidator : AbstractValidator<TerzoIntermediarioOSoggettoEmittente>, IValidator<TerzoIntermediarioOSoggettoEmittente>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<TerzoIntermediarioOSoggettoEmittente> TerzoIntermediarioOSoggettoEmittenteValidator Implements IValidator<TerzoIntermediarioOSoggettoEmittente> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.Validate(TerzoIntermediarioOSoggettoEmittente) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.ValidateAsync(TerzoIntermediarioOSoggettoEmittente, CancellationToken) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.Validate(ValidationContext<TerzoIntermediarioOSoggettoEmittente>) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.ValidateAsync(ValidationContext<TerzoIntermediarioOSoggettoEmittente>, CancellationToken) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.CreateDescriptor() AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.RuleFor<TProperty>(Expression<Func<TerzoIntermediarioOSoggettoEmittente, TProperty>>) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.Transform<TProperty, TTransformed>(Expression<Func<TerzoIntermediarioOSoggettoEmittente, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.Transform<TProperty, TTransformed>(Expression<Func<TerzoIntermediarioOSoggettoEmittente, TProperty>>, Func<TerzoIntermediarioOSoggettoEmittente, TProperty, TTransformed>) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.RuleForEach<TElement>(Expression<Func<TerzoIntermediarioOSoggettoEmittente, IEnumerable<TElement>>>) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.TransformForEach<TElement, TTransformed>(Expression<Func<TerzoIntermediarioOSoggettoEmittente, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.TransformForEach<TElement, TTransformed>(Expression<Func<TerzoIntermediarioOSoggettoEmittente, IEnumerable<TElement>>>, Func<TerzoIntermediarioOSoggettoEmittente, TElement, TTransformed>) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.RuleSet(string, Action) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.When(Func<TerzoIntermediarioOSoggettoEmittente, bool>, Action) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.When(Func<TerzoIntermediarioOSoggettoEmittente, ValidationContext<TerzoIntermediarioOSoggettoEmittente>, bool>, Action) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.Unless(Func<TerzoIntermediarioOSoggettoEmittente, bool>, Action) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.Unless(Func<TerzoIntermediarioOSoggettoEmittente, ValidationContext<TerzoIntermediarioOSoggettoEmittente>, bool>, Action) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.WhenAsync(Func<TerzoIntermediarioOSoggettoEmittente, CancellationToken, Task<bool>>, Action) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.WhenAsync(Func<TerzoIntermediarioOSoggettoEmittente, ValidationContext<TerzoIntermediarioOSoggettoEmittente>, CancellationToken, Task<bool>>, Action) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.UnlessAsync(Func<TerzoIntermediarioOSoggettoEmittente, CancellationToken, Task<bool>>, Action) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.UnlessAsync(Func<TerzoIntermediarioOSoggettoEmittente, ValidationContext<TerzoIntermediarioOSoggettoEmittente>, CancellationToken, Task<bool>>, Action) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.Include(IValidator<TerzoIntermediarioOSoggettoEmittente>) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.Include<TValidator>(Func<TerzoIntermediarioOSoggettoEmittente, TValidator>) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.GetEnumerator() AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.EnsureInstanceNotNull(object) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.PreValidate(ValidationContext<TerzoIntermediarioOSoggettoEmittente>, ValidationResult) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.RaiseValidationException(ValidationContext<TerzoIntermediarioOSoggettoEmittente>, ValidationResult) AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.CascadeMode AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.ClassLevelCascadeMode AbstractValidator<TerzoIntermediarioOSoggettoEmittente>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TerzoIntermediarioOSoggettoEmittenteValidator() public TerzoIntermediarioOSoggettoEmittenteValidator()"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Add your introductions here!"
  },
  "docs/authors.html": {
    "href": "docs/authors.html",
    "title": "Autori | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Autori FatturaElettronica.NET è un progetto open source aperto alla collaborazione di tutti. Lo sviluppo avviene su GitHub. Autore e maintainer Nicola Iarocci Collaboratori Claudio Lepri Diego Artusio Diego Martelli Emanuele Curati Emanuele Zavallone Fabio Calvigioni Federico Dipuma Gaetano Pizzol Luca Borghini Luca Marcato Marco Checchin Marco Saltarelli Marco Tessitore Massimo Linossi Michael Mairegger Paolo Manili Paolo Tatoli Puma Seba ZephirPFS47 gminutillo ilserd username77"
  },
  "docs/changelog.html": {
    "href": "docs/changelog.html",
    "title": "Changelog | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Changelog In Development hic sunt leones Stable v 4.0.4 Released on September 17, 2025 fix: la fix introdotta con v4.0.3 per la validazione di PECDestinatario non copriva tutti i casi (#440) v 4.0.3 Released on September 2, 2025 fix: migliorata validazione PECDestinatario (#439) v 4.0.2 Released on September 1, 2025 fix: verifica codice IBAN imprecisa (#438) Aggiunto riferimento a Invoicetronic come progetto \"gemello\" di FatturaElettronica.NET per la gestione completa della fatturazione elettronica in Italia. v 4.0.1 Released on June 18, 2025 fix: if the input stream Position is not 0, and it is seekable, it will be rewound to Position 0 #436 v 4.0.0 Released on June 16, 2025 BREAKING: attempting to read Tampered documents will now invariably throw SignatureException #434 CI: do not execute the 'test' action on tag pushes (the 'publish' action includes tests) chore: we're switching to the English language for CHANGELOG updates. v 3.6.3 Released on May 6, 2025 fix: traduzione Inglese allineata a quella ufficiale (#432) fix: README typos. v 3.6.2 Released on April 2, 2025 -fix: non includere GitHub workflows nel package, per davvero. v 3.6.1 Released on March 17, 2025 fix: non includere GitHub workflows nel package. new: supporto per lingua Inglese (#430). v 3.6.0 Released on February 24, 2025 new: supporto per le specifiche tecniche v1.9, in vigore dal 1 Aprile 2025 (#426) new: icona per il nuget package, finalmente. new: package creato e pubblicato via CI. fix: UnitaMisura è opzionale (#427) fix: CI test workflow deve girare su .NET 8 v 3.5.2 Released on January 7, 2025 fix: IVA oltre 100% non deve passare la convalida (#424) fix: CVE 2024 30105 (#423) fix: rimuovere reference a BouncyCastle nella documentazione (#422) v 3.5.1 Released on September 30, 2024 fix: multi-lingua, migliorata accessibilità dei Resource file generati (#420) v 3.5.0 Released on September 30, 2024 new: supporto multi-lingua (#417). v 3.4.16 Released on July 25, 2024 Abbandonata dipendenza da Portable.BouncyCastle (#414) Bump Microsoft.NET.Test.Sdk a v17.6.2 Bump MSTest.TestAdapter a v3.4.3 Bump MSTest.TestFramework a v3.4.3 v 3.4.15 Released on May 24, 2024 Fix: Nazione, valore di default non viene de-serializzato da XML (#413) v 3.4.14 Released on March 14, 2024 Fix: CVE-2023-29331. (#411) Fix: GiorniTerminiPagamento, NumeroColli, RiferimentoNumeroLinea, RiferimentoFase devono accettare solo valori inclusi nei rispettivi range numerici. (#410) v 3.4.13 Released on January 8, 2024 Fix: Controllo 00473: recepite novità introdotte dalle specifiche v1.8 (#407) v 3.4.12 Released on December 5, 2023 Fix: Controllo validità campi Email e PEC (#405) Fix: CI workflow file rilasciato col package nuget (#404) v 3.4.11 Released on October 27, 2023 Fix: DettaglioLinee.NumeroLinea deve consentire solo valori da 1 a 9999 (#403) v 3.4.10 Released on August 3, 2023 Fix: Scarto Fattura se presenta uno sconto a 3+ cifre decimali (#401) Fix: typos nella documentazione (#399) v 3.4.9 Released on June 19, 2023 Fix: Microsoft Security Advisory CVE-2023-29331: .NET Denial of Service vulnerability Fix: Improper Handling of Exceptional Conditions in Newtonsoft.Json Fix: .NET Core Information Disclosure Fix: Regular Expression Denial of Service in System.Text.RegularExpressions v 3.4.8 Released on May 2, 2023 Fix: Se IdFiscaleIva di Cessionario e Cedente corrispondono, la fattura deve convalidare anche se in Cessionario è assente il codice fiscale. (#396) v 3.4.7 Released on April 5, 2023 Fix: controlli 00423 e 00421: tolleranza di 1 centesimo deve essere 'larga' (#394) Test suite ora gira su .NET 7 CI: aggiornate GitHub actions per non usare più Node 12, ora obsoleto v 3.4.6 Released on October 28, 2022 Fix: controllo 00472; supporto per ditta individuale che si fattura un prodotto (#388) v 3.4.5 Released on October 14, 2022 Fix: controllo 00471; recepite novità introdotte dalle specifiche v1.8 (#387) Fix: controllo 00476; supporto per Cessionario.IdFiscaleIva non indicato (#386) Fix: controllo 00473; TD28 può essere usato solo se IdPaese del cedente è uguale a \"SM\" (#385) v3.4.4 Released on October 1, 2022 Fix: errore nella validazione dei controlli 00401 e 00430 introdotto in v3.4.3 (#384) v3.4.3 Released on October 1, 2022 Fix: aggiornati i controlli 00401 e 00430 affinché escludano i documenti TD16 (#382) v3.4.2 Released on September 27, 2022 Fix: Aggiornato messaggio di errore per il controllo 00472 (#381) v 3.4.1 Released on September 26, 2022 Fix: correzione segnalazioni Controlli 00471 e 00473 (#378 e #379) v 3.4 Released on September 9, 2022 Questa beta release recepisce le specifiche tecniche v1.7.1 che entreranno in vigore il 1 Ottobre 2022. Per maggiori informazioni vedi il ticket (#376). New: introdotto nuovo controllo sulle fatture con codice errore 00476 (#376). New: TD28, acquisti da San Marino con IVA (fattura cartacea) (#376). Fix: modificato il criterio di controllo per l'errore 00472 (#376). Fix: modificato il criterio di controllo per l’errore 00471 per i tipi documento TD01, TD02,TD03,TD06,TD24,TD25 e TD28 (fattura ordinaria) e TD07 (fattura semplificata) (#376). Fix: aggiornata descrizione dei codici di errore 00401, 00430, 00473, 00475 (#376). Fix: aggiornata descrizione della Natura N7 (#376). v 3.3.4 Released on August 4, 2022 'EL' (Grecia) aggiunto ai valori convalidati per IdPaese, in alternativa a 'GR' (#374). 'OO' (Campione d'Italia e Livigno) aggiunto ai valori convalidati per IdPaese (#370). v 3.3.3 Released on July 11, 2022 Fix: CodiceFiscale con caratteri minuscoli non deve passare la convalida (#373) CI ora gira su dotnet 6. Bump FluentValidation a v11.1.0 Bump System.Security.Cryptography.Pkcs a v6.0.1 Bump System.Text.Json a v6.0.5 v 3.3.2 Released on May 24, 2022 Fix: WriteHtml crea un file temporaneo che non viene eliminato in seguito (#371) v 3.3.1 Released on April 6, 2022 Fix: CodiceArticolo va convalidato come LatinExtType (#368) v 3.3.0 Released on February 25, 2022 New: supporto per tag 'Processing Instructions' in de-serializzazione XML (#367) Fix: link rotto alle specifiche tecniche (#362) Migrazione a System.Text.Json (#360) Rimosso badge dependabot dal README v 3.2.0 Released on November 25, 2021 Questa versione si allinea alle regole di convalida in vigore dal 1 Gennaio 2022. Allentata convalida dei campi Email (#358) Introdotta convalida per nuovo errore 00475 (#354) Aggiornata descrizione per i tipi documento TD25 e TD25 (#354) Aggiornata descrizione per il codice natura N6.2 (#354) Fix: ToJson() usa nome sbagliato per proprietà RappresentanteFiscale (#359) Fix: ripristinato un setter rimosso nella v3.1.5 (#346) Aggiornata dipendenza FluentValidation a 10.3.4 (#337) Aggiornata dipendenza Newtonsoft.Json a 13.0.1 Aggiornata dipendenza System.Security.Cryptography.Pkcs to 6.0.0 Aggiornata dipendenza Portable.BouncyCastle to 1.9.0 v 3.1.5 Released on May 14, 2021 Risolo problema deserializzazione Json per la classe Allegati (#344) v 3.1.4 Released on March 21, 2021—Codename 'Spring' Fix: il codice per Irlanda del Nord è XI, non IX (#314) v 3.1.3 Released on March 19, 2021 Aggiunto supporto per il valore IX (Irlanda del Nord) al campo IdPaese (#314) v 3.1.2 Released on February 20, 2021 Rimosso warning di obsolescenza in preparazione per FluentValidation 10 (#321) Risolto problema di compatibilità con FluentValidation 9.5.1 (#320) Aggiornata dipendenza FluentValidation a 9.5.1 v 3.1.1 Released on January 25, 2021 Convalida TipoResa allineata a specifiche Incoterms 2020 (#313) Validazione CAP: deve contenere solo valori numerici (#310) v 3.1.0 Released on December 30, 2020 Questa versione si allinea alle regole di convalida in vigore dal 1 Gennaio 2021. Rimosso supporto per valori N2, N3, N6 per il campo DatiRiepiloto.Natura (#307) Aggiunta convalida per errore 00313 (#300) Defaults.RootElement.ExtraAttributes diventa una read-write property (#303) Defaults.RootElement.Prefix diventa una read-write property (#303) Migrazione CI dà Azure Pipelines a GitHub Actions (ubuntu-latest, windows-latest, macos-latest) (#298) Impostato target framework della test suite a net5.0 (#295) Aggiornata dipendenza Portable.BouncyCastle a 1.8.9 Aggiornata dipendenza Microsoft.NET.Test.Sdk a 16.8.3 Aggiornata dipendenza FluentValidation a 9.3.0 Aggiornata dipendenza System.Security.Cryptography.Pkcs a 5.0.1 v 3.0.5 Released on November 26, 2020 Fix: SistemaEmittente non va serializzato come elemento XML (#294) Fix: rimossa convalida DatiRiepilogo.RiferimentoNormativo è richiesto quando Natura è valorizzato (#284) v 3.0.4 Released on November 3, 2020 Fix: Migliorata la validazione errore 00444 in DatiRiepilogo (#287) Fix: Migliorata la validazione errore 00443 in DatiRiepilogo (#281) Fix: Aggiornato attributo SchemaLocation (#282, #286) Fix: Supporto per SistemaEmittente in deserializzazione (#278) Fix: DatiRiepilogo.RiferimentoNormativo è richiesto quando Natura è valorizzato (#284) Aggiornata dipendenza FluentValidation a 9.2.2 Aggiornata dipendenza Newtonsoft.Json a 12.0.3 Aggiornata dipendenza BouncyCastle a 1.8.8 Aggiornata dipendenza MSTest.TestFramework a 2.1.2 Aggiornata dipendenza MSTest.TestAdapter a 2.1.2 Aggiornata dipendenza Microsoft.NET.Test.Sdk a 16.7.1 Abbandonata dipendenza obsoleta da System.Xml.XmlSerializer v 3.0.3 Released on August 25, 2020 Fix: I tipi decimali dovrebbero essere convalidati per verificare che abbiano 2 o 11 decimali (#275) Fix: CodiceDestinatario dovrebbe essere maiuscolo e non contenere altri caratteri al di fuori di A-Z 0-9 (#272) v 3.0.2 Released on July 7, 2020 Aggiornata dipendenza FluentValidation a 9.0 (#271) v 3.0.1 Released on July 6, 2020 Fix: Validazione per errore 00444 dovrebbe tenere conto dei valori null (#269) v 3.0 Released on June 5, 2020 Fix: CessionarioCommittente.IdFiscaleIva va convalidato solo quando valorizzato (#263) v 3.0-beta.6 Released on May 21, 2020 Passaggio a C# 8.0 e (piccolo) refactoring. v 3.0-beta.5 Released on April 20, 2020 Tabella CausalePagamento accetta valori Y, K,V2,Z durante il periodo di transizione (#259) v 3.0-beta.4 Released on April 15, 2020 CreateInstanceFromXml accetta argomento validateSignature con default a false (#258) v 3.0-beta.3 Released on April 9, 2020 CreateInstanceFromXml ora leggere anche file firmati digitalmente (.p7m) (#256) Incorporato FatturaElettronica.Core (#255) Incorporato FatturaElettronica.Extensions (#255) Persa dipendenza da FatturaElettronica.Core (#255) Persa dipendenza da FatturaElettronica.Extensions (#255) Ricordarsi di rimuovere le dipendenze da FatturaElettronica.Extensions e FatturaElettronica.Core. La API di FatturaElettronica.Core, ora incorporata in questo package, è stata spostata dal namespace FatturaElettronica.Common a FatturaElettronica.Core. v 3.0-beta.2 Released on April 6, 2020 Fix: NullReferenceException nel metodo Equals (Core#42) Aggiornata dipendenza FatturaElettronica.Core a 2.0.1. v 3.0-beta.1 Released on March 20, 2020 Supporto per le specifiche tecniche v1.6 aggiornate il 28.2.2020 e utilizzabili a partire dal 4 maggio 2020. Si veda: Allegato A - Specifiche tecniche versione 1.6 (pdf) v 2.1.1 Released on March 20, 2020 Fix: Attributo schemaLocation causava problemi con alcuni client Java. (#250) v 2.1.0 Released on February 7, 2020 New: FatturaBase.CreateInstanceFromXml() carica stream XML e restituisce una istanza di FatturaOrdinaria o FatturaSemplificata (#240) Fix: Semplificata.DatiBeniServizi.DatiIVA: Aliquota o Importo obbligatori (#238) Fix: Semplificata.CessionarioCommittente.IdFiscaleIva va convalidato se valorizzato (#242) v2.0.8 Released on December 2, 2019 Fix: convalida fattura semplificata, importo massimo portato a 400 euro (#233) v2.0.7 Released on November 28, 2019 Fix: errore nell'ordine dei campi CedentePrestatore in fattura semplificata (#220) Test suite aggiornata a NetCore 3.0 Fix: refuso in TOC.md (#221) Fix: Aggiunto il Kosovo alla tabella IdPaese (#214) Tutorial: Aggiunto IgnoreProcessingInstructions a XmlReaderSettings per evitare crash quando nodi \"processing instructions\" (es: xml-stylesheet) sono presenti nel XML. (#209) v2.0.6 Released on May 24, 2019 Fix: FatturaSemplificata convalidata con TipoDocumento valido per Ordinaria (#205) Fix: FatturaSemplificata convalidata con Natura valida per Ordinaria (#205) Fix: Validazione AltriDatiIdentificativi in FatturaSemplificata (#203) Fix: UnitaMisura vuota deve sollevare errore di validazione (#204) Fix: DatiFatturaRettificata.DataFR dovrebbe essere nullabile (#200) Fix: CausalePagamento: ZO e M2 sostituiti rispettivamente da Z e M (#191) v2.0.5 Released on April 23, 2019 Fix: validatore CausalePagamento da aggiornare per unico 2019 (#191) Test refactoring and cleanup. v2.0.4 Released on April 16, 2019 Fix: falso errore 00418 \"Data antecedente a data fattura rettificata\" (#190) Aggiunto badge NuGet al README (#188) LatinBaseValidator ora indica quali sono i caratteri non accettati (#185) v2.0.3 Released on April 8, 2019 Fix: errore validazione DettaglioLinee.TotalPrice (#181) Refactoring: classe Allegati spostata in FatturaElettronica.Common (#179) Docs: aggiunto folder docs con documentazione progetto. v2.0.2 Released on March 19, 2019 Fix: il root node della fattura semplificata ha il namespace sbagliato. Addresses #176. v2.0.1 Released on March 19, 2019 Fix: il root node della fattura semplificata ha il nome sbagliato. Closes #176. v2.0 Released on March 13, 2019 New: Supporto per fattura semplificata (Gaetano Pizzol). Closes #137. BREAKING: classe Fattura (Fattura.cs) rinominata FatturaOrdinaria (Ordinaria/FatturaOrdinaria.cs). BREAKING: gerarchia di classi per fattura ordinaria spostata nel namespace FatturaElettronica.Ordinaria. Fix: warning NU5125: The 'licenseUrl' element will be deprecated. Closes #166. Fix: Proprietà di tipo oggetto opzionali sollevano \"Object reference not set to an instance of an object\" quando nulle. Closes #165. Fix: DatiTrasporto.PesoLordo e DatiTrasporto.PesoNetto non possono superare il valore 9999.99m. Closes #157. Bump FatturaElettronica.Core a 2.0. Bump Microsoft.NET.Test.Sdk to 16.0.1. Bump FluentValidation to 8.1.3. Bump Newtonsoft.Json to 12.0.1. Bump MSTest.TestAdapter to 1.4.0 Bump MSTest.TestFramework to 1.4.0 Switch CI da AppVeyor ad Azure Pipelines. v1.1.5 Released on February 2, 2019 Fix: Tabella CausalePagamento aggiornata al 2019. Closes #151. v1.1.4 Released on January 31, 2019 Fix: ScontoMaggiorazione può accettare sia Importo che Percentuale. Closes #146. Fix: IdPaese.Irlanda è duplicato mentre Islanda è assente. Closes #144. README: aggiunto esempio di inserimento elemento Body. Addresses #141. v1.1.3 Released on January 23, 2019 New: nuovo logo per il progetto FatturaElettronica, by Roberto \"Kalamun\" Pasini. Closes 101. Fix: Link obsoleto alle specifiche tecniche ufficiali. Closes #139. Fix: ScontoMaggiorazione deve accettare Importo o Percentuale a 0. Addresses #136. Fix: ScontoMaggiorazione non deve accettare Importo e Percentuale entrambi valorizzati. Addresses #136. v1.1.2 Released on January 21, 2019 Fix: Validazione ScontoMaggiorazione dovrebbe accettare Importo o Percentuale a 0. Closes #136. v1.1.1 Released on January 17, 2019 Fix: Tabella CausalePagamento completata coi nomi di ogni pagamento (Michael Mairegger). Pull #127. Fix: Convalida Provincia non conforme ai controlli lato AgEntrate. Closes #129. Fix: CessionarioCommittente.RappresentanteFiscale, errore \"sequenza tag errata\". Closes #133. Fix: Supporto per 8 decimali nel PrezzoUnitario (Claudio Lepri). Pull #130; Closes #125. Bump FatturaElettronica.Core a 1.1.1. v1.1 Released on January 6, 2019 New: NetStandard 2.0 aggiunto ai target framework (Federico Dipuma). Closes #119. New: costruttore classe Fattura ora è pubblico. Closes #99. New: performance migliorata (Federico Dipuma). See #120. Fix: Quantità non può assumere valore negativo. Closes #115. Fix: Small typos. Closes #116. v1.0.4 Released on January 2, 2019 Fix: Aggiunta \"Sud Sardegna\" alla lista provincie (Massimo Linossi). Pull #111. v1.0.3 Released on December 30, 2018 Fix: UnitaMisura è opzionale. Addresses #102. v1.0.2 Released on December 20, 2018. Fix: Titolo e CodEORI ignorano ordinamento. Closes #103. Fix: controllo UnitaMisura consente campo vuoto. Closes #102. v1.0.1 Released on November 9, 2018. Bump: FatturaElettronica.Core to 1.0. v1.0 Released on November 9, 2018. BREAKING: proprietà Fattura.Header rinominata in FatturaElettronicaHeader. Closes #83. BREAKING: proprietà Fattura.Body rinominata in FatturaElettronicaBody. Closes #83. BREAKING: namespace FatturaElettronica.Impostazioni rinominato FatturaElettronica.Defaults. Fix: Aggiornati codici INCOTERMS (Marco Tessitore). Pull #89; Pull #91. Fix: Rimosso controllo 00426 su campo PECDestinatario (Gaetano Pizzol). Pull #88. Fix: Anagrafica.CognomeNome non deve essere serializzato in JSON. Closes #86. Fix: DettaglioPagamento.IBAN deve essere formalmente corretto. Closes #84. Fix: Campo RiferimentoNumero dovrebbe essere opzionale (Gaetano Pizzol). Pull #82. Fix: Aggiunto setter mancante a DettaglioLinee.AltriDatiGestionali. Addresses #81. Fix: Header e Body vanno JSON-serializzati come FatturaElettronicaHeader e FatturaElettronicaBody. Closes #83. Bump: FatturaElettronica.Core to 0.5. Bump: Newtonsoft.Json to 11.0.2. Bump: MSTest.TestFramework to 1.3.2. Bump: MSTest.TestAdapter to 1.3.2. Bump: Microsoft.NET.Test.Sdk to 15.9.0. v0.9 Released on October 26, 2018. New: FromJson() de-serializza stream JSON. Fix: PECDestinatario può essere vuoto quando CodiceDestinatario è 0000000. Closes #75. Fix: Le proprietà di tipo Class non sono scrivibili. Closes #76. Fix: ToJson() serializza proprietà che non dovrebbero comparire nel JON. I test ora girano come app NetCore 2.1. Addresses FatturaElettronica/FatturaElettronica.Core#4. v0.8.5 Released on October 16, 2018. New: Validazione errore 00426 per campo 1.1.6 PECDestinatario. Closes #74. Fix: errore descrizione in RegimeFiscale \"RF17\". Closes #72. Fix: \"Nullable object must have a value\" in validazione di blocco ScontoMaggiorazione con Importo = 0. Closes #71. v0.8.4 Released on October 4, 2018. Upgrade: FluentValidation to v8.0.100. v0.8.3 Released on October 2, 2018. Fix: DettaglioLineeValidator: 00423 non supporta tolleranza di 1 centesimo. Closes #66. v0.8.2 Released on October 1, 2018. FatturaElettronica.Core dependency bumped to v0.2. Cleanup and refactoring: use auto-properties; remove unnecessary usings. v0.8.1 Rilasciata il 4.7.2018 Fix: errore lunghezza PECDestinatario in v0.8. Closes #58. v0.8 Rilasciata il 3.7.2018 Recepite specifiche tecniche Allegato A del 22.6.2018. Closes #52. New: rimossi controlli su campo PECDestinatario. Addresses #52. New: supporto per TipoDocumento TD020 autofattura. Addresses #52 Passata la test suite da NET461 a NETCore. Closes #57. v0.7 Rilasciata il 4.10.2017 Spostata serializzazione su package indipendente FatturaElettronica.Core. Abbandonato il profilo PCL in favore di NetStandard 1.1. v0.6.3 Rilasciata il 17.7.2017 Fix: RappresentanteFiscale viene erroneamente serializzato come 'Rappresentante' causando errore convalida 200 da parte del sistema PA. Closes #49. README: Aggiunta opzione IgnoreComments a XmlReader per evitare crash nel caso di commenti nel XML. Closes #45. v0.6.2 Rilasciata il 23.5.2017. Fix: Falso errore di convalida 00423 quando PrezzoTotale è valorizzato con piu di due decimali. Closes #45. v0.6.1 Rilasciata il 5.5.2017. Fix: Falso errore di convalida 00415 quando DatiCassaPrevidenziale è valorizzato ma non ha Ritenuta=\"SI\". Closes #44. v0.6.0 Rilasciata il 27.4.2017. Assembly non più strong-named. Closes #41. README: aggiunti esempi di introspezione e modifica degli elementi FatturaElettronicaBody. Closes #38. v0.5.1 Rilasciata il 26.4.2017. Fix: Errore 00421 non tiene conto della tolleranza garantita di 0.01 centesimi. Closes #43. v0.5.0 Rilasciata il 30.3.2017. Questa versione recepisce le modifiche introdotte con la v1.2.1 delle specifiche tecniche PA. Regime Fiscale RF03 è abrogato. Viene restituito errore 00459 se utilizzato. Natura N5: descrizione aggiornata a \"regime del margine / IVA non esposta in fattura\". Le proprietà e Nome della classe astratta Tabella non sono più protette in scrittura. v0.4.3 Rilasciata il 23.3.2017. Fix: Validazione conformità gruppi IsBasicLatin e IsLatin-1Supplement. Closes #29. Fix: Non includere il folder Artwork nel package NuGet. Closes #37. v0.4.2 Rilasciata il 17.3.2017. Fix: Convalida DatiCassaPrevidenziale.Natura va fatta solo quando Aliquota uguale a zero. Closes #36. v0.4.1 Rilasciata il 14.3.2017. Fix: Nomi delle nazioni ISO-3166 Alpha 2 sono in Inglese. Closes #35. Fix: Elementi FatturaElettronicaBody sono serializzati come 'Body'. Closes #34. Aggiunto file .editconfig v0.4.0 Rilasciata il 9.3.2017. Rinominata classe FatturaElettronica in Fattura. Rinominata classe FatturaElettronicaHeader in Header. Rinominata classe FatturaElettronicaBody in Body. Rinominata proprietà Fattura.FatturaElettronicaHeader in Fattura.Header. Rinominata proprietà Fattura.FatturaElettronicaBody in Fattura.Body. Alcune classi spostate da FatturaElettronica.Common a FatturaElettronica.Tabelle Classe BusinessObjects.BusinessObjectBase rinominata FatturaElettronica.BaseClass. Classe BusinessObjects.BusinessObject rinominata FatturaElettronica.BaseClassSerializable. Classe FatturaElettronica.Common.BusinessObject eliminata. Persa dipendenza dal package BusinessObjects. Acquisita dipendenza dal package FluentValidation. Aggiunto namespace FatturaElettronica.Validators. Aggiunta serie di classi dedicate alla convalida (FatturaValidator; HeaderValidator; ecc.) Rimosso metodo IsValid(). Al suo posto usare proprietà ValidationResult.IsValid. Rimossa proprietà Error. Al suo posto usare ValidationFailure.Errors. Nuovo extension method Fattura.Validate(). Equivalente a FatturaValidator.Validate() (shortcut). Consultare il README per esempi di codice aggiornati. v0.3.7 Rilasciata il 7.3.2017. Fix: Errore in convalida del campo Riferimento Testo: sono consentiti fino a 60 caratteri. Closes #33. v0.3.6 Rilasciata il 10.2.2017. Aggiunto supporto per .NET Core. Abbandonato supporto per .NET Framework 4.0 e Silverlight. Fix: Falso negativo (errore 423) in convalida DettaglioLinee. Closes #31. Fix: Correzione messaggio di errore per Divisa non corretta (Fabio Calvigioni). v0.3.5 Rilasciata il 2.2.2017. Fix: Crash con ScontoMaggiorazione.Importo non impostato (null). Closes #28. v0.3.4 Rilasciata il 1.2.2017. Fix: Crash quando ScontoMaggiorazione.Importo ha valore negativo. Closes #27. v0.3.3 Rilasciata il 18.1.2017. Fix: Consenti serializzazione di valori numerici fino a 5 decimali (minimo 2). Fix: Arrotonda valori numerici fino a 5 decimali (minimo 2). v0.3.2 Rilasciata il 17.1.2017. Fix: Convalida errore 00415. Se almeno un DatiCassaPrevidenziale ha Ritenuta = \"SI\", allora DatiRitenuta deve essere valorizzato. Closes #22. Fix: Convalida errore 00411. Se almeno un DettaglioLinee ha Ritenuta = \"SI\", allora DatiRitenuta deve essere valorizzato. Closes #22. Fix: Convalida errore 00423 nel caso di campo Quantità a null. Closes #20. v0.3.1 Rilasciata il 16.1.2017. New: aggiunte proprietà Sigla e Sigle[] alla classe FormatoTrasmissione New: aggiunta proprietà Descrizione alla classe FormatoTrasmissione v0.3 Rilasciata il 13.1.2017 BREAKING CHANGES Questa release introduce una serie di cambianti importanti che rompono la compatibilità con l'API precedente. Il package NuGet cambia nome. Ora si chiama FatturaElettronica (era FatturaElettronicaPA). Il namespace diventa FatturaElettronica (era FatturaElettronicaPA) Il package FatturaElettronicaPA verrà marcato come obsoleto su NuGet. Il costruttore della classe FatturaElettronica è ora protetto. Usare il factory method CreateInstance() per ottenere una istanza della classe. CreateInstance() consente di scegliere se ottenere una fattura tra soggetti privati o per la Pubblica Amministrazione. La fattura restituita da CreateInstance() ha già il campo FormatoTrasmissione correttamente impostato a FPA12 o FPR12. Nel caso di fattura tra privati, per default la fattura ha il CodiceDestinatario impostato a \"0000000\" (sarà cura del utente impostare in seguito il nuovo campo PECDestinatario o aggiornare il CodiceDestinatario col codice canale del destinatario) Altre modifiche New: attributo xmlns:ds nel root elemento del documento xml. New: attributo xmlns:xsi nel root elemento del documento xml. New: attributo xsi:schemaLocation nel root elemento del documento xml. New: campo 1.4.4 RappresentanteFiscale. New: campo 1.4.3 StabileOrganizzazione. New: campo 1.1.6 PECDestinatario e relative convalide. Fix: modificato campo 2.4.2.13 IBAN per recepire da 15 a 34 caratteri. Fix: aggiunto valore N7 ai campi 2.2.2.2 e 2.1.1.7.7 Natura. Fix: aggiunto valore MP22 al campo 2.4.2.2 ModalitaPagamento. Fix: campo 1.1.4 FormatoTrasmissione supporta valori FPA12 (Pubblica Amministrazione) e FPR12 (Privati) Fix: campo 1.1.4 CodiceDestinatario, adeguate le convalide per tenere conto del FormatoTrasmissione impostato. Aggiunta la test suite. Mancano test delle convalide implementate prima della v0.3. v0.2.6 Rilasciata il 13.1.2017 Questa release serve solo a segnalare su NuGet che FatturaElettronicaPA è obsoleto. Scaricare e installare il package FatturaElettronica v0.3 e successivi da ora in poi. v0.2.5 Rilasciata il 17.6.2016 Fix: PrezzoTotale ora prevede tolleranza \"accettabile\" su seconda cifra decimale. Closes #19. v0.2.4 Rilasciata il 25.5.2016 Fix: Validazione 00423: calcolo in base a percentuale sconto. Closes #18. v0.2.3 Rilasciata il 24.5.2016 Fix: Serializzare valori decimali con piu' di 2 decimali. v0.2.2 Rilasciata il 24.5.2016 New: Errore 00400 aggiunto alla convalida. New: Errore 00401 aggiunto alla convalida. Fix: Errore 00424 non consente aliquota IVA impostata al valore 1. v0.2.1 Rilasciata il 23.5.2016 New: Errore 00422, aggiunta tolleranza di 1 Euro come da specifiche PA aggiornate. v0.2 Rilasciata il 20.5.2016 New: Errore 00418 aggiunto alla convalida. Addresses #16. New: Errore 00419 aggiunto alla convalida. Addresses #16. New: Errore 00420 aggiunto alla convalida. Addresses #16. New: Errore 00421 aggiunto alla convalida. Addresses #16. New: Errore 00422 aggiunto alla convalida. Addresses #16. New: Errore 00423 aggiunto alla convalida. Closes #17. Addresses #16. New: Errore 00424 aggiunto alla convalida. Addresses #16. New: Errore 00425 aggiunto alla convalida. Addresses #16. v0.1.8 Rilasciata il 24.8.2015 Fix: 2.1.8.3 RiferimentoNumeroLinea in deserializzazione manda applicazione in loop. Closes #14. v0.1.7 Rilasciata il 7.8.2015 Fix: 2.1.9.4 NumeroColli in deserializzazione si ha errore conversione Nullable. Closes #12. Fix: 2.4.2.4 GiorniTerminiPagamento in deserializzazione si ha errore conversione Nullable. Closes #12. Upgrade to BusinessObjects v0.1.4 v0.1.6 Rilasciata il 31.7.2015 Upgrade to BusinessObjects v0.1.3 New: Convalida per 2.1.1.11 Causale. Fix: 2.1.2.1 RiferimentoNumeroLinea non gestito come lista 0..N, ma come valore singolo. Fix: 2.1.2.1 RiferimentoNumeroLinea in deserializzazione si ha errore conversione Nullable. Closes #9. Fix: 2.1.1.11 Causale. Se sono presenti 2+ righe allora il codice va in loop. Closes #8. Fix: Crash in deserializzazione di tag XML vuoti (es: <ContattiTrasmittente />). Closes #7. Fix: 2.1.9.13 DataOraConsegna serializza a MinValue quando non valorizzato. Closes #10. Fix: 2.2.1.16.4 RiferimentoData serializza a MinValue quando non valorizzato. Fix: 2.4.2.5 DataScadenzaPagamento serializza a MinValue quando non valorizzato. Closes #10. Fix: 2.4.2.18 DataLimitePagamentoAnticipato è di tipo errato (decimal? invece di DateTime?). v0.1.5 Rilasciata il 15.7.2015 Fix: 2.2.1.10.1 ScontoMaggiorazione.Tipo: convalida valori corretti SC e MG. Fix: 2.4.2.2 ModalitaPagamento: non veniva convalidato valore MP05. v0.1.4 Rilasciata il 14.7.2015 Upgrade to BusinessObject v0.1.2 Fix: Convalida di FatturaElettronicaBody. Chiude #4. v0.1.3 Rilasciata il 7.4.2015 Upgrade to BusinessObject v0.1.1 Upgrade to Json.NET v6.0.8 Fix: ReadXML crash su valori Decimal? v0.1.2 Rilasciata il 16.2.2015 Supporto per valori L1, M1, O1, V1 per DatiRitenuta.CausalePagamento. Risolto problema col validatore di DatiRitenuta.CausalePagamento. Supporto per valore RF19 per campo RegimeFiscale. v0.1.1 Rilasciata il 16.2.2015 Supporto per Split Payment. v0.1 Rilasciata il 9.2.2015 Release iniziale."
  },
  "docs/extensions.html": {
    "href": "docs/extensions.html",
    "title": "Extensions | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Extensions Il namespace FatturaElettronica.Extensions mette a disposizione una serie di extension method che aggiungono funzionalità o semplificano il lavoro quotidiano con le fatture elettroniche. XML ReadXml(string filePath): deserializza da file XML; ReadXml(Stream stream): deserializza da stream; ReadXmlSigned(string filePath): deserializza da XML firmato con algoritmo CADES (.p7m). Supporta anche file codificati Base64; ReadXmlSigned(Stream stream): deserializza da stream firmato con algoritmo CADES (.p7m). Supporta anche file codificati Base64; ReadXmlSignedBase64(string filePath): consigliato quando si sa in anticipo che il file è codificato Base64; WriteXml(string filePath): serializza su file XML non firmato; WriteXmlSigned(string pfxFile, string pfxPassword, string p7mFilePath): serializza su file XML, firmando con algoritmo CADES (.p7m); HTML WriteHtml(string outPath, string xslPath): crea un HTML con rappresentazione della fattura, usando un foglio di stile; JSON FromJson(string json): deserializza da JSON; Altro FatturaElettronicaFileNameGenerator: classe per la generazione di nomi file conformi allo standard fattura elettronica. Note A partire dalla v3 di FatturaElettronica le Extensions sono incluse nel package principale e non più rilasciate come package a parte."
  },
  "docs/faq.html": {
    "href": "docs/faq.html",
    "title": "Domande frequenti | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Domande frequenti Quali lingue sono supportate? Al momento Italiano e Tedesco. Vuoi aggiungere la tua lingua? Apri una pull request. Non si installa su NET Framework 3.5 Questo progetto è NetStandard 2.0. Supporta NET Framework v4.6.1 o superiori. Non si installa su NET Framework 4.5 Questo progetto è NetStandard 2.0. Supporta NET Framework v4.6.1 o superiori. Verrà mai aggiunto il supporto per Net Framework 3.5? No. Verrà mai aggiunto il supporto per Net Framework 4.5? Versioni precedenti alla 3.0 supportano NET45, ma sono probabilmente obsolete. Non pensiamo di tornare a supportare NET45 in futuro. Che fine ha fatto FatturaElettronica.Extensions? È stato incorporato nel package FatturaElettronica a partire dalla versione 3. Che fine ha fatto il FatturaElettronica.Core? È stato incorporato nel package FatturaElettronica a partire dalla versione 3."
  },
  "docs/index.html": {
    "href": "docs/index.html",
    "title": "Fattura Elettronica per .NET | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Fattura Elettronica per .NET Caratteristiche Lettura e scrittura nel formato XML conforme alle specifiche tecniche ufficiali. Convalida offline in osservanza alle specifiche tecniche. Fatture elettroniche ordinarie. Fatture elettroniche semplificate. De/serializzazione JSON. Supporto multi-lingua. Compatibile con NET Standard v2.0. Installazione FatturaElettronica è su NuGet. Dalla command line, con .NET Core: dotnet add package FatturaElettronica Dalla Package Console, in Visual Studio: PM> Install-Package FatturaElettronica Oppure usare il comando equivalente nella UI di Visual Studio. Licenza Fattura Elettronica è un progetto di Nicola Iarocci per Invoicetronic. È libero, sviluppato in pubblico, aperto alla collaborazione di tutti. Documentazione Sito web Invoicetronic API La REST API di riferimento per la fatturazione elettronica in Italia. Dagli stessi autori di FatturaElettronica.NET, Invoicetronic API ti consente di integrare facilmente app l'intero ciclo di gestione della fattura elettronica: invio, ricezione, applicazione di firme digitali, validazione preventiva, notifiche via webhook, log degli eventi, varie opzioni di upload, integrazione LLM via MCP server e altro, il tutto su una piattaforma moderna che astrae le complessità di SDI/FatturaPA. Invoicetronic include client SDK open-source per i linguaggi di programmazione più diffusi, comandi CLI per lo scripting, una completa documentazione OpenAPI e un ambiente Sandbox gratuito. Visita il sito Invoicetronic per saperne di più. Powered by"
  },
  "docs/tutorial.html": {
    "href": "docs/tutorial.html",
    "title": "Guida all'uso | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Guida all'uso Sono supportate sie fatture ordinarie che seplificate. Qui viene usata una FatturaOrdinaria, ma gli esempi sono validi quasi sempre anche per una instanza di FatturaSemplificata. Instanziare la fattura var fattura = new FatturaOrdinaria(); // In alternativa usare CreateInstance() per ottenere una istanza già tipizzata. // Questa chiamata restituisce fattura con CodiceDestinatario = \"0000000\" // FormatoTrasmissione = \"FPR12\": fattura = FatturaOrdinaria.CreateInstance(Instance.Privati); Caricare la fattura da XML // Lettura da file XML var readerSettings = new XmlReaderSettings { IgnoreWhitespace = true, IgnoreComments = true, IgnoreProcessingInstructions = true }; using (var r = XmlReader.Create(\"IT01234567890_12345.xml\", readerSettings)) { fattura.ReadXml(r); } In alternativa CreateInstanceFromXml restituisce una istanza di FatturaOrdinaria o FatturaSemplificata a seconda dei contenuti del file: using var stream = new FileStream(\"IT02182030391_31.xml.p7m\", FileMode.Open, FileAccess.Read); var fattura = FatturaBase.CreateInstanceFromXml(stream); Console.WriteLine(fattura.GetFormatoTrasmissione()); // \"FSM10\" CreateInstanceFromXml supporta sia file XML puri (.xml) che firmati digitalmente (.p7m), eventualmente anche codificati Base64. Questa comodità ha un costo, ovvero un leggero impatto sulle prestazioni in quanto è necessaria una pre-scasione dello stream per determinarne il formato e la tipologia di fattura. Consultare la fattura // Ogni file di fattura contiene un array di elementi FatturaElettronicaBody. Console.WriteLine($\"Numero documenti: {fattura.FatturaElettronicaBody.Count}.\"); // Iterazione documenti presenti nel file. Console.WriteLine(\"Documenti inclusi nel file FatturaPA:\"); foreach (var doc in fattura.FatturaElettronicaBody) { var datiDocumento = doc.DatiGenerali.DatiGeneraliDocumento; Console.WriteLine($\"Numero: {datiDocumento.Numero}\"); Console.WriteLine($\"Data: {datiDocumento.Data.ToShortDateString()}\"); Console.WriteLine($\"Importo totale: {datiDocumento.ImportoTotaleDocumento}\"); Console.WriteLine(); } Convalidare la fattura // Convalida del documento. var validator = new FatturaOrdinariaValidator(); var result = validator.Validate(fattura); Console.WriteLine(result.IsValid); // Introspezione errori di convalida. foreach (var error in result.Errors) { Console.WriteLine(error.PropertyName); Console.WriteLine(error.ErrorMessage); // ErrorCode conterrà il codice errore (es: \"00423\"). Console.WriteLine(error.ErrorCode); } // Per brevità è possibile usare un extension method. result = fattura.Validate(); Console.WriteLine(result.IsValid); // Sono disponibili validatori per ogni classe esposta da FatturaElettronica. var anagrafica = new DatiAnagraficiCedentePrestatore(); var anagraficaValidator = new DatiAnagraficiCedentePrestatoreValidator(); Console.WriteLine(anagraficaValidator.Validate(anagrafica).IsValid); // Oppure, come già visto: Console.WriteLine(anagrafica.Validate().IsValid); Modificare e aggiungere elementi alla fattura // Modifica proprietà Header. var header = fattura.FatturaElettronicaHeader; header.CedentePrestatore.DatiAnagrafici.Anagrafica.Denominazione = \"Bianchi Srl\"; // Modifica proprietà Body var body = fattura.FatturaElettronicaBody[0]; body.DatiGenerali.DatiGeneraliDocumento.Numero = \"12345\"; // Aggiunta di un nuovo elemento Body. body = new FatturaElettronicaBody(); body.DatiGenerali.DatiGeneraliDocumento.Numero = \"99\"; fattura.FatturaElettronicaBody.Add(body); Salvare la fattura su XML // Serializzazione XML var writerSettings = new XmlWriterSettings { Indent = true }; using (var w = XmlWriter.Create(\"IT01234567890_FPA01.xml\", writerSettings)) { fattura.WriteXml(w); } Scrittura e lettura da JSON // Serializzazione JSON. var json = fattura.ToJson(JsonOptions.Indented); Console.WriteLine(json); // Deserializzazione da JSON. var fatturaFromJson = new FatturaOrdinaria(); fatturaFromJson.FromJson(new JsonTextReader(new StringReader(json))); Esempio completo using FatturaElettronica.Ordinaria; using FatturaElettronica.Common; using FatturaElettronica.Defaults; using FatturaElettronica.Validators; using FatturaElettronica.Ordinaria.FatturaElettronicaBody; using FatturaElettronica.Ordinaria.FatturaElettronicaHeader.CedentePrestatore; using System; using System.Xml; using System.IO; using Newtonsoft.Json; using FatturaElettronica; namespace DemoApp { class Program { static void Main(string[] args) { var fattura = new FatturaOrdinaria(); // In alternativa usare CreateInstance() per ottenere una istanza già tipizzata. // Questa chiamata restituisce fattura con CodiceDestinatario = \"0000000\" // FormatoTrasmissione = \"FPR12\": fattura = FatturaOrdinaria.CreateInstance(Instance.Privati); // Lettura da file XML var readerSettings = new XmlReaderSettings { IgnoreWhitespace = true, IgnoreComments = true, IgnoreProcessingInstructions = true }; using (var r = XmlReader.Create(\"IT01234567890_12345.xml\", readerSettings)) { fattura.ReadXml(r); } // Ogni file di fattura contiene un array di elementi FatturaElettronicaBody. Console.WriteLine($\"Numero documenti: {fattura.FatturaElettronicaBody.Count}.\"); // Iterazione documenti presenti nel file. Console.WriteLine(\"Documenti inclusi nel file FatturaPA:\"); foreach (var doc in fattura.FatturaElettronicaBody) { var datiDocumento = doc.DatiGenerali.DatiGeneraliDocumento; Console.WriteLine($\"Numero: {datiDocumento.Numero}\"); Console.WriteLine($\"Data: {datiDocumento.Data.ToShortDateString()}\"); Console.WriteLine($\"Importo totale: {datiDocumento.ImportoTotaleDocumento}\"); Console.WriteLine(); } // Convalida del documento. var validator = new FatturaOrdinariaValidator(); var result = validator.Validate(fattura); Console.WriteLine(result.IsValid); // Introspezione errori di convalida. foreach (var error in result.Errors) { Console.WriteLine(error.PropertyName); Console.WriteLine(error.ErrorMessage); // ErrorCode conterrà il codice errore (es: \"00423\"). Console.WriteLine(error.ErrorCode); } // Per brevità è possibile usare un extension method. result = fattura.Validate(); Console.WriteLine(result.IsValid); // Sono disponibili validatori per ogni classe esposta da FatturaElettronica. var anagrafica = new DatiAnagraficiCedentePrestatore(); var anagraficaValidator = new DatiAnagraficiCedentePrestatoreValidator(); Console.WriteLine(anagraficaValidator.Validate(anagrafica).IsValid); // Oppure, come già visto: Console.WriteLine(anagrafica.Validate().IsValid); // Modifica proprietà Header. var header = fattura.FatturaElettronicaHeader; header.CedentePrestatore.DatiAnagrafici.Anagrafica.Denominazione = \"Bianchi Srl\"; // Modifica proprietà Body var body = fattura.FatturaElettronicaBody[0]; body.DatiGenerali.DatiGeneraliDocumento.Numero = \"12345\"; // Aggiunta di un nuovo elemento Body. body = new FatturaElettronicaBody(); body.DatiGenerali.DatiGeneraliDocumento.Numero = \"99\"; fattura.FatturaElettronicaBody.Add(body); // Serializzazione XML var writerSettings = new XmlWriterSettings { Indent = true }; using (var w = XmlWriter.Create(\"IT01234567890_FPA01.xml\", writerSettings)) { fattura.WriteXml(w); } // Serializzazione JSON. var json = fattura.ToJson(JsonOptions.Indented); Console.WriteLine(json); // Deserializzazione da JSON. var fatturaFromJson = new FatturaOrdinaria(); fatturaFromJson.FromJson(new JsonTextReader(new StringReader(json))); } } } Limitazioni In convalida non sono supportati gli errori di tipo 3xx in quanto risultato dei riscontri fatti da PA sui propri server. In lettura di file firmati, non è possibile leggere con successo file la cui firma digitale o il contenuto siano stati alterati, e si riceverà un SignatureException, indipendentemente dall'impostazione del parametro validate nei metodi ReadXMLSigned e CreateInstanceFromXml"
  },
  "index.html": {
    "href": "index.html",
    "title": "La Fattura Elettronica per .NET | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "La Fattura Elettronica per .NET FatturaElettronica è una libreria open source per .NET che permette di leggere, scrivere, e convalidare offline la Fattura Elettronica secondo le specifiche del sistema di interscambio della Pubblica Amministrazione Italiana. Fattura Elettronica è un progetto creato da Nicola Iarocci per Invoicetronic che lo ha rilasciato al pubblico con licenza open source. Fattura Elettronica è libero, sviluppato in pubblico, ed aperto alla collaborazione di tutti. I progetti di Fattura Elettronica per .NET FatturaElettronica È la libreria pricipale. Offre una gerarchia di classi per la gestione completa di fatture ordinarie e semplificate. Un sistema di convalida offline consente di verificare che le istanze siano conformi alle regole di convalida previste dallo standard. Gli oggetti possono essere letti e scritti sia in formato XML che JSON. Dalla versione 3 FatturaElettronica.NET include il core e le estensioni per il supporto dei file con firma digitale ed altro. Documentazione GitHub (sviluppo, tickets) FatturaElettronica.Forms Espone un Windows Form per la compilazione del Header della fattura oltre che per la convalida e il salvataggio della fattura elettronica. GitHub (sviluppo, tickets) Invoicetronic API La REST API di riferimento per la fatturazione elettronica in Italia. Dagli stessi autori di FatturaElettronica.NET, Invoicetronic API ti consente di integrare facilmente app l'intero ciclo di gestione della fattura elettronica: invio, ricezione, applicazione di firme digitali, validazione preventiva, notifiche via webhook, log degli eventi, varie opzioni di upload, integrazione LLM via MCP server e altro, il tutto su una piattaforma moderna che astrae le complessità di SDI/FatturaPA. Invoicetronic include client SDK open-source per i linguaggi di programmazione più diffusi, comandi CLI per lo scripting, una completa documentazione OpenAPI e un ambiente Sandbox gratuito. Visita il sito Invoicetronic per saperne di più."
  },
  "README.html": {
    "href": "README.html",
    "title": "Documentation for FatturaElettronica.NET | Fattura Elettronica Open Source per piattaforme .NET",
    "keywords": "Documentation for FatturaElettronica.NET Make sure docfx is installed Build with make build-upload make build-upload will pull the latest updates from FatturaElettronica.NET submodule, then build the documentation, then commit and push the updates."
  }
}